
vaja9.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000a474  00080000  00080000  00010000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0008a474  0008a474  0001a474  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     00000da4  20070000  0008a47c  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000108  20070da4  0008b220  00020da4  2**2
                  ALLOC
  4 .stack        00002004  20070eac  0008b328  00020da4  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  00020da4  2**0
                  CONTENTS, READONLY
  6 .comment      000000ae  00000000  00000000  00020dcd  2**0
                  CONTENTS, READONLY
  7 .debug_info   0003141f  00000000  00000000  00020e7b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00008557  00000000  00000000  0005229a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 000011a8  00000000  00000000  0005a7f8  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000010e0  00000000  00000000  0005b9a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  0001a623  00000000  00000000  0005ca80  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00014d02  00000000  00000000  000770a3  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0006805f  00000000  00000000  0008bda5  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00003e24  00000000  00000000  000f3e04  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    0000db25  00000000  00000000  000f7c28  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <exception_table>:
   80000:	b0 2e 07 20 b5 24 08 00 ad 24 08 00 ad 24 08 00     ... .$...$...$..
   80010:	ad 24 08 00 ad 24 08 00 ad 24 08 00 00 00 00 00     .$...$...$......
	...
   8002c:	ad 24 08 00 ad 24 08 00 00 00 00 00 ad 24 08 00     .$...$.......$..
   8003c:	91 02 08 00 ad 24 08 00 ad 24 08 00 ad 24 08 00     .....$...$...$..
   8004c:	ad 24 08 00 ad 24 08 00 ad 24 08 00 ad 24 08 00     .$...$...$...$..
   8005c:	ad 24 08 00 7d 1f 08 00 ad 24 08 00 00 00 00 00     .$..}....$......
   8006c:	ad 24 08 00 ad 24 08 00 ad 24 08 00 ad 24 08 00     .$...$...$...$..
	...
   80084:	ad 24 08 00 ad 24 08 00 ad 24 08 00 ad 24 08 00     .$...$...$...$..
   80094:	ad 24 08 00 ad 24 08 00 ad 24 08 00 ad 24 08 00     .$...$...$...$..
   800a4:	00 00 00 00 ad 24 08 00 51 0c 08 00 ad 24 08 00     .....$..Q....$..
   800b4:	ad 24 08 00 ad 24 08 00 ad 24 08 00 ad 24 08 00     .$...$...$...$..
   800c4:	ad 24 08 00 ad 24 08 00 ad 24 08 00 ad 24 08 00     .$...$...$...$..
   800d4:	ad 24 08 00 ad 24 08 00 ad 24 08 00 ad 24 08 00     .$...$...$...$..
   800e4:	ad 24 08 00 ad 24 08 00 ad 24 08 00 ad 24 08 00     .$...$...$...$..

000800f4 <deregister_tm_clones>:
   800f4:	4803      	ldr	r0, [pc, #12]	; (80104 <deregister_tm_clones+0x10>)
   800f6:	4b04      	ldr	r3, [pc, #16]	; (80108 <deregister_tm_clones+0x14>)
   800f8:	4283      	cmp	r3, r0
   800fa:	d002      	beq.n	80102 <deregister_tm_clones+0xe>
   800fc:	4b03      	ldr	r3, [pc, #12]	; (8010c <deregister_tm_clones+0x18>)
   800fe:	b103      	cbz	r3, 80102 <deregister_tm_clones+0xe>
   80100:	4718      	bx	r3
   80102:	4770      	bx	lr
   80104:	0008a47c 	.word	0x0008a47c
   80108:	0008a47c 	.word	0x0008a47c
   8010c:	00000000 	.word	0x00000000

00080110 <register_tm_clones>:
   80110:	4805      	ldr	r0, [pc, #20]	; (80128 <register_tm_clones+0x18>)
   80112:	4906      	ldr	r1, [pc, #24]	; (8012c <register_tm_clones+0x1c>)
   80114:	1a09      	subs	r1, r1, r0
   80116:	1089      	asrs	r1, r1, #2
   80118:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
   8011c:	1049      	asrs	r1, r1, #1
   8011e:	d002      	beq.n	80126 <register_tm_clones+0x16>
   80120:	4b03      	ldr	r3, [pc, #12]	; (80130 <register_tm_clones+0x20>)
   80122:	b103      	cbz	r3, 80126 <register_tm_clones+0x16>
   80124:	4718      	bx	r3
   80126:	4770      	bx	lr
   80128:	0008a47c 	.word	0x0008a47c
   8012c:	0008a47c 	.word	0x0008a47c
   80130:	00000000 	.word	0x00000000

00080134 <__do_global_dtors_aux>:
   80134:	b510      	push	{r4, lr}
   80136:	4c06      	ldr	r4, [pc, #24]	; (80150 <__do_global_dtors_aux+0x1c>)
   80138:	7823      	ldrb	r3, [r4, #0]
   8013a:	b943      	cbnz	r3, 8014e <__do_global_dtors_aux+0x1a>
   8013c:	f7ff ffda 	bl	800f4 <deregister_tm_clones>
   80140:	4b04      	ldr	r3, [pc, #16]	; (80154 <__do_global_dtors_aux+0x20>)
   80142:	b113      	cbz	r3, 8014a <__do_global_dtors_aux+0x16>
   80144:	4804      	ldr	r0, [pc, #16]	; (80158 <__do_global_dtors_aux+0x24>)
   80146:	f3af 8000 	nop.w
   8014a:	2301      	movs	r3, #1
   8014c:	7023      	strb	r3, [r4, #0]
   8014e:	bd10      	pop	{r4, pc}
   80150:	20070da4 	.word	0x20070da4
   80154:	00000000 	.word	0x00000000
   80158:	0008a47c 	.word	0x0008a47c

0008015c <frame_dummy>:
   8015c:	b508      	push	{r3, lr}
   8015e:	4b04      	ldr	r3, [pc, #16]	; (80170 <frame_dummy+0x14>)
   80160:	b11b      	cbz	r3, 8016a <frame_dummy+0xe>
   80162:	4904      	ldr	r1, [pc, #16]	; (80174 <frame_dummy+0x18>)
   80164:	4804      	ldr	r0, [pc, #16]	; (80178 <frame_dummy+0x1c>)
   80166:	f3af 8000 	nop.w
   8016a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
   8016e:	e7cf      	b.n	80110 <register_tm_clones>
   80170:	00000000 	.word	0x00000000
   80174:	20070da8 	.word	0x20070da8
   80178:	0008a47c 	.word	0x0008a47c

0008017c <NVIC_SetPriority>:

    \param [in]      IRQn  Interrupt number.
    \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
   8017c:	b480      	push	{r7}
   8017e:	b083      	sub	sp, #12
   80180:	af00      	add	r7, sp, #0
   80182:	4603      	mov	r3, r0
   80184:	6039      	str	r1, [r7, #0]
   80186:	71fb      	strb	r3, [r7, #7]
  if(IRQn < 0) {
   80188:	f997 3007 	ldrsb.w	r3, [r7, #7]
   8018c:	2b00      	cmp	r3, #0
   8018e:	da0b      	bge.n	801a8 <NVIC_SetPriority+0x2c>
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
   80190:	683b      	ldr	r3, [r7, #0]
   80192:	b2da      	uxtb	r2, r3
   80194:	490c      	ldr	r1, [pc, #48]	; (801c8 <NVIC_SetPriority+0x4c>)
   80196:	79fb      	ldrb	r3, [r7, #7]
   80198:	f003 030f 	and.w	r3, r3, #15
   8019c:	3b04      	subs	r3, #4
   8019e:	0112      	lsls	r2, r2, #4
   801a0:	b2d2      	uxtb	r2, r2
   801a2:	440b      	add	r3, r1
   801a4:	761a      	strb	r2, [r3, #24]
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
}
   801a6:	e009      	b.n	801bc <NVIC_SetPriority+0x40>
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   801a8:	683b      	ldr	r3, [r7, #0]
   801aa:	b2da      	uxtb	r2, r3
   801ac:	4907      	ldr	r1, [pc, #28]	; (801cc <NVIC_SetPriority+0x50>)
   801ae:	f997 3007 	ldrsb.w	r3, [r7, #7]
   801b2:	0112      	lsls	r2, r2, #4
   801b4:	b2d2      	uxtb	r2, r2
   801b6:	440b      	add	r3, r1
   801b8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
   801bc:	bf00      	nop
   801be:	370c      	adds	r7, #12
   801c0:	46bd      	mov	sp, r7
   801c2:	bc80      	pop	{r7}
   801c4:	4770      	bx	lr
   801c6:	bf00      	nop
   801c8:	e000ed00 	.word	0xe000ed00
   801cc:	e000e100 	.word	0xe000e100

000801d0 <rtos_init>:





uint8_t rtos_init(uint32_t slices_us){
   801d0:	b590      	push	{r4, r7, lr}
   801d2:	b087      	sub	sp, #28
   801d4:	af00      	add	r7, sp, #0
   801d6:	6078      	str	r0, [r7, #4]
    /*pazi na zaokraževanje/deljenje in na obseg števil*/
    uint32_t n = 0;
   801d8:	2300      	movs	r3, #0
   801da:	617b      	str	r3, [r7, #20]
    uint64_t buff = 0;
   801dc:	f04f 0300 	mov.w	r3, #0
   801e0:	f04f 0400 	mov.w	r4, #0
   801e4:	e9c7 3402 	strd	r3, r4, [r7, #8]

    buff = SystemCoreClock/8;
   801e8:	4b1f      	ldr	r3, [pc, #124]	; (80268 <rtos_init+0x98>)
   801ea:	681b      	ldr	r3, [r3, #0]
   801ec:	08db      	lsrs	r3, r3, #3
   801ee:	f04f 0400 	mov.w	r4, #0
   801f2:	e9c7 3402 	strd	r3, r4, [r7, #8]
    buff = buff*slices_us;
   801f6:	687b      	ldr	r3, [r7, #4]
   801f8:	f04f 0400 	mov.w	r4, #0
   801fc:	68fa      	ldr	r2, [r7, #12]
   801fe:	fb03 f102 	mul.w	r1, r3, r2
   80202:	68ba      	ldr	r2, [r7, #8]
   80204:	fb04 f202 	mul.w	r2, r4, r2
   80208:	440a      	add	r2, r1
   8020a:	68b9      	ldr	r1, [r7, #8]
   8020c:	fba1 3403 	umull	r3, r4, r1, r3
   80210:	4422      	add	r2, r4
   80212:	4614      	mov	r4, r2
   80214:	e9c7 3402 	strd	r3, r4, [r7, #8]
   80218:	e9c7 3402 	strd	r3, r4, [r7, #8]
    n = buff/MICRO_SEC;
   8021c:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
   80220:	4a12      	ldr	r2, [pc, #72]	; (8026c <rtos_init+0x9c>)
   80222:	f04f 0300 	mov.w	r3, #0
   80226:	f004 fffd 	bl	85224 <__aeabi_uldivmod>
   8022a:	4603      	mov	r3, r0
   8022c:	460c      	mov	r4, r1
   8022e:	617b      	str	r3, [r7, #20]

    if((n-1) > SysTick_LOAD_RELOAD_Msk) return 1;  //counter value too big
   80230:	697b      	ldr	r3, [r7, #20]
   80232:	3b01      	subs	r3, #1
   80234:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
   80238:	d301      	bcc.n	8023e <rtos_init+0x6e>
   8023a:	2301      	movs	r3, #1
   8023c:	e00f      	b.n	8025e <rtos_init+0x8e>

    SysTick->LOAD  = n - 1;
   8023e:	4a0c      	ldr	r2, [pc, #48]	; (80270 <rtos_init+0xa0>)
   80240:	697b      	ldr	r3, [r7, #20]
   80242:	3b01      	subs	r3, #1
   80244:	6053      	str	r3, [r2, #4]
    NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);
   80246:	210f      	movs	r1, #15
   80248:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   8024c:	f7ff ff96 	bl	8017c <NVIC_SetPriority>
    SysTick->VAL   = 0;
   80250:	4b07      	ldr	r3, [pc, #28]	; (80270 <rtos_init+0xa0>)
   80252:	2200      	movs	r2, #0
   80254:	609a      	str	r2, [r3, #8]
    SysTick-> CTRL = 0<<SysTick_CTRL_CLKSOURCE_Pos | SysTick_CTRL_TICKINT_Msk;
   80256:	4b06      	ldr	r3, [pc, #24]	; (80270 <rtos_init+0xa0>)
   80258:	2202      	movs	r2, #2
   8025a:	601a      	str	r2, [r3, #0]




    return 0;
   8025c:	2300      	movs	r3, #0
}
   8025e:	4618      	mov	r0, r3
   80260:	371c      	adds	r7, #28
   80262:	46bd      	mov	sp, r7
   80264:	bd90      	pop	{r4, r7, pc}
   80266:	bf00      	nop
   80268:	200703f0 	.word	0x200703f0
   8026c:	000f4240 	.word	0x000f4240
   80270:	e000e010 	.word	0xe000e010

00080274 <rtos_enable>:

/************************************************************************/

void rtos_enable(void){
   80274:	b480      	push	{r7}
   80276:	af00      	add	r7, sp, #0
    SysTick-> CTRL |= SysTick_CTRL_ENABLE_Msk;
   80278:	4b04      	ldr	r3, [pc, #16]	; (8028c <rtos_enable+0x18>)
   8027a:	681b      	ldr	r3, [r3, #0]
   8027c:	4a03      	ldr	r2, [pc, #12]	; (8028c <rtos_enable+0x18>)
   8027e:	f043 0301 	orr.w	r3, r3, #1
   80282:	6013      	str	r3, [r2, #0]
}
   80284:	bf00      	nop
   80286:	46bd      	mov	sp, r7
   80288:	bc80      	pop	{r7}
   8028a:	4770      	bx	lr
   8028c:	e000e010 	.word	0xe000e010

00080290 <SysTick_Handler>:
}

/*************************************************************************/


void SysTick_Handler(void){
   80290:	b580      	push	{r7, lr}
   80292:	b082      	sub	sp, #8
   80294:	af00      	add	r7, sp, #0
/******jedro programa exeption prekinitve za taske****/

    static uint8_t idx = 0;
    static uint32_t tick = 0;
    uint32_t pending_proces = 0;
   80296:	2300      	movs	r3, #0
   80298:	607b      	str	r3, [r7, #4]
    tick++;
   8029a:	4b27      	ldr	r3, [pc, #156]	; (80338 <SysTick_Handler+0xa8>)
   8029c:	681b      	ldr	r3, [r3, #0]
   8029e:	3301      	adds	r3, #1
   802a0:	4a25      	ldr	r2, [pc, #148]	; (80338 <SysTick_Handler+0xa8>)
   802a2:	6013      	str	r3, [r2, #0]



/** priviligiran task izvedba vsako rezino**/
    if((task_priv != 0) && task_priv->active){
   802a4:	4b25      	ldr	r3, [pc, #148]	; (8033c <SysTick_Handler+0xac>)
   802a6:	681b      	ldr	r3, [r3, #0]
   802a8:	2b00      	cmp	r3, #0
   802aa:	d00d      	beq.n	802c8 <SysTick_Handler+0x38>
   802ac:	4b23      	ldr	r3, [pc, #140]	; (8033c <SysTick_Handler+0xac>)
   802ae:	681b      	ldr	r3, [r3, #0]
   802b0:	7cdb      	ldrb	r3, [r3, #19]
   802b2:	2b00      	cmp	r3, #0
   802b4:	d008      	beq.n	802c8 <SysTick_Handler+0x38>
        task_priv->driver();
   802b6:	4b21      	ldr	r3, [pc, #132]	; (8033c <SysTick_Handler+0xac>)
   802b8:	681b      	ldr	r3, [r3, #0]
   802ba:	699b      	ldr	r3, [r3, #24]
   802bc:	4798      	blx	r3
        task_priv->last_tick = tick;
   802be:	4b1f      	ldr	r3, [pc, #124]	; (8033c <SysTick_Handler+0xac>)
   802c0:	681b      	ldr	r3, [r3, #0]
   802c2:	4a1d      	ldr	r2, [pc, #116]	; (80338 <SysTick_Handler+0xa8>)
   802c4:	6812      	ldr	r2, [r2, #0]
   802c6:	601a      	str	r2, [r3, #0]

    }
/** izvajaj taske **/

    if(task_list[idx]->active){
   802c8:	4b1d      	ldr	r3, [pc, #116]	; (80340 <SysTick_Handler+0xb0>)
   802ca:	781b      	ldrb	r3, [r3, #0]
   802cc:	461a      	mov	r2, r3
   802ce:	4b1d      	ldr	r3, [pc, #116]	; (80344 <SysTick_Handler+0xb4>)
   802d0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
   802d4:	7cdb      	ldrb	r3, [r3, #19]
   802d6:	2b00      	cmp	r3, #0
   802d8:	d010      	beq.n	802fc <SysTick_Handler+0x6c>
        task_list[idx]->driver(); //uzemi objekt driver iz te strukture delaš s pointeri
   802da:	4b19      	ldr	r3, [pc, #100]	; (80340 <SysTick_Handler+0xb0>)
   802dc:	781b      	ldrb	r3, [r3, #0]
   802de:	461a      	mov	r2, r3
   802e0:	4b18      	ldr	r3, [pc, #96]	; (80344 <SysTick_Handler+0xb4>)
   802e2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
   802e6:	699b      	ldr	r3, [r3, #24]
   802e8:	4798      	blx	r3
        task_list[idx]->last_tick = tick;
   802ea:	4b15      	ldr	r3, [pc, #84]	; (80340 <SysTick_Handler+0xb0>)
   802ec:	781b      	ldrb	r3, [r3, #0]
   802ee:	461a      	mov	r2, r3
   802f0:	4b14      	ldr	r3, [pc, #80]	; (80344 <SysTick_Handler+0xb4>)
   802f2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
   802f6:	4a10      	ldr	r2, [pc, #64]	; (80338 <SysTick_Handler+0xa8>)
   802f8:	6812      	ldr	r2, [r2, #0]
   802fa:	601a      	str	r2, [r3, #0]
    }


/** skrbi za rollover  **/
    idx++;
   802fc:	4b10      	ldr	r3, [pc, #64]	; (80340 <SysTick_Handler+0xb0>)
   802fe:	781b      	ldrb	r3, [r3, #0]
   80300:	3301      	adds	r3, #1
   80302:	b2da      	uxtb	r2, r3
   80304:	4b0e      	ldr	r3, [pc, #56]	; (80340 <SysTick_Handler+0xb0>)
   80306:	701a      	strb	r2, [r3, #0]
    if(task_list[idx] == 0){
   80308:	4b0d      	ldr	r3, [pc, #52]	; (80340 <SysTick_Handler+0xb0>)
   8030a:	781b      	ldrb	r3, [r3, #0]
   8030c:	461a      	mov	r2, r3
   8030e:	4b0d      	ldr	r3, [pc, #52]	; (80344 <SysTick_Handler+0xb4>)
   80310:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
   80314:	2b00      	cmp	r3, #0
   80316:	d102      	bne.n	8031e <SysTick_Handler+0x8e>
        idx = 0;
   80318:	4b09      	ldr	r3, [pc, #36]	; (80340 <SysTick_Handler+0xb0>)
   8031a:	2200      	movs	r2, #0
   8031c:	701a      	strb	r2, [r3, #0]





    pending_proces = SCB->ICSR;
   8031e:	4b0a      	ldr	r3, [pc, #40]	; (80348 <SysTick_Handler+0xb8>)
   80320:	685b      	ldr	r3, [r3, #4]
   80322:	607b      	str	r3, [r7, #4]

    if(pending_proces & SCB_ICSR_PENDSTSET_Msk){
   80324:	687b      	ldr	r3, [r7, #4]
   80326:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
   8032a:	2b00      	cmp	r3, #0
   8032c:	d000      	beq.n	80330 <SysTick_Handler+0xa0>
        while(1); //operacija predolga za časovno rezino
   8032e:	e7fe      	b.n	8032e <SysTick_Handler+0x9e>

    }
}
   80330:	bf00      	nop
   80332:	3708      	adds	r7, #8
   80334:	46bd      	mov	sp, r7
   80336:	bd80      	pop	{r7, pc}
   80338:	20070dc0 	.word	0x20070dc0
   8033c:	2007038c 	.word	0x2007038c
   80340:	20070dc4 	.word	0x20070dc4
   80344:	20070e68 	.word	0x20070e68
   80348:	e000ed00 	.word	0xe000ed00

0008034c <osc_get_rate>:

	return 0;
}

static inline uint32_t osc_get_rate(uint32_t ul_id)
{
   8034c:	b480      	push	{r7}
   8034e:	b083      	sub	sp, #12
   80350:	af00      	add	r7, sp, #0
   80352:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
   80354:	687b      	ldr	r3, [r7, #4]
   80356:	2b07      	cmp	r3, #7
   80358:	d825      	bhi.n	803a6 <osc_get_rate+0x5a>
   8035a:	a201      	add	r2, pc, #4	; (adr r2, 80360 <osc_get_rate+0x14>)
   8035c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   80360:	00080381 	.word	0x00080381
   80364:	00080387 	.word	0x00080387
   80368:	0008038d 	.word	0x0008038d
   8036c:	00080393 	.word	0x00080393
   80370:	00080397 	.word	0x00080397
   80374:	0008039b 	.word	0x0008039b
   80378:	0008039f 	.word	0x0008039f
   8037c:	000803a3 	.word	0x000803a3
	case OSC_SLCK_32K_RC:
		return OSC_SLCK_32K_RC_HZ;
   80380:	f44f 43fa 	mov.w	r3, #32000	; 0x7d00
   80384:	e010      	b.n	803a8 <osc_get_rate+0x5c>

	case OSC_SLCK_32K_XTAL:
		return BOARD_FREQ_SLCK_XTAL;
   80386:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   8038a:	e00d      	b.n	803a8 <osc_get_rate+0x5c>

	case OSC_SLCK_32K_BYPASS:
		return BOARD_FREQ_SLCK_BYPASS;
   8038c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   80390:	e00a      	b.n	803a8 <osc_get_rate+0x5c>

	case OSC_MAINCK_4M_RC:
		return OSC_MAINCK_4M_RC_HZ;
   80392:	4b08      	ldr	r3, [pc, #32]	; (803b4 <osc_get_rate+0x68>)
   80394:	e008      	b.n	803a8 <osc_get_rate+0x5c>

	case OSC_MAINCK_8M_RC:
		return OSC_MAINCK_8M_RC_HZ;
   80396:	4b08      	ldr	r3, [pc, #32]	; (803b8 <osc_get_rate+0x6c>)
   80398:	e006      	b.n	803a8 <osc_get_rate+0x5c>

	case OSC_MAINCK_12M_RC:
		return OSC_MAINCK_12M_RC_HZ;
   8039a:	4b08      	ldr	r3, [pc, #32]	; (803bc <osc_get_rate+0x70>)
   8039c:	e004      	b.n	803a8 <osc_get_rate+0x5c>

	case OSC_MAINCK_XTAL:
		return BOARD_FREQ_MAINCK_XTAL;
   8039e:	4b07      	ldr	r3, [pc, #28]	; (803bc <osc_get_rate+0x70>)
   803a0:	e002      	b.n	803a8 <osc_get_rate+0x5c>

	case OSC_MAINCK_BYPASS:
		return BOARD_FREQ_MAINCK_BYPASS;
   803a2:	4b06      	ldr	r3, [pc, #24]	; (803bc <osc_get_rate+0x70>)
   803a4:	e000      	b.n	803a8 <osc_get_rate+0x5c>
	}

	return 0;
   803a6:	2300      	movs	r3, #0
}
   803a8:	4618      	mov	r0, r3
   803aa:	370c      	adds	r7, #12
   803ac:	46bd      	mov	sp, r7
   803ae:	bc80      	pop	{r7}
   803b0:	4770      	bx	lr
   803b2:	bf00      	nop
   803b4:	003d0900 	.word	0x003d0900
   803b8:	007a1200 	.word	0x007a1200
   803bc:	00b71b00 	.word	0x00b71b00

000803c0 <sysclk_get_main_hz>:
 */
#if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
extern uint32_t sysclk_initialized;
#endif
static inline uint32_t sysclk_get_main_hz(void)
{
   803c0:	b580      	push	{r7, lr}
   803c2:	af00      	add	r7, sp, #0
	} else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_MAINCK_BYPASS) {
		return OSC_MAINCK_BYPASS_HZ;
	}
#ifdef CONFIG_PLL0_SOURCE
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		return pll_get_default_rate(0);
   803c4:	2006      	movs	r0, #6
   803c6:	f7ff ffc1 	bl	8034c <osc_get_rate>
   803ca:	4602      	mov	r2, r0
   803cc:	4613      	mov	r3, r2
   803ce:	00db      	lsls	r3, r3, #3
   803d0:	1a9b      	subs	r3, r3, r2
   803d2:	005b      	lsls	r3, r3, #1
#endif
	else {
		/* unhandled_case(CONFIG_SYSCLK_SOURCE); */
		return 0;
	}
}
   803d4:	4618      	mov	r0, r3
   803d6:	bd80      	pop	{r7, pc}

000803d8 <sysclk_get_cpu_hz>:
 * clocks.
 *
 * \return Frequency of the CPU clock, in Hz.
 */
static inline uint32_t sysclk_get_cpu_hz(void)
{
   803d8:	b580      	push	{r7, lr}
   803da:	af00      	add	r7, sp, #0
	/* CONFIG_SYSCLK_PRES is the register value for setting the expected */
	/* prescaler, not an immediate value. */
	return sysclk_get_main_hz() /
   803dc:	f7ff fff0 	bl	803c0 <sysclk_get_main_hz>
   803e0:	4603      	mov	r3, r0
   803e2:	085b      	lsrs	r3, r3, #1
		((CONFIG_SYSCLK_PRES == SYSCLK_PRES_3) ? 3 :
			(1 << (CONFIG_SYSCLK_PRES >> PMC_MCKR_PRES_Pos)));
}
   803e4:	4618      	mov	r0, r3
   803e6:	bd80      	pop	{r7, pc}

000803e8 <sysclk_enable_peripheral_clock>:
 * \brief Enable a peripheral's clock.
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
   803e8:	b580      	push	{r7, lr}
   803ea:	b082      	sub	sp, #8
   803ec:	af00      	add	r7, sp, #0
   803ee:	6078      	str	r0, [r7, #4]
	pmc_enable_periph_clk(ul_id);
   803f0:	6878      	ldr	r0, [r7, #4]
   803f2:	f002 fb7d 	bl	82af0 <pmc_enable_periph_clk>
}
   803f6:	bf00      	nop
   803f8:	3708      	adds	r7, #8
   803fa:	46bd      	mov	sp, r7
   803fc:	bd80      	pop	{r7, pc}

000803fe <ioport_init>:
 *
 * This function must be called before using any other functions in the IOPORT
 * service.
 */
static inline void ioport_init(void)
{
   803fe:	b580      	push	{r7, lr}
   80400:	af00      	add	r7, sp, #0
}

__always_inline static void arch_ioport_init(void)
{
#ifdef ID_PIOA
	sysclk_enable_peripheral_clock(ID_PIOA);
   80402:	200b      	movs	r0, #11
   80404:	f7ff fff0 	bl	803e8 <sysclk_enable_peripheral_clock>
#endif
#ifdef ID_PIOB
	sysclk_enable_peripheral_clock(ID_PIOB);
   80408:	200c      	movs	r0, #12
   8040a:	f7ff ffed 	bl	803e8 <sysclk_enable_peripheral_clock>
#endif
#ifdef ID_PIOC
	sysclk_enable_peripheral_clock(ID_PIOC);
   8040e:	200d      	movs	r0, #13
   80410:	f7ff ffea 	bl	803e8 <sysclk_enable_peripheral_clock>
#endif
#ifdef ID_PIOD
	sysclk_enable_peripheral_clock(ID_PIOD);
   80414:	200e      	movs	r0, #14
   80416:	f7ff ffe7 	bl	803e8 <sysclk_enable_peripheral_clock>
	arch_ioport_init();
}
   8041a:	bf00      	nop
   8041c:	bd80      	pop	{r7, pc}

0008041e <ioport_set_pin_dir>:
 * \param pin IOPORT pin to configure
 * \param dir Direction to set for the specified pin (\ref ioport_direction)
 */
static inline void ioport_set_pin_dir(ioport_pin_t pin,
		enum ioport_direction dir)
{
   8041e:	b480      	push	{r7}
   80420:	b08d      	sub	sp, #52	; 0x34
   80422:	af00      	add	r7, sp, #0
   80424:	6078      	str	r0, [r7, #4]
   80426:	460b      	mov	r3, r1
   80428:	70fb      	strb	r3, [r7, #3]
   8042a:	687b      	ldr	r3, [r7, #4]
   8042c:	62fb      	str	r3, [r7, #44]	; 0x2c
   8042e:	78fb      	ldrb	r3, [r7, #3]
   80430:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
   80434:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   80436:	627b      	str	r3, [r7, #36]	; 0x24
   80438:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   8043a:	623b      	str	r3, [r7, #32]
	return pin >> 5;
   8043c:	6a3b      	ldr	r3, [r7, #32]
   8043e:	095b      	lsrs	r3, r3, #5
   80440:	61fb      	str	r3, [r7, #28]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   80442:	69fb      	ldr	r3, [r7, #28]
   80444:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   80448:	f203 7307 	addw	r3, r3, #1799	; 0x707
   8044c:	025b      	lsls	r3, r3, #9
}

__always_inline static void arch_ioport_set_pin_dir(ioport_pin_t pin,
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);
   8044e:	61bb      	str	r3, [r7, #24]

	if (dir == IOPORT_DIR_OUTPUT) {
   80450:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
   80454:	2b01      	cmp	r3, #1
   80456:	d109      	bne.n	8046c <ioport_set_pin_dir+0x4e>
   80458:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   8045a:	617b      	str	r3, [r7, #20]
	return 1U << (pin & 0x1F);
   8045c:	697b      	ldr	r3, [r7, #20]
   8045e:	f003 031f 	and.w	r3, r3, #31
   80462:	2201      	movs	r2, #1
   80464:	409a      	lsls	r2, r3
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   80466:	69bb      	ldr	r3, [r7, #24]
   80468:	611a      	str	r2, [r3, #16]
   8046a:	e00c      	b.n	80486 <ioport_set_pin_dir+0x68>
	} else if (dir == IOPORT_DIR_INPUT) {
   8046c:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
   80470:	2b00      	cmp	r3, #0
   80472:	d108      	bne.n	80486 <ioport_set_pin_dir+0x68>
   80474:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   80476:	613b      	str	r3, [r7, #16]
	return 1U << (pin & 0x1F);
   80478:	693b      	ldr	r3, [r7, #16]
   8047a:	f003 031f 	and.w	r3, r3, #31
   8047e:	2201      	movs	r2, #1
   80480:	409a      	lsls	r2, r3
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   80482:	69bb      	ldr	r3, [r7, #24]
   80484:	615a      	str	r2, [r3, #20]
   80486:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   80488:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
   8048a:	68fb      	ldr	r3, [r7, #12]
   8048c:	f003 031f 	and.w	r3, r3, #31
   80490:	2201      	movs	r2, #1
   80492:	409a      	lsls	r2, r3
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   80494:	69bb      	ldr	r3, [r7, #24]
   80496:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
	arch_ioport_set_pin_dir(pin, dir);
}
   8049a:	bf00      	nop
   8049c:	3734      	adds	r7, #52	; 0x34
   8049e:	46bd      	mov	sp, r7
   804a0:	bc80      	pop	{r7}
   804a2:	4770      	bx	lr

000804a4 <ioport_set_pin_level>:
 *
 * \param pin IOPORT pin to configure
 * \param level Logical value of the pin
 */
static inline void ioport_set_pin_level(ioport_pin_t pin, bool level)
{
   804a4:	b480      	push	{r7}
   804a6:	b08b      	sub	sp, #44	; 0x2c
   804a8:	af00      	add	r7, sp, #0
   804aa:	6078      	str	r0, [r7, #4]
   804ac:	460b      	mov	r3, r1
   804ae:	70fb      	strb	r3, [r7, #3]
   804b0:	687b      	ldr	r3, [r7, #4]
   804b2:	627b      	str	r3, [r7, #36]	; 0x24
   804b4:	78fb      	ldrb	r3, [r7, #3]
   804b6:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
   804ba:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   804bc:	61fb      	str	r3, [r7, #28]
   804be:	69fb      	ldr	r3, [r7, #28]
   804c0:	61bb      	str	r3, [r7, #24]
	return pin >> 5;
   804c2:	69bb      	ldr	r3, [r7, #24]
   804c4:	095b      	lsrs	r3, r3, #5
   804c6:	617b      	str	r3, [r7, #20]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   804c8:	697b      	ldr	r3, [r7, #20]
   804ca:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   804ce:	f203 7307 	addw	r3, r3, #1799	; 0x707
   804d2:	025b      	lsls	r3, r3, #9
}

__always_inline static void arch_ioport_set_pin_level(ioport_pin_t pin,
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);
   804d4:	613b      	str	r3, [r7, #16]

	if (level) {
   804d6:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
   804da:	2b00      	cmp	r3, #0
   804dc:	d009      	beq.n	804f2 <ioport_set_pin_level+0x4e>
   804de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   804e0:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
   804e2:	68fb      	ldr	r3, [r7, #12]
   804e4:	f003 031f 	and.w	r3, r3, #31
   804e8:	2201      	movs	r2, #1
   804ea:	409a      	lsls	r2, r3
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   804ec:	693b      	ldr	r3, [r7, #16]
   804ee:	631a      	str	r2, [r3, #48]	; 0x30
	arch_ioport_set_pin_level(pin, level);
}
   804f0:	e008      	b.n	80504 <ioport_set_pin_level+0x60>
   804f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   804f4:	60bb      	str	r3, [r7, #8]
	return 1U << (pin & 0x1F);
   804f6:	68bb      	ldr	r3, [r7, #8]
   804f8:	f003 031f 	and.w	r3, r3, #31
   804fc:	2201      	movs	r2, #1
   804fe:	409a      	lsls	r2, r3
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80500:	693b      	ldr	r3, [r7, #16]
   80502:	635a      	str	r2, [r3, #52]	; 0x34
   80504:	bf00      	nop
   80506:	372c      	adds	r7, #44	; 0x2c
   80508:	46bd      	mov	sp, r7
   8050a:	bc80      	pop	{r7}
   8050c:	4770      	bx	lr

0008050e <ioport_get_pin_level>:
 *
 * \param pin IOPORT pin to read
 * \return Current logical value of the specified pin
 */
static inline bool ioport_get_pin_level(ioport_pin_t pin)
{
   8050e:	b480      	push	{r7}
   80510:	b089      	sub	sp, #36	; 0x24
   80512:	af00      	add	r7, sp, #0
   80514:	6078      	str	r0, [r7, #4]
   80516:	687b      	ldr	r3, [r7, #4]
   80518:	61fb      	str	r3, [r7, #28]
   8051a:	69fb      	ldr	r3, [r7, #28]
   8051c:	61bb      	str	r3, [r7, #24]
   8051e:	69bb      	ldr	r3, [r7, #24]
   80520:	617b      	str	r3, [r7, #20]
	return pin >> 5;
   80522:	697b      	ldr	r3, [r7, #20]
   80524:	095b      	lsrs	r3, r3, #5
   80526:	613b      	str	r3, [r7, #16]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   80528:	693b      	ldr	r3, [r7, #16]
   8052a:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   8052e:	f203 7307 	addw	r3, r3, #1799	; 0x707
   80532:	025b      	lsls	r3, r3, #9
	base->PIO_CODR = mask & ~level;
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
   80534:	6bda      	ldr	r2, [r3, #60]	; 0x3c
   80536:	69fb      	ldr	r3, [r7, #28]
   80538:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
   8053a:	68fb      	ldr	r3, [r7, #12]
   8053c:	f003 031f 	and.w	r3, r3, #31
   80540:	2101      	movs	r1, #1
   80542:	fa01 f303 	lsl.w	r3, r1, r3
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
   80546:	4013      	ands	r3, r2
   80548:	2b00      	cmp	r3, #0
   8054a:	bf14      	ite	ne
   8054c:	2301      	movne	r3, #1
   8054e:	2300      	moveq	r3, #0
   80550:	b2db      	uxtb	r3, r3
	return arch_ioport_get_pin_level(pin);
}
   80552:	4618      	mov	r0, r3
   80554:	3724      	adds	r7, #36	; 0x24
   80556:	46bd      	mov	sp, r7
   80558:	bc80      	pop	{r7}
   8055a:	4770      	bx	lr
   8055c:	0000      	movs	r0, r0
	...

00080560 <busy>:
  return position;

}

// Wait for busy state of LCD to end
void busy(void){
   80560:	e92d 4890 	stmdb	sp!, {r4, r7, fp, lr}
   80564:	b082      	sub	sp, #8
   80566:	af00      	add	r7, sp, #0

/*  ioport_set_port_dir(IOPORT_PIOC,\
                      _LCD_D4_PIO | _LCD_D5_PIO | _LCD_D6_PIO | _LCD_D7_PIO, IOPORT_DIR_INPUT);
                      */

  ioport_set_pin_dir(_PIN_LCD_D4, IOPORT_DIR_INPUT);
   80568:	2100      	movs	r1, #0
   8056a:	204d      	movs	r0, #77	; 0x4d
   8056c:	f7ff ff57 	bl	8041e <ioport_set_pin_dir>
  ioport_set_pin_dir(_PIN_LCD_D5, IOPORT_DIR_INPUT);
   80570:	2100      	movs	r1, #0
   80572:	204f      	movs	r0, #79	; 0x4f
   80574:	f7ff ff53 	bl	8041e <ioport_set_pin_dir>
  ioport_set_pin_dir(_PIN_LCD_D6, IOPORT_DIR_INPUT);
   80578:	2100      	movs	r1, #0
   8057a:	2051      	movs	r0, #81	; 0x51
   8057c:	f7ff ff4f 	bl	8041e <ioport_set_pin_dir>
  ioport_set_pin_dir(_PIN_LCD_D7, IOPORT_DIR_INPUT);
   80580:	2100      	movs	r1, #0
   80582:	2053      	movs	r0, #83	; 0x53
   80584:	f7ff ff4b 	bl	8041e <ioport_set_pin_dir>


  ioport_set_pin_level(_PIN_LCD_RS, 0);
   80588:	2100      	movs	r1, #0
   8058a:	204c      	movs	r0, #76	; 0x4c
   8058c:	f7ff ff8a 	bl	804a4 <ioport_set_pin_level>
  ioport_set_pin_level(_PIN_LCD_RW, 1);
   80590:	2101      	movs	r1, #1
   80592:	204e      	movs	r0, #78	; 0x4e
   80594:	f7ff ff86 	bl	804a4 <ioport_set_pin_level>

  do
  {
    delay_us(1);
   80598:	f7ff ff1e 	bl	803d8 <sysclk_get_cpu_hz>
   8059c:	4603      	mov	r3, r0
   8059e:	f04f 0400 	mov.w	r4, #0
   805a2:	a245      	add	r2, pc, #276	; (adr r2, 806b8 <busy+0x158>)
   805a4:	e9d2 1200 	ldrd	r1, r2, [r2]
   805a8:	eb13 0b01 	adds.w	fp, r3, r1
   805ac:	eb44 0c02 	adc.w	ip, r4, r2
   805b0:	4658      	mov	r0, fp
   805b2:	4661      	mov	r1, ip
   805b4:	4a42      	ldr	r2, [pc, #264]	; (806c0 <busy+0x160>)
   805b6:	f04f 0300 	mov.w	r3, #0
   805ba:	f004 fe33 	bl	85224 <__aeabi_uldivmod>
   805be:	4603      	mov	r3, r0
   805c0:	460c      	mov	r4, r1
   805c2:	4618      	mov	r0, r3
   805c4:	f009 ff4c 	bl	8a460 <__portable_delay_cycles_veneer>
    ioport_set_pin_level(_PIN_LCD_E, 1);
   805c8:	2101      	movs	r1, #1
   805ca:	2050      	movs	r0, #80	; 0x50
   805cc:	f7ff ff6a 	bl	804a4 <ioport_set_pin_level>
    delay_us(1);
   805d0:	f7ff ff02 	bl	803d8 <sysclk_get_cpu_hz>
   805d4:	4603      	mov	r3, r0
   805d6:	f04f 0400 	mov.w	r4, #0
   805da:	a237      	add	r2, pc, #220	; (adr r2, 806b8 <busy+0x158>)
   805dc:	e9d2 1200 	ldrd	r1, r2, [r2]
   805e0:	eb13 0b01 	adds.w	fp, r3, r1
   805e4:	eb44 0c02 	adc.w	ip, r4, r2
   805e8:	4658      	mov	r0, fp
   805ea:	4661      	mov	r1, ip
   805ec:	4a34      	ldr	r2, [pc, #208]	; (806c0 <busy+0x160>)
   805ee:	f04f 0300 	mov.w	r3, #0
   805f2:	f004 fe17 	bl	85224 <__aeabi_uldivmod>
   805f6:	4603      	mov	r3, r0
   805f8:	460c      	mov	r4, r1
   805fa:	4618      	mov	r0, r3
   805fc:	f009 ff30 	bl	8a460 <__portable_delay_cycles_veneer>
    busy_flag = ioport_get_pin_level(_PIN_LCD_D7);
   80600:	2053      	movs	r0, #83	; 0x53
   80602:	f7ff ff84 	bl	8050e <ioport_get_pin_level>
   80606:	4603      	mov	r3, r0
   80608:	607b      	str	r3, [r7, #4]
    ioport_set_pin_level(_PIN_LCD_E, 0);
   8060a:	2100      	movs	r1, #0
   8060c:	2050      	movs	r0, #80	; 0x50
   8060e:	f7ff ff49 	bl	804a4 <ioport_set_pin_level>
    delay_us(1);
   80612:	f7ff fee1 	bl	803d8 <sysclk_get_cpu_hz>
   80616:	4603      	mov	r3, r0
   80618:	f04f 0400 	mov.w	r4, #0
   8061c:	a226      	add	r2, pc, #152	; (adr r2, 806b8 <busy+0x158>)
   8061e:	e9d2 1200 	ldrd	r1, r2, [r2]
   80622:	eb13 0b01 	adds.w	fp, r3, r1
   80626:	eb44 0c02 	adc.w	ip, r4, r2
   8062a:	4658      	mov	r0, fp
   8062c:	4661      	mov	r1, ip
   8062e:	4a24      	ldr	r2, [pc, #144]	; (806c0 <busy+0x160>)
   80630:	f04f 0300 	mov.w	r3, #0
   80634:	f004 fdf6 	bl	85224 <__aeabi_uldivmod>
   80638:	4603      	mov	r3, r0
   8063a:	460c      	mov	r4, r1
   8063c:	4618      	mov	r0, r3
   8063e:	f009 ff0f 	bl	8a460 <__portable_delay_cycles_veneer>
    ioport_set_pin_level(_PIN_LCD_E, 1);
   80642:	2101      	movs	r1, #1
   80644:	2050      	movs	r0, #80	; 0x50
   80646:	f7ff ff2d 	bl	804a4 <ioport_set_pin_level>
    delay_us(1);
   8064a:	f7ff fec5 	bl	803d8 <sysclk_get_cpu_hz>
   8064e:	4603      	mov	r3, r0
   80650:	f04f 0400 	mov.w	r4, #0
   80654:	a218      	add	r2, pc, #96	; (adr r2, 806b8 <busy+0x158>)
   80656:	e9d2 1200 	ldrd	r1, r2, [r2]
   8065a:	eb13 0b01 	adds.w	fp, r3, r1
   8065e:	eb44 0c02 	adc.w	ip, r4, r2
   80662:	4658      	mov	r0, fp
   80664:	4661      	mov	r1, ip
   80666:	4a16      	ldr	r2, [pc, #88]	; (806c0 <busy+0x160>)
   80668:	f04f 0300 	mov.w	r3, #0
   8066c:	f004 fdda 	bl	85224 <__aeabi_uldivmod>
   80670:	4603      	mov	r3, r0
   80672:	460c      	mov	r4, r1
   80674:	4618      	mov	r0, r3
   80676:	f009 fef3 	bl	8a460 <__portable_delay_cycles_veneer>
    ioport_set_pin_level(_PIN_LCD_E, 0);
   8067a:	2100      	movs	r1, #0
   8067c:	2050      	movs	r0, #80	; 0x50
   8067e:	f7ff ff11 	bl	804a4 <ioport_set_pin_level>
  } while(busy_flag);
   80682:	687b      	ldr	r3, [r7, #4]
   80684:	2b00      	cmp	r3, #0
   80686:	d187      	bne.n	80598 <busy+0x38>

  /*
  ioport_set_port_dir(IOPORT_PIOC,\
                      _LCD_D4_PIO | _LCD_D5_PIO | _LCD_D6_PIO | _LCD_D7_PIO, IOPORT_DIR_OUTPUT);
                      */
  ioport_set_pin_dir(_PIN_LCD_D4, IOPORT_DIR_OUTPUT);
   80688:	2101      	movs	r1, #1
   8068a:	204d      	movs	r0, #77	; 0x4d
   8068c:	f7ff fec7 	bl	8041e <ioport_set_pin_dir>
  ioport_set_pin_dir(_PIN_LCD_D5, IOPORT_DIR_OUTPUT);
   80690:	2101      	movs	r1, #1
   80692:	204f      	movs	r0, #79	; 0x4f
   80694:	f7ff fec3 	bl	8041e <ioport_set_pin_dir>
  ioport_set_pin_dir(_PIN_LCD_D6, IOPORT_DIR_OUTPUT);
   80698:	2101      	movs	r1, #1
   8069a:	2051      	movs	r0, #81	; 0x51
   8069c:	f7ff febf 	bl	8041e <ioport_set_pin_dir>
  ioport_set_pin_dir(_PIN_LCD_D7, IOPORT_DIR_OUTPUT);
   806a0:	2101      	movs	r1, #1
   806a2:	2053      	movs	r0, #83	; 0x53
   806a4:	f7ff febb 	bl	8041e <ioport_set_pin_dir>

}
   806a8:	bf00      	nop
   806aa:	3708      	adds	r7, #8
   806ac:	46bd      	mov	sp, r7
   806ae:	e8bd 8890 	ldmia.w	sp!, {r4, r7, fp, pc}
   806b2:	bf00      	nop
   806b4:	f3af 8000 	nop.w
   806b8:	00d59f7f 	.word	0x00d59f7f
   806bc:	00000000 	.word	0x00000000
   806c0:	00d59f80 	.word	0x00d59f80
   806c4:	00000000 	.word	0x00000000

000806c8 <lcd_write_high>:

// LCD write high four bits
// byte ... data or command byte
void lcd_write_high(uint8_t byte){
   806c8:	e92d 4890 	stmdb	sp!, {r4, r7, fp, lr}
   806cc:	b082      	sub	sp, #8
   806ce:	af00      	add	r7, sp, #0
   806d0:	4603      	mov	r3, r0
   806d2:	71fb      	strb	r3, [r7, #7]

  ioport_set_pin_level(_PIN_LCD_RW, 0);
   806d4:	2100      	movs	r1, #0
   806d6:	204e      	movs	r0, #78	; 0x4e
   806d8:	f7ff fee4 	bl	804a4 <ioport_set_pin_level>
  delay_us(1);
   806dc:	f7ff fe7c 	bl	803d8 <sysclk_get_cpu_hz>
   806e0:	4603      	mov	r3, r0
   806e2:	f04f 0400 	mov.w	r4, #0
   806e6:	a232      	add	r2, pc, #200	; (adr r2, 807b0 <lcd_write_high+0xe8>)
   806e8:	e9d2 1200 	ldrd	r1, r2, [r2]
   806ec:	eb13 0b01 	adds.w	fp, r3, r1
   806f0:	eb44 0c02 	adc.w	ip, r4, r2
   806f4:	4658      	mov	r0, fp
   806f6:	4661      	mov	r1, ip
   806f8:	4a2f      	ldr	r2, [pc, #188]	; (807b8 <lcd_write_high+0xf0>)
   806fa:	f04f 0300 	mov.w	r3, #0
   806fe:	f004 fd91 	bl	85224 <__aeabi_uldivmod>
   80702:	4603      	mov	r3, r0
   80704:	460c      	mov	r4, r1
   80706:	4618      	mov	r0, r3
   80708:	f009 feaa 	bl	8a460 <__portable_delay_cycles_veneer>


  ioport_set_pin_level(_PIN_LCD_D7, ( byte&(1<<7) )!=0 );
   8070c:	f997 3007 	ldrsb.w	r3, [r7, #7]
   80710:	b2db      	uxtb	r3, r3
   80712:	09db      	lsrs	r3, r3, #7
   80714:	b2db      	uxtb	r3, r3
   80716:	4619      	mov	r1, r3
   80718:	2053      	movs	r0, #83	; 0x53
   8071a:	f7ff fec3 	bl	804a4 <ioport_set_pin_level>
  ioport_set_pin_level(_PIN_LCD_D6, ( byte&(1<<6) )!=0 );
   8071e:	79fb      	ldrb	r3, [r7, #7]
   80720:	f003 0340 	and.w	r3, r3, #64	; 0x40
   80724:	2b00      	cmp	r3, #0
   80726:	bf14      	ite	ne
   80728:	2301      	movne	r3, #1
   8072a:	2300      	moveq	r3, #0
   8072c:	b2db      	uxtb	r3, r3
   8072e:	4619      	mov	r1, r3
   80730:	2051      	movs	r0, #81	; 0x51
   80732:	f7ff feb7 	bl	804a4 <ioport_set_pin_level>
  ioport_set_pin_level(_PIN_LCD_D5, ( byte&(1<<5) )!=0 );
   80736:	79fb      	ldrb	r3, [r7, #7]
   80738:	f003 0320 	and.w	r3, r3, #32
   8073c:	2b00      	cmp	r3, #0
   8073e:	bf14      	ite	ne
   80740:	2301      	movne	r3, #1
   80742:	2300      	moveq	r3, #0
   80744:	b2db      	uxtb	r3, r3
   80746:	4619      	mov	r1, r3
   80748:	204f      	movs	r0, #79	; 0x4f
   8074a:	f7ff feab 	bl	804a4 <ioport_set_pin_level>
  ioport_set_pin_level(_PIN_LCD_D4, ( byte&(1<<4) )!=0 );
   8074e:	79fb      	ldrb	r3, [r7, #7]
   80750:	f003 0310 	and.w	r3, r3, #16
   80754:	2b00      	cmp	r3, #0
   80756:	bf14      	ite	ne
   80758:	2301      	movne	r3, #1
   8075a:	2300      	moveq	r3, #0
   8075c:	b2db      	uxtb	r3, r3
   8075e:	4619      	mov	r1, r3
   80760:	204d      	movs	r0, #77	; 0x4d
   80762:	f7ff fe9f 	bl	804a4 <ioport_set_pin_level>

  ioport_set_pin_level(_PIN_LCD_E, 1);
   80766:	2101      	movs	r1, #1
   80768:	2050      	movs	r0, #80	; 0x50
   8076a:	f7ff fe9b 	bl	804a4 <ioport_set_pin_level>
  delay_us(1);
   8076e:	f7ff fe33 	bl	803d8 <sysclk_get_cpu_hz>
   80772:	4603      	mov	r3, r0
   80774:	f04f 0400 	mov.w	r4, #0
   80778:	a20d      	add	r2, pc, #52	; (adr r2, 807b0 <lcd_write_high+0xe8>)
   8077a:	e9d2 1200 	ldrd	r1, r2, [r2]
   8077e:	eb13 0b01 	adds.w	fp, r3, r1
   80782:	eb44 0c02 	adc.w	ip, r4, r2
   80786:	4658      	mov	r0, fp
   80788:	4661      	mov	r1, ip
   8078a:	4a0b      	ldr	r2, [pc, #44]	; (807b8 <lcd_write_high+0xf0>)
   8078c:	f04f 0300 	mov.w	r3, #0
   80790:	f004 fd48 	bl	85224 <__aeabi_uldivmod>
   80794:	4603      	mov	r3, r0
   80796:	460c      	mov	r4, r1
   80798:	4618      	mov	r0, r3
   8079a:	f009 fe61 	bl	8a460 <__portable_delay_cycles_veneer>
  ioport_set_pin_level(_PIN_LCD_E, 0);
   8079e:	2100      	movs	r1, #0
   807a0:	2050      	movs	r0, #80	; 0x50
   807a2:	f7ff fe7f 	bl	804a4 <ioport_set_pin_level>
}
   807a6:	bf00      	nop
   807a8:	3708      	adds	r7, #8
   807aa:	46bd      	mov	sp, r7
   807ac:	e8bd 8890 	ldmia.w	sp!, {r4, r7, fp, pc}
   807b0:	00d59f7f 	.word	0x00d59f7f
   807b4:	00000000 	.word	0x00000000
   807b8:	00d59f80 	.word	0x00d59f80
   807bc:	00000000 	.word	0x00000000

000807c0 <lcd_write_low>:

// LCD write low four bits
// byte ... data or command byte
void lcd_write_low(uint8_t byte){
   807c0:	e92d 4890 	stmdb	sp!, {r4, r7, fp, lr}
   807c4:	b082      	sub	sp, #8
   807c6:	af00      	add	r7, sp, #0
   807c8:	4603      	mov	r3, r0
   807ca:	71fb      	strb	r3, [r7, #7]
  delay_us(1);
   807cc:	f7ff fe04 	bl	803d8 <sysclk_get_cpu_hz>
   807d0:	4603      	mov	r3, r0
   807d2:	f04f 0400 	mov.w	r4, #0
   807d6:	a236      	add	r2, pc, #216	; (adr r2, 808b0 <lcd_write_low+0xf0>)
   807d8:	e9d2 1200 	ldrd	r1, r2, [r2]
   807dc:	eb13 0b01 	adds.w	fp, r3, r1
   807e0:	eb44 0c02 	adc.w	ip, r4, r2
   807e4:	4658      	mov	r0, fp
   807e6:	4661      	mov	r1, ip
   807e8:	4a33      	ldr	r2, [pc, #204]	; (808b8 <lcd_write_low+0xf8>)
   807ea:	f04f 0300 	mov.w	r3, #0
   807ee:	f004 fd19 	bl	85224 <__aeabi_uldivmod>
   807f2:	4603      	mov	r3, r0
   807f4:	460c      	mov	r4, r1
   807f6:	4618      	mov	r0, r3
   807f8:	f009 fe32 	bl	8a460 <__portable_delay_cycles_veneer>

  ioport_set_pin_level(_PIN_LCD_D7, ( byte&(1<<3) )!=0 );
   807fc:	79fb      	ldrb	r3, [r7, #7]
   807fe:	f003 0308 	and.w	r3, r3, #8
   80802:	2b00      	cmp	r3, #0
   80804:	bf14      	ite	ne
   80806:	2301      	movne	r3, #1
   80808:	2300      	moveq	r3, #0
   8080a:	b2db      	uxtb	r3, r3
   8080c:	4619      	mov	r1, r3
   8080e:	2053      	movs	r0, #83	; 0x53
   80810:	f7ff fe48 	bl	804a4 <ioport_set_pin_level>
  ioport_set_pin_level(_PIN_LCD_D6, ( byte&(1<<2) )!=0 );
   80814:	79fb      	ldrb	r3, [r7, #7]
   80816:	f003 0304 	and.w	r3, r3, #4
   8081a:	2b00      	cmp	r3, #0
   8081c:	bf14      	ite	ne
   8081e:	2301      	movne	r3, #1
   80820:	2300      	moveq	r3, #0
   80822:	b2db      	uxtb	r3, r3
   80824:	4619      	mov	r1, r3
   80826:	2051      	movs	r0, #81	; 0x51
   80828:	f7ff fe3c 	bl	804a4 <ioport_set_pin_level>
  ioport_set_pin_level(_PIN_LCD_D5, ( byte&(1<<1) )!=0 );
   8082c:	79fb      	ldrb	r3, [r7, #7]
   8082e:	f003 0302 	and.w	r3, r3, #2
   80832:	2b00      	cmp	r3, #0
   80834:	bf14      	ite	ne
   80836:	2301      	movne	r3, #1
   80838:	2300      	moveq	r3, #0
   8083a:	b2db      	uxtb	r3, r3
   8083c:	4619      	mov	r1, r3
   8083e:	204f      	movs	r0, #79	; 0x4f
   80840:	f7ff fe30 	bl	804a4 <ioport_set_pin_level>
  ioport_set_pin_level(_PIN_LCD_D4, ( byte&(1<<0) )!=0 );
   80844:	79fb      	ldrb	r3, [r7, #7]
   80846:	f003 0301 	and.w	r3, r3, #1
   8084a:	2b00      	cmp	r3, #0
   8084c:	bf14      	ite	ne
   8084e:	2301      	movne	r3, #1
   80850:	2300      	moveq	r3, #0
   80852:	b2db      	uxtb	r3, r3
   80854:	4619      	mov	r1, r3
   80856:	204d      	movs	r0, #77	; 0x4d
   80858:	f7ff fe24 	bl	804a4 <ioport_set_pin_level>

  ioport_set_pin_level(_PIN_LCD_E, 1);
   8085c:	2101      	movs	r1, #1
   8085e:	2050      	movs	r0, #80	; 0x50
   80860:	f7ff fe20 	bl	804a4 <ioport_set_pin_level>
  delay_us(1);
   80864:	f7ff fdb8 	bl	803d8 <sysclk_get_cpu_hz>
   80868:	4603      	mov	r3, r0
   8086a:	f04f 0400 	mov.w	r4, #0
   8086e:	a210      	add	r2, pc, #64	; (adr r2, 808b0 <lcd_write_low+0xf0>)
   80870:	e9d2 1200 	ldrd	r1, r2, [r2]
   80874:	eb13 0b01 	adds.w	fp, r3, r1
   80878:	eb44 0c02 	adc.w	ip, r4, r2
   8087c:	4658      	mov	r0, fp
   8087e:	4661      	mov	r1, ip
   80880:	4a0d      	ldr	r2, [pc, #52]	; (808b8 <lcd_write_low+0xf8>)
   80882:	f04f 0300 	mov.w	r3, #0
   80886:	f004 fccd 	bl	85224 <__aeabi_uldivmod>
   8088a:	4603      	mov	r3, r0
   8088c:	460c      	mov	r4, r1
   8088e:	4618      	mov	r0, r3
   80890:	f009 fde6 	bl	8a460 <__portable_delay_cycles_veneer>
  ioport_set_pin_level(_PIN_LCD_E, 0);
   80894:	2100      	movs	r1, #0
   80896:	2050      	movs	r0, #80	; 0x50
   80898:	f7ff fe04 	bl	804a4 <ioport_set_pin_level>
  busy();
   8089c:	f7ff fe60 	bl	80560 <busy>
}
   808a0:	bf00      	nop
   808a2:	3708      	adds	r7, #8
   808a4:	46bd      	mov	sp, r7
   808a6:	e8bd 8890 	ldmia.w	sp!, {r4, r7, fp, pc}
   808aa:	bf00      	nop
   808ac:	f3af 8000 	nop.w
   808b0:	00d59f7f 	.word	0x00d59f7f
   808b4:	00000000 	.word	0x00000000
   808b8:	00d59f80 	.word	0x00d59f80

000808bc <lcd_write_half_comm>:

// LCD write half command
// com ... command
void lcd_write_half_comm(uint8_t com){
   808bc:	b580      	push	{r7, lr}
   808be:	b082      	sub	sp, #8
   808c0:	af00      	add	r7, sp, #0
   808c2:	4603      	mov	r3, r0
   808c4:	71fb      	strb	r3, [r7, #7]
  ioport_set_pin_level(_PIN_LCD_RS, 0);
   808c6:	2100      	movs	r1, #0
   808c8:	204c      	movs	r0, #76	; 0x4c
   808ca:	f7ff fdeb 	bl	804a4 <ioport_set_pin_level>
  lcd_write_high(com);
   808ce:	79fb      	ldrb	r3, [r7, #7]
   808d0:	4618      	mov	r0, r3
   808d2:	f7ff fef9 	bl	806c8 <lcd_write_high>
}
   808d6:	bf00      	nop
   808d8:	3708      	adds	r7, #8
   808da:	46bd      	mov	sp, r7
   808dc:	bd80      	pop	{r7, pc}

000808de <lcd_write_comm>:

// LCD write command
// com ... command
void lcd_write_comm(uint8_t com){
   808de:	b580      	push	{r7, lr}
   808e0:	b082      	sub	sp, #8
   808e2:	af00      	add	r7, sp, #0
   808e4:	4603      	mov	r3, r0
   808e6:	71fb      	strb	r3, [r7, #7]
  lcd_write_half_comm(com);
   808e8:	79fb      	ldrb	r3, [r7, #7]
   808ea:	4618      	mov	r0, r3
   808ec:	f7ff ffe6 	bl	808bc <lcd_write_half_comm>
  lcd_write_low(com);
   808f0:	79fb      	ldrb	r3, [r7, #7]
   808f2:	4618      	mov	r0, r3
   808f4:	f7ff ff64 	bl	807c0 <lcd_write_low>
}
   808f8:	bf00      	nop
   808fa:	3708      	adds	r7, #8
   808fc:	46bd      	mov	sp, r7
   808fe:	bd80      	pop	{r7, pc}

00080900 <lcd_write_data>:

// LCD write data
// data ... character
void lcd_write_data(uint8_t data){
   80900:	b580      	push	{r7, lr}
   80902:	b082      	sub	sp, #8
   80904:	af00      	add	r7, sp, #0
   80906:	4603      	mov	r3, r0
   80908:	71fb      	strb	r3, [r7, #7]
  ioport_set_pin_level(_PIN_LCD_RS, 1);
   8090a:	2101      	movs	r1, #1
   8090c:	204c      	movs	r0, #76	; 0x4c
   8090e:	f7ff fdc9 	bl	804a4 <ioport_set_pin_level>
  lcd_write_high(data);
   80912:	79fb      	ldrb	r3, [r7, #7]
   80914:	4618      	mov	r0, r3
   80916:	f7ff fed7 	bl	806c8 <lcd_write_high>
  lcd_write_low(data);
   8091a:	79fb      	ldrb	r3, [r7, #7]
   8091c:	4618      	mov	r0, r3
   8091e:	f7ff ff4f 	bl	807c0 <lcd_write_low>
}
   80922:	bf00      	nop
   80924:	3708      	adds	r7, #8
   80926:	46bd      	mov	sp, r7
   80928:	bd80      	pop	{r7, pc}
   8092a:	0000      	movs	r0, r0
   8092c:	0000      	movs	r0, r0
	...

00080930 <lcd_init>:

// LCD initialisation routine
void lcd_init(void){
   80930:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
   80934:	af00      	add	r7, sp, #0
  ioport_init();
   80936:	f7ff fd62 	bl	803fe <ioport_init>
/*  ioport_set_port_dir(IOPORT_PIOC,\
       PIO_PC12 | PIO_PC14 | PIO_PC16 | PIO_PC13 |PIO_PC15 |PIO_PC17 |PIO_PC19,\
       IOPORT_DIR_OUTPUT);
       */

  ioport_set_pin_dir(_PIN_LCD_D4, IOPORT_DIR_OUTPUT);
   8093a:	2101      	movs	r1, #1
   8093c:	204d      	movs	r0, #77	; 0x4d
   8093e:	f7ff fd6e 	bl	8041e <ioport_set_pin_dir>
  ioport_set_pin_dir(_PIN_LCD_D5, IOPORT_DIR_OUTPUT);
   80942:	2101      	movs	r1, #1
   80944:	204f      	movs	r0, #79	; 0x4f
   80946:	f7ff fd6a 	bl	8041e <ioport_set_pin_dir>
  ioport_set_pin_dir(_PIN_LCD_D6, IOPORT_DIR_OUTPUT);
   8094a:	2101      	movs	r1, #1
   8094c:	2051      	movs	r0, #81	; 0x51
   8094e:	f7ff fd66 	bl	8041e <ioport_set_pin_dir>
  ioport_set_pin_dir(_PIN_LCD_D7, IOPORT_DIR_OUTPUT);
   80952:	2101      	movs	r1, #1
   80954:	2053      	movs	r0, #83	; 0x53
   80956:	f7ff fd62 	bl	8041e <ioport_set_pin_dir>

  ioport_set_pin_dir(_PIN_LCD_E, IOPORT_DIR_OUTPUT);
   8095a:	2101      	movs	r1, #1
   8095c:	2050      	movs	r0, #80	; 0x50
   8095e:	f7ff fd5e 	bl	8041e <ioport_set_pin_dir>
  ioport_set_pin_dir(_PIN_LCD_RS, IOPORT_DIR_OUTPUT);
   80962:	2101      	movs	r1, #1
   80964:	204c      	movs	r0, #76	; 0x4c
   80966:	f7ff fd5a 	bl	8041e <ioport_set_pin_dir>
  ioport_set_pin_dir(_PIN_LCD_RW, IOPORT_DIR_OUTPUT);
   8096a:	2101      	movs	r1, #1
   8096c:	204e      	movs	r0, #78	; 0x4e
   8096e:	f7ff fd56 	bl	8041e <ioport_set_pin_dir>


  delay_us(40000);
   80972:	f7ff fd31 	bl	803d8 <sysclk_get_cpu_hz>
   80976:	4603      	mov	r3, r0
   80978:	461d      	mov	r5, r3
   8097a:	f04f 0600 	mov.w	r6, #0
   8097e:	462b      	mov	r3, r5
   80980:	4634      	mov	r4, r6
   80982:	f04f 0100 	mov.w	r1, #0
   80986:	f04f 0200 	mov.w	r2, #0
   8098a:	00a2      	lsls	r2, r4, #2
   8098c:	ea42 7293 	orr.w	r2, r2, r3, lsr #30
   80990:	0099      	lsls	r1, r3, #2
   80992:	460b      	mov	r3, r1
   80994:	4614      	mov	r4, r2
   80996:	195b      	adds	r3, r3, r5
   80998:	eb44 0406 	adc.w	r4, r4, r6
   8099c:	f04f 0100 	mov.w	r1, #0
   809a0:	f04f 0200 	mov.w	r2, #0
   809a4:	00e2      	lsls	r2, r4, #3
   809a6:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
   809aa:	00d9      	lsls	r1, r3, #3
   809ac:	460b      	mov	r3, r1
   809ae:	4614      	mov	r4, r2
   809b0:	1b5b      	subs	r3, r3, r5
   809b2:	eb64 0406 	sbc.w	r4, r4, r6
   809b6:	f04f 0100 	mov.w	r1, #0
   809ba:	f04f 0200 	mov.w	r2, #0
   809be:	0122      	lsls	r2, r4, #4
   809c0:	ea42 7213 	orr.w	r2, r2, r3, lsr #28
   809c4:	0119      	lsls	r1, r3, #4
   809c6:	460b      	mov	r3, r1
   809c8:	4614      	mov	r4, r2
   809ca:	195b      	adds	r3, r3, r5
   809cc:	eb44 0406 	adc.w	r4, r4, r6
   809d0:	f04f 0100 	mov.w	r1, #0
   809d4:	f04f 0200 	mov.w	r2, #0
   809d8:	01a2      	lsls	r2, r4, #6
   809da:	ea42 6293 	orr.w	r2, r2, r3, lsr #26
   809de:	0199      	lsls	r1, r3, #6
   809e0:	460b      	mov	r3, r1
   809e2:	4614      	mov	r4, r2
   809e4:	4619      	mov	r1, r3
   809e6:	4622      	mov	r2, r4
   809e8:	a469      	add	r4, pc, #420	; (adr r4, 80b90 <lcd_init+0x260>)
   809ea:	e9d4 3400 	ldrd	r3, r4, [r4]
   809ee:	18cd      	adds	r5, r1, r3
   809f0:	eb42 0604 	adc.w	r6, r2, r4
   809f4:	4628      	mov	r0, r5
   809f6:	4631      	mov	r1, r6
   809f8:	4a67      	ldr	r2, [pc, #412]	; (80b98 <lcd_init+0x268>)
   809fa:	f04f 0300 	mov.w	r3, #0
   809fe:	f004 fc11 	bl	85224 <__aeabi_uldivmod>
   80a02:	4603      	mov	r3, r0
   80a04:	460c      	mov	r4, r1
   80a06:	4618      	mov	r0, r3
   80a08:	f009 fd2a 	bl	8a460 <__portable_delay_cycles_veneer>

  lcd_write_half_comm(SET | BITS_8);
   80a0c:	2030      	movs	r0, #48	; 0x30
   80a0e:	f7ff ff55 	bl	808bc <lcd_write_half_comm>
  delay_us(4100);
   80a12:	f7ff fce1 	bl	803d8 <sysclk_get_cpu_hz>
   80a16:	4603      	mov	r3, r0
   80a18:	461d      	mov	r5, r3
   80a1a:	f04f 0600 	mov.w	r6, #0
   80a1e:	462b      	mov	r3, r5
   80a20:	4634      	mov	r4, r6
   80a22:	f04f 0100 	mov.w	r1, #0
   80a26:	f04f 0200 	mov.w	r2, #0
   80a2a:	02a2      	lsls	r2, r4, #10
   80a2c:	ea42 5293 	orr.w	r2, r2, r3, lsr #22
   80a30:	0299      	lsls	r1, r3, #10
   80a32:	460b      	mov	r3, r1
   80a34:	4614      	mov	r4, r2
   80a36:	195b      	adds	r3, r3, r5
   80a38:	eb44 0406 	adc.w	r4, r4, r6
   80a3c:	f04f 0100 	mov.w	r1, #0
   80a40:	f04f 0200 	mov.w	r2, #0
   80a44:	00a2      	lsls	r2, r4, #2
   80a46:	ea42 7293 	orr.w	r2, r2, r3, lsr #30
   80a4a:	0099      	lsls	r1, r3, #2
   80a4c:	460b      	mov	r3, r1
   80a4e:	4614      	mov	r4, r2
   80a50:	4619      	mov	r1, r3
   80a52:	4622      	mov	r2, r4
   80a54:	a44e      	add	r4, pc, #312	; (adr r4, 80b90 <lcd_init+0x260>)
   80a56:	e9d4 3400 	ldrd	r3, r4, [r4]
   80a5a:	18cd      	adds	r5, r1, r3
   80a5c:	eb42 0604 	adc.w	r6, r2, r4
   80a60:	4628      	mov	r0, r5
   80a62:	4631      	mov	r1, r6
   80a64:	4a4c      	ldr	r2, [pc, #304]	; (80b98 <lcd_init+0x268>)
   80a66:	f04f 0300 	mov.w	r3, #0
   80a6a:	f004 fbdb 	bl	85224 <__aeabi_uldivmod>
   80a6e:	4603      	mov	r3, r0
   80a70:	460c      	mov	r4, r1
   80a72:	4618      	mov	r0, r3
   80a74:	f009 fcf4 	bl	8a460 <__portable_delay_cycles_veneer>


  lcd_write_half_comm(SET | BITS_8);
   80a78:	2030      	movs	r0, #48	; 0x30
   80a7a:	f7ff ff1f 	bl	808bc <lcd_write_half_comm>
  delay_us(100);
   80a7e:	f7ff fcab 	bl	803d8 <sysclk_get_cpu_hz>
   80a82:	4603      	mov	r3, r0
   80a84:	461d      	mov	r5, r3
   80a86:	f04f 0600 	mov.w	r6, #0
   80a8a:	46ab      	mov	fp, r5
   80a8c:	46b4      	mov	ip, r6
   80a8e:	eb1b 030b 	adds.w	r3, fp, fp
   80a92:	eb4c 040c 	adc.w	r4, ip, ip
   80a96:	469b      	mov	fp, r3
   80a98:	46a4      	mov	ip, r4
   80a9a:	eb1b 0b05 	adds.w	fp, fp, r5
   80a9e:	eb4c 0c06 	adc.w	ip, ip, r6
   80aa2:	f04f 0100 	mov.w	r1, #0
   80aa6:	f04f 0200 	mov.w	r2, #0
   80aaa:	ea4f 124c 	mov.w	r2, ip, lsl #5
   80aae:	ea42 62db 	orr.w	r2, r2, fp, lsr #27
   80ab2:	ea4f 114b 	mov.w	r1, fp, lsl #5
   80ab6:	eb1b 0b01 	adds.w	fp, fp, r1
   80aba:	eb4c 0c02 	adc.w	ip, ip, r2
   80abe:	eb1b 0305 	adds.w	r3, fp, r5
   80ac2:	eb4c 0406 	adc.w	r4, ip, r6
   80ac6:	a232      	add	r2, pc, #200	; (adr r2, 80b90 <lcd_init+0x260>)
   80ac8:	e9d2 1200 	ldrd	r1, r2, [r2]
   80acc:	185d      	adds	r5, r3, r1
   80ace:	eb44 0602 	adc.w	r6, r4, r2
   80ad2:	4628      	mov	r0, r5
   80ad4:	4631      	mov	r1, r6
   80ad6:	4a30      	ldr	r2, [pc, #192]	; (80b98 <lcd_init+0x268>)
   80ad8:	f04f 0300 	mov.w	r3, #0
   80adc:	f004 fba2 	bl	85224 <__aeabi_uldivmod>
   80ae0:	4603      	mov	r3, r0
   80ae2:	460c      	mov	r4, r1
   80ae4:	4618      	mov	r0, r3
   80ae6:	f009 fcbb 	bl	8a460 <__portable_delay_cycles_veneer>
  lcd_write_half_comm(SET | BITS_8);
   80aea:	2030      	movs	r0, #48	; 0x30
   80aec:	f7ff fee6 	bl	808bc <lcd_write_half_comm>
  busy();
   80af0:	f7ff fd36 	bl	80560 <busy>
  lcd_write_half_comm(SET | BITS_4);
   80af4:	2020      	movs	r0, #32
   80af6:	f7ff fee1 	bl	808bc <lcd_write_half_comm>
  delay_us(100);	// LCD initialisation sometimes hangs without this delay ???
   80afa:	f7ff fc6d 	bl	803d8 <sysclk_get_cpu_hz>
   80afe:	4603      	mov	r3, r0
   80b00:	461d      	mov	r5, r3
   80b02:	f04f 0600 	mov.w	r6, #0
   80b06:	46ab      	mov	fp, r5
   80b08:	46b4      	mov	ip, r6
   80b0a:	eb1b 030b 	adds.w	r3, fp, fp
   80b0e:	eb4c 040c 	adc.w	r4, ip, ip
   80b12:	469b      	mov	fp, r3
   80b14:	46a4      	mov	ip, r4
   80b16:	eb1b 0b05 	adds.w	fp, fp, r5
   80b1a:	eb4c 0c06 	adc.w	ip, ip, r6
   80b1e:	f04f 0100 	mov.w	r1, #0
   80b22:	f04f 0200 	mov.w	r2, #0
   80b26:	ea4f 124c 	mov.w	r2, ip, lsl #5
   80b2a:	ea42 62db 	orr.w	r2, r2, fp, lsr #27
   80b2e:	ea4f 114b 	mov.w	r1, fp, lsl #5
   80b32:	eb1b 0b01 	adds.w	fp, fp, r1
   80b36:	eb4c 0c02 	adc.w	ip, ip, r2
   80b3a:	eb1b 0305 	adds.w	r3, fp, r5
   80b3e:	eb4c 0406 	adc.w	r4, ip, r6
   80b42:	a213      	add	r2, pc, #76	; (adr r2, 80b90 <lcd_init+0x260>)
   80b44:	e9d2 1200 	ldrd	r1, r2, [r2]
   80b48:	185d      	adds	r5, r3, r1
   80b4a:	eb44 0602 	adc.w	r6, r4, r2
   80b4e:	4628      	mov	r0, r5
   80b50:	4631      	mov	r1, r6
   80b52:	4a11      	ldr	r2, [pc, #68]	; (80b98 <lcd_init+0x268>)
   80b54:	f04f 0300 	mov.w	r3, #0
   80b58:	f004 fb64 	bl	85224 <__aeabi_uldivmod>
   80b5c:	4603      	mov	r3, r0
   80b5e:	460c      	mov	r4, r1
   80b60:	4618      	mov	r0, r3
   80b62:	f009 fc7d 	bl	8a460 <__portable_delay_cycles_veneer>
  busy();
   80b66:	f7ff fcfb 	bl	80560 <busy>
  lcd_write_comm(SET | BITS_4 | LINES_2 | DOTS_5_8);
   80b6a:	2028      	movs	r0, #40	; 0x28
   80b6c:	f7ff feb7 	bl	808de <lcd_write_comm>
  lcd_write_comm(CONTROL | DISPLAY_OFF | CURSOR_OFF | BLINK_OFF);
   80b70:	2008      	movs	r0, #8
   80b72:	f7ff feb4 	bl	808de <lcd_write_comm>
  lcd_write_comm(CLEAR_DISPLAY);
   80b76:	2001      	movs	r0, #1
   80b78:	f7ff feb1 	bl	808de <lcd_write_comm>
  lcd_write_comm(MODE | CURSOR_DIRECTION_RIGHT | DISPLAY_SHIFT_OFF);
   80b7c:	2006      	movs	r0, #6
   80b7e:	f7ff feae 	bl	808de <lcd_write_comm>
  lcd_write_comm(CONTROL | DISPLAY_ON | CURSOR_OFF | BLINK_OFF);
   80b82:	200c      	movs	r0, #12
   80b84:	f7ff feab 	bl	808de <lcd_write_comm>

}
   80b88:	bf00      	nop
   80b8a:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
   80b8e:	bf00      	nop
   80b90:	00d59f7f 	.word	0x00d59f7f
   80b94:	00000000 	.word	0x00000000
   80b98:	00d59f80 	.word	0x00d59f80

00080b9c <lcd_driver>:


/* Sends the lcd_string to the LCD */
void lcd_driver(void){
   80b9c:	b580      	push	{r7, lr}
   80b9e:	b082      	sub	sp, #8
   80ba0:	af00      	add	r7, sp, #0
  int i;
  lcd_write_comm(DDRAM | 0x00);
   80ba2:	2080      	movs	r0, #128	; 0x80
   80ba4:	f7ff fe9b 	bl	808de <lcd_write_comm>
  for(i = 0; i < 16; i++){
   80ba8:	2300      	movs	r3, #0
   80baa:	607b      	str	r3, [r7, #4]
   80bac:	e00a      	b.n	80bc4 <lcd_driver+0x28>
	lcd_write_data(lcd_string[i]);
   80bae:	4b12      	ldr	r3, [pc, #72]	; (80bf8 <lcd_driver+0x5c>)
   80bb0:	681a      	ldr	r2, [r3, #0]
   80bb2:	687b      	ldr	r3, [r7, #4]
   80bb4:	4413      	add	r3, r2
   80bb6:	781b      	ldrb	r3, [r3, #0]
   80bb8:	4618      	mov	r0, r3
   80bba:	f7ff fea1 	bl	80900 <lcd_write_data>
  for(i = 0; i < 16; i++){
   80bbe:	687b      	ldr	r3, [r7, #4]
   80bc0:	3301      	adds	r3, #1
   80bc2:	607b      	str	r3, [r7, #4]
   80bc4:	687b      	ldr	r3, [r7, #4]
   80bc6:	2b0f      	cmp	r3, #15
   80bc8:	ddf1      	ble.n	80bae <lcd_driver+0x12>
  }
  lcd_write_comm(DDRAM | 0x40);
   80bca:	20c0      	movs	r0, #192	; 0xc0
   80bcc:	f7ff fe87 	bl	808de <lcd_write_comm>
  for(; i < 32; i++){
   80bd0:	e00a      	b.n	80be8 <lcd_driver+0x4c>
	lcd_write_data(lcd_string[i]);
   80bd2:	4b09      	ldr	r3, [pc, #36]	; (80bf8 <lcd_driver+0x5c>)
   80bd4:	681a      	ldr	r2, [r3, #0]
   80bd6:	687b      	ldr	r3, [r7, #4]
   80bd8:	4413      	add	r3, r2
   80bda:	781b      	ldrb	r3, [r3, #0]
   80bdc:	4618      	mov	r0, r3
   80bde:	f7ff fe8f 	bl	80900 <lcd_write_data>
  for(; i < 32; i++){
   80be2:	687b      	ldr	r3, [r7, #4]
   80be4:	3301      	adds	r3, #1
   80be6:	607b      	str	r3, [r7, #4]
   80be8:	687b      	ldr	r3, [r7, #4]
   80bea:	2b1f      	cmp	r3, #31
   80bec:	ddf1      	ble.n	80bd2 <lcd_driver+0x36>
  }
}
   80bee:	bf00      	nop
   80bf0:	3708      	adds	r7, #8
   80bf2:	46bd      	mov	sp, r7
   80bf4:	bd80      	pop	{r7, pc}
   80bf6:	bf00      	nop
   80bf8:	200701bc 	.word	0x200701bc

00080bfc <sysclk_enable_peripheral_clock>:
{
   80bfc:	b580      	push	{r7, lr}
   80bfe:	b082      	sub	sp, #8
   80c00:	af00      	add	r7, sp, #0
   80c02:	6078      	str	r0, [r7, #4]
	pmc_enable_periph_clk(ul_id);
   80c04:	6878      	ldr	r0, [r7, #4]
   80c06:	f001 ff73 	bl	82af0 <pmc_enable_periph_clk>
}
   80c0a:	bf00      	nop
   80c0c:	3708      	adds	r7, #8
   80c0e:	46bd      	mov	sp, r7
   80c10:	bd80      	pop	{r7, pc}
	...

00080c14 <dacc_setup>:





void dacc_setup(void){
   80c14:	b580      	push	{r7, lr}
   80c16:	af00      	add	r7, sp, #0

    sysclk_enable_peripheral_clock(ID_DACC);
   80c18:	2026      	movs	r0, #38	; 0x26
   80c1a:	f7ff ffef 	bl	80bfc <sysclk_enable_peripheral_clock>
    dacc_reset(DACC);
   80c1e:	480b      	ldr	r0, [pc, #44]	; (80c4c <dacc_setup+0x38>)
   80c20:	f002 f9d1 	bl	82fc6 <dacc_reset>
    dacc_set_transfer_mode(DACC,DACC_MR_WORD_HALF);
   80c24:	2100      	movs	r1, #0
   80c26:	4809      	ldr	r0, [pc, #36]	; (80c4c <dacc_setup+0x38>)
   80c28:	f002 f9d9 	bl	82fde <dacc_set_transfer_mode>
    dacc_set_timing(DACC,0x08,0,0x10);
   80c2c:	2310      	movs	r3, #16
   80c2e:	2200      	movs	r2, #0
   80c30:	2108      	movs	r1, #8
   80c32:	4806      	ldr	r0, [pc, #24]	; (80c4c <dacc_setup+0x38>)
   80c34:	f002 fa27 	bl	83086 <dacc_set_timing>
    dacc_set_channel_selection(DACC,1);
   80c38:	2101      	movs	r1, #1
   80c3a:	4804      	ldr	r0, [pc, #16]	; (80c4c <dacc_setup+0x38>)
   80c3c:	f002 fa02 	bl	83044 <dacc_set_channel_selection>
    dacc_enable_channel(DACC,1);
   80c40:	2101      	movs	r1, #1
   80c42:	4802      	ldr	r0, [pc, #8]	; (80c4c <dacc_setup+0x38>)
   80c44:	f002 fa4f 	bl	830e6 <dacc_enable_channel>

}
   80c48:	bf00      	nop
   80c4a:	bd80      	pop	{r7, pc}
   80c4c:	400c8000 	.word	0x400c8000

00080c50 <TC0_Handler>:





void TC0_Handler(void){
   80c50:	b590      	push	{r4, r7, lr}
   80c52:	b083      	sub	sp, #12
   80c54:	af00      	add	r7, sp, #0
    uint32_t status = 0;
   80c56:	2300      	movs	r3, #0
   80c58:	607b      	str	r3, [r7, #4]
    static uint8_t i = 0, direction = 1; //??
    uint32_t t;

     t =(SystemCoreClock/32)/( 2*(NS-1)*signal.f );
   80c5a:	4b31      	ldr	r3, [pc, #196]	; (80d20 <TC0_Handler+0xd0>)
   80c5c:	681b      	ldr	r3, [r3, #0]
   80c5e:	095b      	lsrs	r3, r3, #5
   80c60:	4618      	mov	r0, r3
   80c62:	f004 f917 	bl	84e94 <__aeabi_ui2f>
   80c66:	4604      	mov	r4, r0
   80c68:	4b2e      	ldr	r3, [pc, #184]	; (80d24 <TC0_Handler+0xd4>)
   80c6a:	681b      	ldr	r3, [r3, #0]
   80c6c:	492e      	ldr	r1, [pc, #184]	; (80d28 <TC0_Handler+0xd8>)
   80c6e:	4618      	mov	r0, r3
   80c70:	f004 f968 	bl	84f44 <__aeabi_fmul>
   80c74:	4603      	mov	r3, r0
   80c76:	4619      	mov	r1, r3
   80c78:	4620      	mov	r0, r4
   80c7a:	f004 fa17 	bl	850ac <__aeabi_fdiv>
   80c7e:	4603      	mov	r3, r0
   80c80:	4618      	mov	r0, r3
   80c82:	f004 faaf 	bl	851e4 <__aeabi_f2uiz>
   80c86:	4603      	mov	r3, r0
   80c88:	603b      	str	r3, [r7, #0]
     tc_write_rc(TC0,0,t);
   80c8a:	683a      	ldr	r2, [r7, #0]
   80c8c:	2100      	movs	r1, #0
   80c8e:	4827      	ldr	r0, [pc, #156]	; (80d2c <TC0_Handler+0xdc>)
   80c90:	f002 f8ea 	bl	82e68 <tc_write_rc>

    status = dacc_get_interrupt_status(DACC);
   80c94:	4826      	ldr	r0, [pc, #152]	; (80d30 <TC0_Handler+0xe0>)
   80c96:	f002 f9bd 	bl	83014 <dacc_get_interrupt_status>
   80c9a:	6078      	str	r0, [r7, #4]

    if(status != DACC_IMR_TXRDY){
   80c9c:	687b      	ldr	r3, [r7, #4]
   80c9e:	2b01      	cmp	r3, #1
   80ca0:	d01b      	beq.n	80cda <TC0_Handler+0x8a>
            dacc_write_conversion_data(DACC,signal.shape[i]);
   80ca2:	4b20      	ldr	r3, [pc, #128]	; (80d24 <TC0_Handler+0xd4>)
   80ca4:	685a      	ldr	r2, [r3, #4]
   80ca6:	4b23      	ldr	r3, [pc, #140]	; (80d34 <TC0_Handler+0xe4>)
   80ca8:	781b      	ldrb	r3, [r3, #0]
   80caa:	009b      	lsls	r3, r3, #2
   80cac:	4413      	add	r3, r2
   80cae:	681b      	ldr	r3, [r3, #0]
   80cb0:	4619      	mov	r1, r3
   80cb2:	481f      	ldr	r0, [pc, #124]	; (80d30 <TC0_Handler+0xe0>)
   80cb4:	f002 f9b9 	bl	8302a <dacc_write_conversion_data>
            if(direction)i++;
   80cb8:	4b1f      	ldr	r3, [pc, #124]	; (80d38 <TC0_Handler+0xe8>)
   80cba:	781b      	ldrb	r3, [r3, #0]
   80cbc:	2b00      	cmp	r3, #0
   80cbe:	d006      	beq.n	80cce <TC0_Handler+0x7e>
   80cc0:	4b1c      	ldr	r3, [pc, #112]	; (80d34 <TC0_Handler+0xe4>)
   80cc2:	781b      	ldrb	r3, [r3, #0]
   80cc4:	3301      	adds	r3, #1
   80cc6:	b2da      	uxtb	r2, r3
   80cc8:	4b1a      	ldr	r3, [pc, #104]	; (80d34 <TC0_Handler+0xe4>)
   80cca:	701a      	strb	r2, [r3, #0]
   80ccc:	e005      	b.n	80cda <TC0_Handler+0x8a>
            else i--;
   80cce:	4b19      	ldr	r3, [pc, #100]	; (80d34 <TC0_Handler+0xe4>)
   80cd0:	781b      	ldrb	r3, [r3, #0]
   80cd2:	3b01      	subs	r3, #1
   80cd4:	b2da      	uxtb	r2, r3
   80cd6:	4b17      	ldr	r3, [pc, #92]	; (80d34 <TC0_Handler+0xe4>)
   80cd8:	701a      	strb	r2, [r3, #0]
    }

    if(i==10){
   80cda:	4b16      	ldr	r3, [pc, #88]	; (80d34 <TC0_Handler+0xe4>)
   80cdc:	781b      	ldrb	r3, [r3, #0]
   80cde:	2b0a      	cmp	r3, #10
   80ce0:	d109      	bne.n	80cf6 <TC0_Handler+0xa6>
        direction = 0;
   80ce2:	4b15      	ldr	r3, [pc, #84]	; (80d38 <TC0_Handler+0xe8>)
   80ce4:	2200      	movs	r2, #0
   80ce6:	701a      	strb	r2, [r3, #0]
        i = i-2;
   80ce8:	4b12      	ldr	r3, [pc, #72]	; (80d34 <TC0_Handler+0xe4>)
   80cea:	781b      	ldrb	r3, [r3, #0]
   80cec:	3b02      	subs	r3, #2
   80cee:	b2da      	uxtb	r2, r3
   80cf0:	4b10      	ldr	r3, [pc, #64]	; (80d34 <TC0_Handler+0xe4>)
   80cf2:	701a      	strb	r2, [r3, #0]
   80cf4:	e00c      	b.n	80d10 <TC0_Handler+0xc0>
    }
    else if(i == 0){
   80cf6:	4b0f      	ldr	r3, [pc, #60]	; (80d34 <TC0_Handler+0xe4>)
   80cf8:	781b      	ldrb	r3, [r3, #0]
   80cfa:	2b00      	cmp	r3, #0
   80cfc:	d108      	bne.n	80d10 <TC0_Handler+0xc0>
        direction = 1;
   80cfe:	4b0e      	ldr	r3, [pc, #56]	; (80d38 <TC0_Handler+0xe8>)
   80d00:	2201      	movs	r2, #1
   80d02:	701a      	strb	r2, [r3, #0]
        i = i+2;
   80d04:	4b0b      	ldr	r3, [pc, #44]	; (80d34 <TC0_Handler+0xe4>)
   80d06:	781b      	ldrb	r3, [r3, #0]
   80d08:	3302      	adds	r3, #2
   80d0a:	b2da      	uxtb	r2, r3
   80d0c:	4b09      	ldr	r3, [pc, #36]	; (80d34 <TC0_Handler+0xe4>)
   80d0e:	701a      	strb	r2, [r3, #0]
    }
    tc_get_status(TC0, 0);
   80d10:	2100      	movs	r1, #0
   80d12:	4806      	ldr	r0, [pc, #24]	; (80d2c <TC0_Handler+0xdc>)
   80d14:	f002 f8cd 	bl	82eb2 <tc_get_status>
}
   80d18:	bf00      	nop
   80d1a:	370c      	adds	r7, #12
   80d1c:	46bd      	mov	sp, r7
   80d1e:	bd90      	pop	{r4, r7, pc}
   80d20:	200703f0 	.word	0x200703f0
   80d24:	200701c0 	.word	0x200701c0
   80d28:	41900000 	.word	0x41900000
   80d2c:	40080000 	.word	0x40080000
   80d30:	400c8000 	.word	0x400c8000
   80d34:	20070dc5 	.word	0x20070dc5
   80d38:	200701c8 	.word	0x200701c8

00080d3c <ioport_set_pin_level>:
{
   80d3c:	b480      	push	{r7}
   80d3e:	b08b      	sub	sp, #44	; 0x2c
   80d40:	af00      	add	r7, sp, #0
   80d42:	6078      	str	r0, [r7, #4]
   80d44:	460b      	mov	r3, r1
   80d46:	70fb      	strb	r3, [r7, #3]
   80d48:	687b      	ldr	r3, [r7, #4]
   80d4a:	627b      	str	r3, [r7, #36]	; 0x24
   80d4c:	78fb      	ldrb	r3, [r7, #3]
   80d4e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
   80d52:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   80d54:	61fb      	str	r3, [r7, #28]
   80d56:	69fb      	ldr	r3, [r7, #28]
   80d58:	61bb      	str	r3, [r7, #24]
	return pin >> 5;
   80d5a:	69bb      	ldr	r3, [r7, #24]
   80d5c:	095b      	lsrs	r3, r3, #5
   80d5e:	617b      	str	r3, [r7, #20]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   80d60:	697b      	ldr	r3, [r7, #20]
   80d62:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   80d66:	f203 7307 	addw	r3, r3, #1799	; 0x707
   80d6a:	025b      	lsls	r3, r3, #9
	Pio *base = arch_ioport_pin_to_base(pin);
   80d6c:	613b      	str	r3, [r7, #16]
	if (level) {
   80d6e:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
   80d72:	2b00      	cmp	r3, #0
   80d74:	d009      	beq.n	80d8a <ioport_set_pin_level+0x4e>
   80d76:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   80d78:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
   80d7a:	68fb      	ldr	r3, [r7, #12]
   80d7c:	f003 031f 	and.w	r3, r3, #31
   80d80:	2201      	movs	r2, #1
   80d82:	409a      	lsls	r2, r3
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80d84:	693b      	ldr	r3, [r7, #16]
   80d86:	631a      	str	r2, [r3, #48]	; 0x30
}
   80d88:	e008      	b.n	80d9c <ioport_set_pin_level+0x60>
   80d8a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   80d8c:	60bb      	str	r3, [r7, #8]
	return 1U << (pin & 0x1F);
   80d8e:	68bb      	ldr	r3, [r7, #8]
   80d90:	f003 031f 	and.w	r3, r3, #31
   80d94:	2201      	movs	r2, #1
   80d96:	409a      	lsls	r2, r3
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80d98:	693b      	ldr	r3, [r7, #16]
   80d9a:	635a      	str	r2, [r3, #52]	; 0x34
   80d9c:	bf00      	nop
   80d9e:	372c      	adds	r7, #44	; 0x2c
   80da0:	46bd      	mov	sp, r7
   80da2:	bc80      	pop	{r7}
   80da4:	4770      	bx	lr

00080da6 <ioport_toggle_pin_level>:
 * an output.
 *
 * \param pin IOPORT pin to toggle
 */
static inline void ioport_toggle_pin_level(ioport_pin_t pin)
{
   80da6:	b480      	push	{r7}
   80da8:	b08b      	sub	sp, #44	; 0x2c
   80daa:	af00      	add	r7, sp, #0
   80dac:	6078      	str	r0, [r7, #4]
   80dae:	687b      	ldr	r3, [r7, #4]
   80db0:	627b      	str	r3, [r7, #36]	; 0x24
   80db2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   80db4:	623b      	str	r3, [r7, #32]
   80db6:	6a3b      	ldr	r3, [r7, #32]
   80db8:	61fb      	str	r3, [r7, #28]
	return pin >> 5;
   80dba:	69fb      	ldr	r3, [r7, #28]
   80dbc:	095b      	lsrs	r3, r3, #5
   80dbe:	61bb      	str	r3, [r7, #24]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   80dc0:	69bb      	ldr	r3, [r7, #24]
   80dc2:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   80dc6:	f203 7307 	addw	r3, r3, #1799	; 0x707
   80dca:	025b      	lsls	r3, r3, #9
	return arch_ioport_port_to_base(port)->PIO_PDSR & mask;
}

__always_inline static void arch_ioport_toggle_pin_level(ioport_pin_t pin)
{
	Pio *port = arch_ioport_pin_to_base(pin);
   80dcc:	617b      	str	r3, [r7, #20]
   80dce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   80dd0:	613b      	str	r3, [r7, #16]
	return 1U << (pin & 0x1F);
   80dd2:	693b      	ldr	r3, [r7, #16]
   80dd4:	f003 031f 	and.w	r3, r3, #31
   80dd8:	2201      	movs	r2, #1
   80dda:	fa02 f303 	lsl.w	r3, r2, r3
	ioport_port_mask_t mask = arch_ioport_pin_to_mask(pin);
   80dde:	60fb      	str	r3, [r7, #12]

	if (port->PIO_PDSR & arch_ioport_pin_to_mask(pin)) {
   80de0:	697b      	ldr	r3, [r7, #20]
   80de2:	6bda      	ldr	r2, [r3, #60]	; 0x3c
   80de4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   80de6:	60bb      	str	r3, [r7, #8]
	return 1U << (pin & 0x1F);
   80de8:	68bb      	ldr	r3, [r7, #8]
   80dea:	f003 031f 	and.w	r3, r3, #31
   80dee:	2101      	movs	r1, #1
   80df0:	fa01 f303 	lsl.w	r3, r1, r3
	if (port->PIO_PDSR & arch_ioport_pin_to_mask(pin)) {
   80df4:	4013      	ands	r3, r2
   80df6:	2b00      	cmp	r3, #0
   80df8:	d003      	beq.n	80e02 <ioport_toggle_pin_level+0x5c>
		port->PIO_CODR = mask;
   80dfa:	697b      	ldr	r3, [r7, #20]
   80dfc:	68fa      	ldr	r2, [r7, #12]
   80dfe:	635a      	str	r2, [r3, #52]	; 0x34
	arch_ioport_toggle_pin_level(pin);
}
   80e00:	e002      	b.n	80e08 <ioport_toggle_pin_level+0x62>
	} else {
		port->PIO_SODR = mask;
   80e02:	697b      	ldr	r3, [r7, #20]
   80e04:	68fa      	ldr	r2, [r7, #12]
   80e06:	631a      	str	r2, [r3, #48]	; 0x30
   80e08:	bf00      	nop
   80e0a:	372c      	adds	r7, #44	; 0x2c
   80e0c:	46bd      	mov	sp, r7
   80e0e:	bc80      	pop	{r7}
   80e10:	4770      	bx	lr
	...

00080e14 <ura_driver>:


/*****************FUNKCIJE_0**************************************************/


void ura_driver(void){
   80e14:	b580      	push	{r7, lr}
   80e16:	af00      	add	r7, sp, #0
    static uint32_t clk = 0;

    clk++;
   80e18:	4b0b      	ldr	r3, [pc, #44]	; (80e48 <ura_driver+0x34>)
   80e1a:	681b      	ldr	r3, [r3, #0]
   80e1c:	3301      	adds	r3, #1
   80e1e:	4a0a      	ldr	r2, [pc, #40]	; (80e48 <ura_driver+0x34>)
   80e20:	6013      	str	r3, [r2, #0]

    if(!(clk%25)){
   80e22:	4b09      	ldr	r3, [pc, #36]	; (80e48 <ura_driver+0x34>)
   80e24:	6819      	ldr	r1, [r3, #0]
   80e26:	4b09      	ldr	r3, [pc, #36]	; (80e4c <ura_driver+0x38>)
   80e28:	fba3 2301 	umull	r2, r3, r3, r1
   80e2c:	08da      	lsrs	r2, r3, #3
   80e2e:	4613      	mov	r3, r2
   80e30:	009b      	lsls	r3, r3, #2
   80e32:	4413      	add	r3, r2
   80e34:	009a      	lsls	r2, r3, #2
   80e36:	4413      	add	r3, r2
   80e38:	1aca      	subs	r2, r1, r3
   80e3a:	2a00      	cmp	r2, #0
   80e3c:	d102      	bne.n	80e44 <ura_driver+0x30>
        ioport_toggle_pin_level(D1_IDX);
   80e3e:	2067      	movs	r0, #103	; 0x67
   80e40:	f7ff ffb1 	bl	80da6 <ioport_toggle_pin_level>
    }
}
   80e44:	bf00      	nop
   80e46:	bd80      	pop	{r7, pc}
   80e48:	20070dcc 	.word	0x20070dcc
   80e4c:	51eb851f 	.word	0x51eb851f

00080e50 <text_driver>:


void text_driver(void){                  // backspace = 8
   80e50:	b580      	push	{r7, lr}
   80e52:	b084      	sub	sp, #16
   80e54:	af00      	add	r7, sp, #0
    static uint8_t position = 0;
    int i,n = 0;
   80e56:	2300      	movs	r3, #0
   80e58:	60bb      	str	r3, [r7, #8]
    uint8_t key;
    /// z isklapljanjem procesov


    n = fifo_read(&keys_fifo,&key,1);
   80e5a:	1dfb      	adds	r3, r7, #7
   80e5c:	2201      	movs	r2, #1
   80e5e:	4619      	mov	r1, r3
   80e60:	4845      	ldr	r0, [pc, #276]	; (80f78 <text_driver+0x128>)
   80e62:	f001 f99b 	bl	8219c <fifo_read>
   80e66:	4603      	mov	r3, r0
   80e68:	60bb      	str	r3, [r7, #8]

    if((key == 27) && n){
   80e6a:	79fb      	ldrb	r3, [r7, #7]
   80e6c:	2b1b      	cmp	r3, #27
   80e6e:	d108      	bne.n	80e82 <text_driver+0x32>
   80e70:	68bb      	ldr	r3, [r7, #8]
   80e72:	2b00      	cmp	r3, #0
   80e74:	d005      	beq.n	80e82 <text_driver+0x32>
        task_text.active = 0;
   80e76:	4b41      	ldr	r3, [pc, #260]	; (80f7c <text_driver+0x12c>)
   80e78:	2200      	movs	r2, #0
   80e7a:	74da      	strb	r2, [r3, #19]
        task_sent.active = 1;
   80e7c:	4b40      	ldr	r3, [pc, #256]	; (80f80 <text_driver+0x130>)
   80e7e:	2201      	movs	r2, #1
   80e80:	74da      	strb	r2, [r3, #19]
    }

    if(n){
   80e82:	68bb      	ldr	r3, [r7, #8]
   80e84:	2b00      	cmp	r3, #0
   80e86:	d072      	beq.n	80f6e <text_driver+0x11e>

        switch(key){
   80e88:	79fb      	ldrb	r3, [r7, #7]
   80e8a:	2b0d      	cmp	r3, #13
   80e8c:	d013      	beq.n	80eb6 <text_driver+0x66>
   80e8e:	2b7f      	cmp	r3, #127	; 0x7f
   80e90:	d002      	beq.n	80e98 <text_driver+0x48>
   80e92:	2b0a      	cmp	r3, #10
   80e94:	d02b      	beq.n	80eee <text_driver+0x9e>
   80e96:	e02e      	b.n	80ef6 <text_driver+0xa6>

            case 127:  //backspace
                position--;
   80e98:	4b3a      	ldr	r3, [pc, #232]	; (80f84 <text_driver+0x134>)
   80e9a:	781b      	ldrb	r3, [r3, #0]
   80e9c:	3b01      	subs	r3, #1
   80e9e:	b2da      	uxtb	r2, r3
   80ea0:	4b38      	ldr	r3, [pc, #224]	; (80f84 <text_driver+0x134>)
   80ea2:	701a      	strb	r2, [r3, #0]
                lcd_string[16+position] = ' ';
   80ea4:	4b38      	ldr	r3, [pc, #224]	; (80f88 <text_driver+0x138>)
   80ea6:	681b      	ldr	r3, [r3, #0]
   80ea8:	4a36      	ldr	r2, [pc, #216]	; (80f84 <text_driver+0x134>)
   80eaa:	7812      	ldrb	r2, [r2, #0]
   80eac:	3210      	adds	r2, #16
   80eae:	4413      	add	r3, r2
   80eb0:	2220      	movs	r2, #32
   80eb2:	701a      	strb	r2, [r3, #0]
                break;
   80eb4:	e05b      	b.n	80f6e <text_driver+0x11e>
            case  13:  // line fead
                for(i=0; i<16;i++){
   80eb6:	2300      	movs	r3, #0
   80eb8:	60fb      	str	r3, [r7, #12]
   80eba:	e014      	b.n	80ee6 <text_driver+0x96>
                    lcd_string[i] = lcd_string[i+16];
   80ebc:	4b32      	ldr	r3, [pc, #200]	; (80f88 <text_driver+0x138>)
   80ebe:	681a      	ldr	r2, [r3, #0]
   80ec0:	68fb      	ldr	r3, [r7, #12]
   80ec2:	3310      	adds	r3, #16
   80ec4:	441a      	add	r2, r3
   80ec6:	4b30      	ldr	r3, [pc, #192]	; (80f88 <text_driver+0x138>)
   80ec8:	6819      	ldr	r1, [r3, #0]
   80eca:	68fb      	ldr	r3, [r7, #12]
   80ecc:	440b      	add	r3, r1
   80ece:	7812      	ldrb	r2, [r2, #0]
   80ed0:	701a      	strb	r2, [r3, #0]
                    lcd_string[i+16] = ' ';
   80ed2:	4b2d      	ldr	r3, [pc, #180]	; (80f88 <text_driver+0x138>)
   80ed4:	681a      	ldr	r2, [r3, #0]
   80ed6:	68fb      	ldr	r3, [r7, #12]
   80ed8:	3310      	adds	r3, #16
   80eda:	4413      	add	r3, r2
   80edc:	2220      	movs	r2, #32
   80ede:	701a      	strb	r2, [r3, #0]
                for(i=0; i<16;i++){
   80ee0:	68fb      	ldr	r3, [r7, #12]
   80ee2:	3301      	adds	r3, #1
   80ee4:	60fb      	str	r3, [r7, #12]
   80ee6:	68fb      	ldr	r3, [r7, #12]
   80ee8:	2b0f      	cmp	r3, #15
   80eea:	dde7      	ble.n	80ebc <text_driver+0x6c>

                }
                break;
   80eec:	e03f      	b.n	80f6e <text_driver+0x11e>
            case 10:  //carage return
                position = 0;
   80eee:	4b25      	ldr	r3, [pc, #148]	; (80f84 <text_driver+0x134>)
   80ef0:	2200      	movs	r2, #0
   80ef2:	701a      	strb	r2, [r3, #0]
                break;
   80ef4:	e03b      	b.n	80f6e <text_driver+0x11e>
            default:
                sprintf(lcd_string+16+position,"%c",(char)key);
   80ef6:	4b24      	ldr	r3, [pc, #144]	; (80f88 <text_driver+0x138>)
   80ef8:	681a      	ldr	r2, [r3, #0]
   80efa:	4b22      	ldr	r3, [pc, #136]	; (80f84 <text_driver+0x134>)
   80efc:	781b      	ldrb	r3, [r3, #0]
   80efe:	3310      	adds	r3, #16
   80f00:	4413      	add	r3, r2
   80f02:	79fa      	ldrb	r2, [r7, #7]
   80f04:	4921      	ldr	r1, [pc, #132]	; (80f8c <text_driver+0x13c>)
   80f06:	4618      	mov	r0, r3
   80f08:	f004 fbba 	bl	85680 <sprintf>
                position++;
   80f0c:	4b1d      	ldr	r3, [pc, #116]	; (80f84 <text_driver+0x134>)
   80f0e:	781b      	ldrb	r3, [r3, #0]
   80f10:	3301      	adds	r3, #1
   80f12:	b2da      	uxtb	r2, r3
   80f14:	4b1b      	ldr	r3, [pc, #108]	; (80f84 <text_driver+0x134>)
   80f16:	701a      	strb	r2, [r3, #0]
                lcd_string[16+position] = ' ';
   80f18:	4b1b      	ldr	r3, [pc, #108]	; (80f88 <text_driver+0x138>)
   80f1a:	681b      	ldr	r3, [r3, #0]
   80f1c:	4a19      	ldr	r2, [pc, #100]	; (80f84 <text_driver+0x134>)
   80f1e:	7812      	ldrb	r2, [r2, #0]
   80f20:	3210      	adds	r2, #16
   80f22:	4413      	add	r3, r2
   80f24:	2220      	movs	r2, #32
   80f26:	701a      	strb	r2, [r3, #0]

                if(position == 16){
   80f28:	4b16      	ldr	r3, [pc, #88]	; (80f84 <text_driver+0x134>)
   80f2a:	781b      	ldrb	r3, [r3, #0]
   80f2c:	2b10      	cmp	r3, #16
   80f2e:	d11e      	bne.n	80f6e <text_driver+0x11e>
                    position = 0;
   80f30:	4b14      	ldr	r3, [pc, #80]	; (80f84 <text_driver+0x134>)
   80f32:	2200      	movs	r2, #0
   80f34:	701a      	strb	r2, [r3, #0]

                    for(i=0; i<16;i++){
   80f36:	2300      	movs	r3, #0
   80f38:	60fb      	str	r3, [r7, #12]
   80f3a:	e014      	b.n	80f66 <text_driver+0x116>
                        lcd_string[i] = lcd_string[i+16];
   80f3c:	4b12      	ldr	r3, [pc, #72]	; (80f88 <text_driver+0x138>)
   80f3e:	681a      	ldr	r2, [r3, #0]
   80f40:	68fb      	ldr	r3, [r7, #12]
   80f42:	3310      	adds	r3, #16
   80f44:	441a      	add	r2, r3
   80f46:	4b10      	ldr	r3, [pc, #64]	; (80f88 <text_driver+0x138>)
   80f48:	6819      	ldr	r1, [r3, #0]
   80f4a:	68fb      	ldr	r3, [r7, #12]
   80f4c:	440b      	add	r3, r1
   80f4e:	7812      	ldrb	r2, [r2, #0]
   80f50:	701a      	strb	r2, [r3, #0]
                        lcd_string[i+16] = ' ';
   80f52:	4b0d      	ldr	r3, [pc, #52]	; (80f88 <text_driver+0x138>)
   80f54:	681a      	ldr	r2, [r3, #0]
   80f56:	68fb      	ldr	r3, [r7, #12]
   80f58:	3310      	adds	r3, #16
   80f5a:	4413      	add	r3, r2
   80f5c:	2220      	movs	r2, #32
   80f5e:	701a      	strb	r2, [r3, #0]
                    for(i=0; i<16;i++){
   80f60:	68fb      	ldr	r3, [r7, #12]
   80f62:	3301      	adds	r3, #1
   80f64:	60fb      	str	r3, [r7, #12]
   80f66:	68fb      	ldr	r3, [r7, #12]
   80f68:	2b0f      	cmp	r3, #15
   80f6a:	dde7      	ble.n	80f3c <text_driver+0xec>

                    }
                }
        }
    }
}
   80f6c:	e7ff      	b.n	80f6e <text_driver+0x11e>
   80f6e:	bf00      	nop
   80f70:	3710      	adds	r7, #16
   80f72:	46bd      	mov	sp, r7
   80f74:	bd80      	pop	{r7, pc}
   80f76:	bf00      	nop
   80f78:	200703e4 	.word	0x200703e4
   80f7c:	20070204 	.word	0x20070204
   80f80:	20070258 	.word	0x20070258
   80f84:	20070dd0 	.word	0x20070dd0
   80f88:	200701bc 	.word	0x200701bc
   80f8c:	00089edc 	.word	0x00089edc

00080f90 <buttons_driver>:


void buttons_driver(void){
   80f90:	b580      	push	{r7, lr}
   80f92:	b082      	sub	sp, #8
   80f94:	af00      	add	r7, sp, #0
    int butons = 0;
   80f96:	2300      	movs	r3, #0
   80f98:	607b      	str	r3, [r7, #4]

    butons = get_button_press();
   80f9a:	f000 fd91 	bl	81ac0 <get_button_press>
   80f9e:	6078      	str	r0, [r7, #4]

    if(butons & Mask_T1){
   80fa0:	687b      	ldr	r3, [r7, #4]
   80fa2:	f003 0301 	and.w	r3, r3, #1
   80fa6:	2b00      	cmp	r3, #0
   80fa8:	d004      	beq.n	80fb4 <buttons_driver+0x24>
        fifo_write(&keys_fifo,(const unsigned char *)"T1",2);
   80faa:	2202      	movs	r2, #2
   80fac:	4912      	ldr	r1, [pc, #72]	; (80ff8 <buttons_driver+0x68>)
   80fae:	4813      	ldr	r0, [pc, #76]	; (80ffc <buttons_driver+0x6c>)
   80fb0:	f001 f932 	bl	82218 <fifo_write>
    }
    if(butons & Mask_T2){
   80fb4:	687b      	ldr	r3, [r7, #4]
   80fb6:	f003 0302 	and.w	r3, r3, #2
   80fba:	2b00      	cmp	r3, #0
   80fbc:	d004      	beq.n	80fc8 <buttons_driver+0x38>
        fifo_write(&keys_fifo,(const unsigned char *)"T2",2);
   80fbe:	2202      	movs	r2, #2
   80fc0:	490f      	ldr	r1, [pc, #60]	; (81000 <buttons_driver+0x70>)
   80fc2:	480e      	ldr	r0, [pc, #56]	; (80ffc <buttons_driver+0x6c>)
   80fc4:	f001 f928 	bl	82218 <fifo_write>
    }
    if(butons & Mask_T3){
   80fc8:	687b      	ldr	r3, [r7, #4]
   80fca:	f003 0304 	and.w	r3, r3, #4
   80fce:	2b00      	cmp	r3, #0
   80fd0:	d004      	beq.n	80fdc <buttons_driver+0x4c>
        fifo_write(&keys_fifo,(const unsigned char *)"T3",2);
   80fd2:	2202      	movs	r2, #2
   80fd4:	490b      	ldr	r1, [pc, #44]	; (81004 <buttons_driver+0x74>)
   80fd6:	4809      	ldr	r0, [pc, #36]	; (80ffc <buttons_driver+0x6c>)
   80fd8:	f001 f91e 	bl	82218 <fifo_write>
    }
    if(butons & Mask_T4){
   80fdc:	687b      	ldr	r3, [r7, #4]
   80fde:	f003 0308 	and.w	r3, r3, #8
   80fe2:	2b00      	cmp	r3, #0
   80fe4:	d004      	beq.n	80ff0 <buttons_driver+0x60>
        fifo_write(&keys_fifo,(const unsigned char *)"T4",2);
   80fe6:	2202      	movs	r2, #2
   80fe8:	4907      	ldr	r1, [pc, #28]	; (81008 <buttons_driver+0x78>)
   80fea:	4804      	ldr	r0, [pc, #16]	; (80ffc <buttons_driver+0x6c>)
   80fec:	f001 f914 	bl	82218 <fifo_write>
    }
}
   80ff0:	bf00      	nop
   80ff2:	3708      	adds	r7, #8
   80ff4:	46bd      	mov	sp, r7
   80ff6:	bd80      	pop	{r7, pc}
   80ff8:	00089ee0 	.word	0x00089ee0
   80ffc:	200703e4 	.word	0x200703e4
   81000:	00089ee4 	.word	0x00089ee4
   81004:	00089ee8 	.word	0x00089ee8
   81008:	00089eec 	.word	0x00089eec

0008100c <led_driver>:


void led_driver(void){
   8100c:	b580      	push	{r7, lr}
   8100e:	b082      	sub	sp, #8
   81010:	af00      	add	r7, sp, #0
    uint8_t  check, data_read;
    static uint8_t  count=0;


    if(count>0){
   81012:	4b32      	ldr	r3, [pc, #200]	; (810dc <led_driver+0xd0>)
   81014:	781b      	ldrb	r3, [r3, #0]
   81016:	2b00      	cmp	r3, #0
   81018:	d039      	beq.n	8108e <led_driver+0x82>
        if((count%5 == 0)  && (count>50)){
   8101a:	4b30      	ldr	r3, [pc, #192]	; (810dc <led_driver+0xd0>)
   8101c:	781a      	ldrb	r2, [r3, #0]
   8101e:	4b30      	ldr	r3, [pc, #192]	; (810e0 <led_driver+0xd4>)
   81020:	fba3 1302 	umull	r1, r3, r3, r2
   81024:	0899      	lsrs	r1, r3, #2
   81026:	460b      	mov	r3, r1
   81028:	009b      	lsls	r3, r3, #2
   8102a:	440b      	add	r3, r1
   8102c:	1ad3      	subs	r3, r2, r3
   8102e:	b2db      	uxtb	r3, r3
   81030:	2b00      	cmp	r3, #0
   81032:	d10c      	bne.n	8104e <led_driver+0x42>
   81034:	4b29      	ldr	r3, [pc, #164]	; (810dc <led_driver+0xd0>)
   81036:	781b      	ldrb	r3, [r3, #0]
   81038:	2b32      	cmp	r3, #50	; 0x32
   8103a:	d908      	bls.n	8104e <led_driver+0x42>
            ioport_set_pin_level(D4_IDX, HIGH);
   8103c:	2101      	movs	r1, #1
   8103e:	2056      	movs	r0, #86	; 0x56
   81040:	f7ff fe7c 	bl	80d3c <ioport_set_pin_level>
            ioport_set_pin_level(D2_IDX, HIGH);
   81044:	2101      	movs	r1, #1
   81046:	205d      	movs	r0, #93	; 0x5d
   81048:	f7ff fe78 	bl	80d3c <ioport_set_pin_level>
   8104c:	e018      	b.n	81080 <led_driver+0x74>

        }
        else if((count%5 == 3)  && (count>50)){
   8104e:	4b23      	ldr	r3, [pc, #140]	; (810dc <led_driver+0xd0>)
   81050:	781a      	ldrb	r2, [r3, #0]
   81052:	4b23      	ldr	r3, [pc, #140]	; (810e0 <led_driver+0xd4>)
   81054:	fba3 1302 	umull	r1, r3, r3, r2
   81058:	0899      	lsrs	r1, r3, #2
   8105a:	460b      	mov	r3, r1
   8105c:	009b      	lsls	r3, r3, #2
   8105e:	440b      	add	r3, r1
   81060:	1ad3      	subs	r3, r2, r3
   81062:	b2db      	uxtb	r3, r3
   81064:	2b03      	cmp	r3, #3
   81066:	d10b      	bne.n	81080 <led_driver+0x74>
   81068:	4b1c      	ldr	r3, [pc, #112]	; (810dc <led_driver+0xd0>)
   8106a:	781b      	ldrb	r3, [r3, #0]
   8106c:	2b32      	cmp	r3, #50	; 0x32
   8106e:	d907      	bls.n	81080 <led_driver+0x74>
            ioport_set_pin_level(D4_IDX, LOW);
   81070:	2100      	movs	r1, #0
   81072:	2056      	movs	r0, #86	; 0x56
   81074:	f7ff fe62 	bl	80d3c <ioport_set_pin_level>
            ioport_set_pin_level(D2_IDX, LOW);
   81078:	2100      	movs	r1, #0
   8107a:	205d      	movs	r0, #93	; 0x5d
   8107c:	f7ff fe5e 	bl	80d3c <ioport_set_pin_level>

        }
        else{
        }

        count--;
   81080:	4b16      	ldr	r3, [pc, #88]	; (810dc <led_driver+0xd0>)
   81082:	781b      	ldrb	r3, [r3, #0]
   81084:	3b01      	subs	r3, #1
   81086:	b2da      	uxtb	r2, r3
   81088:	4b14      	ldr	r3, [pc, #80]	; (810dc <led_driver+0xd0>)
   8108a:	701a      	strb	r2, [r3, #0]
        else{
        //error reading or buffer empty
        }
    }

}
   8108c:	e021      	b.n	810d2 <led_driver+0xc6>
        check = fifo_read (&keys_fifo, &data_read, 1);
   8108e:	1dbb      	adds	r3, r7, #6
   81090:	2201      	movs	r2, #1
   81092:	4619      	mov	r1, r3
   81094:	4813      	ldr	r0, [pc, #76]	; (810e4 <led_driver+0xd8>)
   81096:	f001 f881 	bl	8219c <fifo_read>
   8109a:	4603      	mov	r3, r0
   8109c:	71fb      	strb	r3, [r7, #7]
        if(check == 1){
   8109e:	79fb      	ldrb	r3, [r7, #7]
   810a0:	2b01      	cmp	r3, #1
   810a2:	d116      	bne.n	810d2 <led_driver+0xc6>
            count = data_read * 5 +50;
   810a4:	79bb      	ldrb	r3, [r7, #6]
   810a6:	461a      	mov	r2, r3
   810a8:	0092      	lsls	r2, r2, #2
   810aa:	4413      	add	r3, r2
   810ac:	b2db      	uxtb	r3, r3
   810ae:	3332      	adds	r3, #50	; 0x32
   810b0:	b2da      	uxtb	r2, r3
   810b2:	4b0a      	ldr	r3, [pc, #40]	; (810dc <led_driver+0xd0>)
   810b4:	701a      	strb	r2, [r3, #0]
            ioport_set_pin_level(D4_IDX, HIGH);
   810b6:	2101      	movs	r1, #1
   810b8:	2056      	movs	r0, #86	; 0x56
   810ba:	f7ff fe3f 	bl	80d3c <ioport_set_pin_level>
            ioport_set_pin_level(D2_IDX, HIGH);
   810be:	2101      	movs	r1, #1
   810c0:	205d      	movs	r0, #93	; 0x5d
   810c2:	f7ff fe3b 	bl	80d3c <ioport_set_pin_level>
            count--;
   810c6:	4b05      	ldr	r3, [pc, #20]	; (810dc <led_driver+0xd0>)
   810c8:	781b      	ldrb	r3, [r3, #0]
   810ca:	3b01      	subs	r3, #1
   810cc:	b2da      	uxtb	r2, r3
   810ce:	4b03      	ldr	r3, [pc, #12]	; (810dc <led_driver+0xd0>)
   810d0:	701a      	strb	r2, [r3, #0]
}
   810d2:	bf00      	nop
   810d4:	3708      	adds	r7, #8
   810d6:	46bd      	mov	sp, r7
   810d8:	bd80      	pop	{r7, pc}
   810da:	bf00      	nop
   810dc:	20070dd1 	.word	0x20070dd1
   810e0:	cccccccd 	.word	0xcccccccd
   810e4:	200703e4 	.word	0x200703e4

000810e8 <sent_driver>:

void sent_driver(void){
   810e8:	b580      	push	{r7, lr}
   810ea:	b082      	sub	sp, #8
   810ec:	af00      	add	r7, sp, #0
    int n;
    uint8_t key;

    n = fifo_read(&keys_fifo,&key,1);
   810ee:	1cfb      	adds	r3, r7, #3
   810f0:	2201      	movs	r2, #1
   810f2:	4619      	mov	r1, r3
   810f4:	480e      	ldr	r0, [pc, #56]	; (81130 <sent_driver+0x48>)
   810f6:	f001 f851 	bl	8219c <fifo_read>
   810fa:	4603      	mov	r3, r0
   810fc:	607b      	str	r3, [r7, #4]

    if((key == 27) && n){
   810fe:	78fb      	ldrb	r3, [r7, #3]
   81100:	2b1b      	cmp	r3, #27
   81102:	d109      	bne.n	81118 <sent_driver+0x30>
   81104:	687b      	ldr	r3, [r7, #4]
   81106:	2b00      	cmp	r3, #0
   81108:	d006      	beq.n	81118 <sent_driver+0x30>
        task_text.active = 1;
   8110a:	4b0a      	ldr	r3, [pc, #40]	; (81134 <sent_driver+0x4c>)
   8110c:	2201      	movs	r2, #1
   8110e:	74da      	strb	r2, [r3, #19]
        task_sent.active = 0;
   81110:	4b09      	ldr	r3, [pc, #36]	; (81138 <sent_driver+0x50>)
   81112:	2200      	movs	r2, #0
   81114:	74da      	strb	r2, [r3, #19]
    }
    else if(n){
        uart_write(UART,key);
    }
}
   81116:	e007      	b.n	81128 <sent_driver+0x40>
    else if(n){
   81118:	687b      	ldr	r3, [r7, #4]
   8111a:	2b00      	cmp	r3, #0
   8111c:	d004      	beq.n	81128 <sent_driver+0x40>
        uart_write(UART,key);
   8111e:	78fb      	ldrb	r3, [r7, #3]
   81120:	4619      	mov	r1, r3
   81122:	4806      	ldr	r0, [pc, #24]	; (8113c <sent_driver+0x54>)
   81124:	f001 ff20 	bl	82f68 <uart_write>
}
   81128:	bf00      	nop
   8112a:	3708      	adds	r7, #8
   8112c:	46bd      	mov	sp, r7
   8112e:	bd80      	pop	{r7, pc}
   81130:	200703e4 	.word	0x200703e4
   81134:	20070204 	.word	0x20070204
   81138:	20070258 	.word	0x20070258
   8113c:	400e0800 	.word	0x400e0800

00081140 <text_driver1>:

/*********************************************funkcije_1********************************************************/

void text_driver1(void){
   81140:	b590      	push	{r4, r7, lr}
   81142:	b083      	sub	sp, #12
   81144:	af00      	add	r7, sp, #0
    int n,i;

    n = sprintf(lcd_string+16,"f = %.2f ",signal.f);
   81146:	4b24      	ldr	r3, [pc, #144]	; (811d8 <text_driver1+0x98>)
   81148:	681b      	ldr	r3, [r3, #0]
   8114a:	f103 0410 	add.w	r4, r3, #16
   8114e:	4b23      	ldr	r3, [pc, #140]	; (811dc <text_driver1+0x9c>)
   81150:	681b      	ldr	r3, [r3, #0]
   81152:	4618      	mov	r0, r3
   81154:	f003 faae 	bl	846b4 <__aeabi_f2d>
   81158:	4602      	mov	r2, r0
   8115a:	460b      	mov	r3, r1
   8115c:	4920      	ldr	r1, [pc, #128]	; (811e0 <text_driver1+0xa0>)
   8115e:	4620      	mov	r0, r4
   81160:	f004 fa8e 	bl	85680 <sprintf>
   81164:	6078      	str	r0, [r7, #4]

    if(signal.shape==sinus){
   81166:	4b1d      	ldr	r3, [pc, #116]	; (811dc <text_driver1+0x9c>)
   81168:	685b      	ldr	r3, [r3, #4]
   8116a:	4a1e      	ldr	r2, [pc, #120]	; (811e4 <text_driver1+0xa4>)
   8116c:	4293      	cmp	r3, r2
   8116e:	d116      	bne.n	8119e <text_driver1+0x5e>
        i = sprintf(lcd_string+16+n,"sinus");
   81170:	4b19      	ldr	r3, [pc, #100]	; (811d8 <text_driver1+0x98>)
   81172:	681a      	ldr	r2, [r3, #0]
   81174:	687b      	ldr	r3, [r7, #4]
   81176:	3310      	adds	r3, #16
   81178:	4413      	add	r3, r2
   8117a:	4a1b      	ldr	r2, [pc, #108]	; (811e8 <text_driver1+0xa8>)
   8117c:	6810      	ldr	r0, [r2, #0]
   8117e:	6018      	str	r0, [r3, #0]
   81180:	8892      	ldrh	r2, [r2, #4]
   81182:	809a      	strh	r2, [r3, #4]
   81184:	2305      	movs	r3, #5
   81186:	603b      	str	r3, [r7, #0]
        lcd_string[16+n+i] = ' ';
   81188:	4b13      	ldr	r3, [pc, #76]	; (811d8 <text_driver1+0x98>)
   8118a:	681b      	ldr	r3, [r3, #0]
   8118c:	687a      	ldr	r2, [r7, #4]
   8118e:	f102 0110 	add.w	r1, r2, #16
   81192:	683a      	ldr	r2, [r7, #0]
   81194:	440a      	add	r2, r1
   81196:	4413      	add	r3, r2
   81198:	2220      	movs	r2, #32
   8119a:	701a      	strb	r2, [r3, #0]
    }
    else{
        i = sprintf(lcd_string+16+n,"triang");
        lcd_string[16+n+i] = ' ';
    }
}
   8119c:	e017      	b.n	811ce <text_driver1+0x8e>
        i = sprintf(lcd_string+16+n,"triang");
   8119e:	4b0e      	ldr	r3, [pc, #56]	; (811d8 <text_driver1+0x98>)
   811a0:	681a      	ldr	r2, [r3, #0]
   811a2:	687b      	ldr	r3, [r7, #4]
   811a4:	3310      	adds	r3, #16
   811a6:	4413      	add	r3, r2
   811a8:	4a10      	ldr	r2, [pc, #64]	; (811ec <text_driver1+0xac>)
   811aa:	6810      	ldr	r0, [r2, #0]
   811ac:	6018      	str	r0, [r3, #0]
   811ae:	8891      	ldrh	r1, [r2, #4]
   811b0:	7992      	ldrb	r2, [r2, #6]
   811b2:	8099      	strh	r1, [r3, #4]
   811b4:	719a      	strb	r2, [r3, #6]
   811b6:	2306      	movs	r3, #6
   811b8:	603b      	str	r3, [r7, #0]
        lcd_string[16+n+i] = ' ';
   811ba:	4b07      	ldr	r3, [pc, #28]	; (811d8 <text_driver1+0x98>)
   811bc:	681b      	ldr	r3, [r3, #0]
   811be:	687a      	ldr	r2, [r7, #4]
   811c0:	f102 0110 	add.w	r1, r2, #16
   811c4:	683a      	ldr	r2, [r7, #0]
   811c6:	440a      	add	r2, r1
   811c8:	4413      	add	r3, r2
   811ca:	2220      	movs	r2, #32
   811cc:	701a      	strb	r2, [r3, #0]
}
   811ce:	bf00      	nop
   811d0:	370c      	adds	r7, #12
   811d2:	46bd      	mov	sp, r7
   811d4:	bd90      	pop	{r4, r7, pc}
   811d6:	bf00      	nop
   811d8:	200701bc 	.word	0x200701bc
   811dc:	200701c0 	.word	0x200701c0
   811e0:	00089ef0 	.word	0x00089ef0
   811e4:	20070e40 	.word	0x20070e40
   811e8:	00089efc 	.word	0x00089efc
   811ec:	00089f04 	.word	0x00089f04

000811f0 <buttons_driver1>:


void buttons_driver1(void){
   811f0:	b580      	push	{r7, lr}
   811f2:	b082      	sub	sp, #8
   811f4:	af00      	add	r7, sp, #0
    int butons = 0;
   811f6:	2300      	movs	r3, #0
   811f8:	607b      	str	r3, [r7, #4]

    butons = get_button_press();
   811fa:	f000 fc61 	bl	81ac0 <get_button_press>
   811fe:	6078      	str	r0, [r7, #4]

    if(butons & Mask_T1){
   81200:	687b      	ldr	r3, [r7, #4]
   81202:	f003 0301 	and.w	r3, r3, #1
   81206:	2b00      	cmp	r3, #0
   81208:	d002      	beq.n	81210 <buttons_driver1+0x20>
        signal.shape = sinus;
   8120a:	4b07      	ldr	r3, [pc, #28]	; (81228 <buttons_driver1+0x38>)
   8120c:	4a07      	ldr	r2, [pc, #28]	; (8122c <buttons_driver1+0x3c>)
   8120e:	605a      	str	r2, [r3, #4]
    }
    if(butons & Mask_T2){
   81210:	687b      	ldr	r3, [r7, #4]
   81212:	f003 0302 	and.w	r3, r3, #2
   81216:	2b00      	cmp	r3, #0
   81218:	d002      	beq.n	81220 <buttons_driver1+0x30>
        signal.shape = triang;
   8121a:	4b03      	ldr	r3, [pc, #12]	; (81228 <buttons_driver1+0x38>)
   8121c:	4a04      	ldr	r2, [pc, #16]	; (81230 <buttons_driver1+0x40>)
   8121e:	605a      	str	r2, [r3, #4]

    }
    if(butons & Mask_T4){

    }*/
}
   81220:	bf00      	nop
   81222:	3708      	adds	r7, #8
   81224:	46bd      	mov	sp, r7
   81226:	bd80      	pop	{r7, pc}
   81228:	200701c0 	.word	0x200701c0
   8122c:	20070e40 	.word	0x20070e40
   81230:	20070e18 	.word	0x20070e18

00081234 <ura_driver2>:

/*********************************funkcije_2******************************************/

void ura_driver2(void){
   81234:	b580      	push	{r7, lr}
   81236:	af00      	add	r7, sp, #0
    static uint32_t clk = 0;

    clk++;
   81238:	4b0b      	ldr	r3, [pc, #44]	; (81268 <ura_driver2+0x34>)
   8123a:	681b      	ldr	r3, [r3, #0]
   8123c:	3301      	adds	r3, #1
   8123e:	4a0a      	ldr	r2, [pc, #40]	; (81268 <ura_driver2+0x34>)
   81240:	6013      	str	r3, [r2, #0]

    if(!(clk%12)){
   81242:	4b09      	ldr	r3, [pc, #36]	; (81268 <ura_driver2+0x34>)
   81244:	6819      	ldr	r1, [r3, #0]
   81246:	4b09      	ldr	r3, [pc, #36]	; (8126c <ura_driver2+0x38>)
   81248:	fba3 2301 	umull	r2, r3, r3, r1
   8124c:	08da      	lsrs	r2, r3, #3
   8124e:	4613      	mov	r3, r2
   81250:	005b      	lsls	r3, r3, #1
   81252:	4413      	add	r3, r2
   81254:	009b      	lsls	r3, r3, #2
   81256:	1aca      	subs	r2, r1, r3
   81258:	2a00      	cmp	r2, #0
   8125a:	d102      	bne.n	81262 <ura_driver2+0x2e>
        ioport_toggle_pin_level(D1_IDX);
   8125c:	2067      	movs	r0, #103	; 0x67
   8125e:	f7ff fda2 	bl	80da6 <ioport_toggle_pin_level>
    }

}
   81262:	bf00      	nop
   81264:	bd80      	pop	{r7, pc}
   81266:	bf00      	nop
   81268:	20070dd4 	.word	0x20070dd4
   8126c:	aaaaaaab 	.word	0xaaaaaaab

00081270 <text_driver2>:


void text_driver2(void){
   81270:	b580      	push	{r7, lr}
   81272:	b084      	sub	sp, #16
   81274:	af00      	add	r7, sp, #0
    uint8_t waiting[KEYS_FIFO_SIZE];
    uint16_t n, i;
    n=0;
   81276:	2300      	movs	r3, #0
   81278:	81fb      	strh	r3, [r7, #14]
    i = 0;
   8127a:	2300      	movs	r3, #0
   8127c:	81bb      	strh	r3, [r7, #12]

    i = fifo_look(&keys_fifo,waiting);
   8127e:	463b      	mov	r3, r7
   81280:	4619      	mov	r1, r3
   81282:	4816      	ldr	r0, [pc, #88]	; (812dc <text_driver2+0x6c>)
   81284:	f001 f820 	bl	822c8 <fifo_look>
   81288:	4603      	mov	r3, r0
   8128a:	81bb      	strh	r3, [r7, #12]

    for(n = 0; (!(n == i) && (i != 0)); n++){
   8128c:	2300      	movs	r3, #0
   8128e:	81fb      	strh	r3, [r7, #14]
   81290:	e011      	b.n	812b6 <text_driver2+0x46>
        sprintf(lcd_string+16+n,"%d",(int)waiting[n]);
   81292:	4b13      	ldr	r3, [pc, #76]	; (812e0 <text_driver2+0x70>)
   81294:	681a      	ldr	r2, [r3, #0]
   81296:	89fb      	ldrh	r3, [r7, #14]
   81298:	3310      	adds	r3, #16
   8129a:	18d0      	adds	r0, r2, r3
   8129c:	89fb      	ldrh	r3, [r7, #14]
   8129e:	f107 0210 	add.w	r2, r7, #16
   812a2:	4413      	add	r3, r2
   812a4:	f813 3c10 	ldrb.w	r3, [r3, #-16]
   812a8:	461a      	mov	r2, r3
   812aa:	490e      	ldr	r1, [pc, #56]	; (812e4 <text_driver2+0x74>)
   812ac:	f004 f9e8 	bl	85680 <sprintf>
    for(n = 0; (!(n == i) && (i != 0)); n++){
   812b0:	89fb      	ldrh	r3, [r7, #14]
   812b2:	3301      	adds	r3, #1
   812b4:	81fb      	strh	r3, [r7, #14]
   812b6:	89fa      	ldrh	r2, [r7, #14]
   812b8:	89bb      	ldrh	r3, [r7, #12]
   812ba:	429a      	cmp	r2, r3
   812bc:	d002      	beq.n	812c4 <text_driver2+0x54>
   812be:	89bb      	ldrh	r3, [r7, #12]
   812c0:	2b00      	cmp	r3, #0
   812c2:	d1e6      	bne.n	81292 <text_driver2+0x22>
    }
    lcd_string[16+i] = ' ';
   812c4:	4b06      	ldr	r3, [pc, #24]	; (812e0 <text_driver2+0x70>)
   812c6:	681b      	ldr	r3, [r3, #0]
   812c8:	89ba      	ldrh	r2, [r7, #12]
   812ca:	3210      	adds	r2, #16
   812cc:	4413      	add	r3, r2
   812ce:	2220      	movs	r2, #32
   812d0:	701a      	strb	r2, [r3, #0]
}
   812d2:	bf00      	nop
   812d4:	3710      	adds	r7, #16
   812d6:	46bd      	mov	sp, r7
   812d8:	bd80      	pop	{r7, pc}
   812da:	bf00      	nop
   812dc:	200703e4 	.word	0x200703e4
   812e0:	200701bc 	.word	0x200701bc
   812e4:	00089f0c 	.word	0x00089f0c

000812e8 <buttons_driver2>:


void buttons_driver2(void){
   812e8:	b580      	push	{r7, lr}
   812ea:	b082      	sub	sp, #8
   812ec:	af00      	add	r7, sp, #0
    int butons = 0;
   812ee:	2300      	movs	r3, #0
   812f0:	607b      	str	r3, [r7, #4]
    uint8_t ena = 1, dva = 2, tri = 3, stiri = 4;
   812f2:	2301      	movs	r3, #1
   812f4:	70fb      	strb	r3, [r7, #3]
   812f6:	2302      	movs	r3, #2
   812f8:	70bb      	strb	r3, [r7, #2]
   812fa:	2303      	movs	r3, #3
   812fc:	707b      	strb	r3, [r7, #1]
   812fe:	2304      	movs	r3, #4
   81300:	703b      	strb	r3, [r7, #0]

    butons = get_button_press();
   81302:	f000 fbdd 	bl	81ac0 <get_button_press>
   81306:	6078      	str	r0, [r7, #4]

    if(butons & Mask_T1){
   81308:	687b      	ldr	r3, [r7, #4]
   8130a:	f003 0301 	and.w	r3, r3, #1
   8130e:	2b00      	cmp	r3, #0
   81310:	d005      	beq.n	8131e <buttons_driver2+0x36>
        fifo_write(&keys_fifo,&ena,1);
   81312:	1cfb      	adds	r3, r7, #3
   81314:	2201      	movs	r2, #1
   81316:	4619      	mov	r1, r3
   81318:	4813      	ldr	r0, [pc, #76]	; (81368 <buttons_driver2+0x80>)
   8131a:	f000 ff7d 	bl	82218 <fifo_write>
    }
    if(butons & Mask_T2){
   8131e:	687b      	ldr	r3, [r7, #4]
   81320:	f003 0302 	and.w	r3, r3, #2
   81324:	2b00      	cmp	r3, #0
   81326:	d005      	beq.n	81334 <buttons_driver2+0x4c>
        fifo_write(&keys_fifo,&dva,1);
   81328:	1cbb      	adds	r3, r7, #2
   8132a:	2201      	movs	r2, #1
   8132c:	4619      	mov	r1, r3
   8132e:	480e      	ldr	r0, [pc, #56]	; (81368 <buttons_driver2+0x80>)
   81330:	f000 ff72 	bl	82218 <fifo_write>
    }
    if(butons & Mask_T3){
   81334:	687b      	ldr	r3, [r7, #4]
   81336:	f003 0304 	and.w	r3, r3, #4
   8133a:	2b00      	cmp	r3, #0
   8133c:	d005      	beq.n	8134a <buttons_driver2+0x62>
        fifo_write(&keys_fifo,&tri,1);
   8133e:	1c7b      	adds	r3, r7, #1
   81340:	2201      	movs	r2, #1
   81342:	4619      	mov	r1, r3
   81344:	4808      	ldr	r0, [pc, #32]	; (81368 <buttons_driver2+0x80>)
   81346:	f000 ff67 	bl	82218 <fifo_write>
    }
    if(butons & Mask_T4){
   8134a:	687b      	ldr	r3, [r7, #4]
   8134c:	f003 0308 	and.w	r3, r3, #8
   81350:	2b00      	cmp	r3, #0
   81352:	d005      	beq.n	81360 <buttons_driver2+0x78>
        fifo_write(&keys_fifo,&stiri,1);
   81354:	463b      	mov	r3, r7
   81356:	2201      	movs	r2, #1
   81358:	4619      	mov	r1, r3
   8135a:	4803      	ldr	r0, [pc, #12]	; (81368 <buttons_driver2+0x80>)
   8135c:	f000 ff5c 	bl	82218 <fifo_write>
    }
}
   81360:	bf00      	nop
   81362:	3708      	adds	r7, #8
   81364:	46bd      	mov	sp, r7
   81366:	bd80      	pop	{r7, pc}
   81368:	200703e4 	.word	0x200703e4

0008136c <led_driver2>:


void led_driver2(void){
   8136c:	b580      	push	{r7, lr}
   8136e:	b082      	sub	sp, #8
   81370:	af00      	add	r7, sp, #0
    uint8_t  check, data_read;
    static uint8_t  count=0;


    if(count>0){
   81372:	4b32      	ldr	r3, [pc, #200]	; (8143c <led_driver2+0xd0>)
   81374:	781b      	ldrb	r3, [r3, #0]
   81376:	2b00      	cmp	r3, #0
   81378:	d039      	beq.n	813ee <led_driver2+0x82>
        if((count%5 == 0)  && (count>50)){
   8137a:	4b30      	ldr	r3, [pc, #192]	; (8143c <led_driver2+0xd0>)
   8137c:	781a      	ldrb	r2, [r3, #0]
   8137e:	4b30      	ldr	r3, [pc, #192]	; (81440 <led_driver2+0xd4>)
   81380:	fba3 1302 	umull	r1, r3, r3, r2
   81384:	0899      	lsrs	r1, r3, #2
   81386:	460b      	mov	r3, r1
   81388:	009b      	lsls	r3, r3, #2
   8138a:	440b      	add	r3, r1
   8138c:	1ad3      	subs	r3, r2, r3
   8138e:	b2db      	uxtb	r3, r3
   81390:	2b00      	cmp	r3, #0
   81392:	d10c      	bne.n	813ae <led_driver2+0x42>
   81394:	4b29      	ldr	r3, [pc, #164]	; (8143c <led_driver2+0xd0>)
   81396:	781b      	ldrb	r3, [r3, #0]
   81398:	2b32      	cmp	r3, #50	; 0x32
   8139a:	d908      	bls.n	813ae <led_driver2+0x42>
            ioport_set_pin_level(D4_IDX, HIGH);
   8139c:	2101      	movs	r1, #1
   8139e:	2056      	movs	r0, #86	; 0x56
   813a0:	f7ff fccc 	bl	80d3c <ioport_set_pin_level>
            ioport_set_pin_level(D2_IDX, HIGH);
   813a4:	2101      	movs	r1, #1
   813a6:	205d      	movs	r0, #93	; 0x5d
   813a8:	f7ff fcc8 	bl	80d3c <ioport_set_pin_level>
   813ac:	e018      	b.n	813e0 <led_driver2+0x74>

        }
        else if((count%5 == 3)  && (count>50)){
   813ae:	4b23      	ldr	r3, [pc, #140]	; (8143c <led_driver2+0xd0>)
   813b0:	781a      	ldrb	r2, [r3, #0]
   813b2:	4b23      	ldr	r3, [pc, #140]	; (81440 <led_driver2+0xd4>)
   813b4:	fba3 1302 	umull	r1, r3, r3, r2
   813b8:	0899      	lsrs	r1, r3, #2
   813ba:	460b      	mov	r3, r1
   813bc:	009b      	lsls	r3, r3, #2
   813be:	440b      	add	r3, r1
   813c0:	1ad3      	subs	r3, r2, r3
   813c2:	b2db      	uxtb	r3, r3
   813c4:	2b03      	cmp	r3, #3
   813c6:	d10b      	bne.n	813e0 <led_driver2+0x74>
   813c8:	4b1c      	ldr	r3, [pc, #112]	; (8143c <led_driver2+0xd0>)
   813ca:	781b      	ldrb	r3, [r3, #0]
   813cc:	2b32      	cmp	r3, #50	; 0x32
   813ce:	d907      	bls.n	813e0 <led_driver2+0x74>
            ioport_set_pin_level(D4_IDX, LOW);
   813d0:	2100      	movs	r1, #0
   813d2:	2056      	movs	r0, #86	; 0x56
   813d4:	f7ff fcb2 	bl	80d3c <ioport_set_pin_level>
            ioport_set_pin_level(D2_IDX, LOW);
   813d8:	2100      	movs	r1, #0
   813da:	205d      	movs	r0, #93	; 0x5d
   813dc:	f7ff fcae 	bl	80d3c <ioport_set_pin_level>

        }
        else{
        }

        count--;
   813e0:	4b16      	ldr	r3, [pc, #88]	; (8143c <led_driver2+0xd0>)
   813e2:	781b      	ldrb	r3, [r3, #0]
   813e4:	3b01      	subs	r3, #1
   813e6:	b2da      	uxtb	r2, r3
   813e8:	4b14      	ldr	r3, [pc, #80]	; (8143c <led_driver2+0xd0>)
   813ea:	701a      	strb	r2, [r3, #0]
        else{
        //error reading or buffer empty
        }
    }

}
   813ec:	e021      	b.n	81432 <led_driver2+0xc6>
        check = fifo_read (&keys_fifo, &data_read, 1);
   813ee:	1dbb      	adds	r3, r7, #6
   813f0:	2201      	movs	r2, #1
   813f2:	4619      	mov	r1, r3
   813f4:	4813      	ldr	r0, [pc, #76]	; (81444 <led_driver2+0xd8>)
   813f6:	f000 fed1 	bl	8219c <fifo_read>
   813fa:	4603      	mov	r3, r0
   813fc:	71fb      	strb	r3, [r7, #7]
        if(check == 1){
   813fe:	79fb      	ldrb	r3, [r7, #7]
   81400:	2b01      	cmp	r3, #1
   81402:	d116      	bne.n	81432 <led_driver2+0xc6>
            count = data_read * 5 +50;
   81404:	79bb      	ldrb	r3, [r7, #6]
   81406:	461a      	mov	r2, r3
   81408:	0092      	lsls	r2, r2, #2
   8140a:	4413      	add	r3, r2
   8140c:	b2db      	uxtb	r3, r3
   8140e:	3332      	adds	r3, #50	; 0x32
   81410:	b2da      	uxtb	r2, r3
   81412:	4b0a      	ldr	r3, [pc, #40]	; (8143c <led_driver2+0xd0>)
   81414:	701a      	strb	r2, [r3, #0]
            ioport_set_pin_level(D4_IDX, HIGH);
   81416:	2101      	movs	r1, #1
   81418:	2056      	movs	r0, #86	; 0x56
   8141a:	f7ff fc8f 	bl	80d3c <ioport_set_pin_level>
            ioport_set_pin_level(D2_IDX, HIGH);
   8141e:	2101      	movs	r1, #1
   81420:	205d      	movs	r0, #93	; 0x5d
   81422:	f7ff fc8b 	bl	80d3c <ioport_set_pin_level>
            count--;
   81426:	4b05      	ldr	r3, [pc, #20]	; (8143c <led_driver2+0xd0>)
   81428:	781b      	ldrb	r3, [r3, #0]
   8142a:	3b01      	subs	r3, #1
   8142c:	b2da      	uxtb	r2, r3
   8142e:	4b03      	ldr	r3, [pc, #12]	; (8143c <led_driver2+0xd0>)
   81430:	701a      	strb	r2, [r3, #0]
}
   81432:	bf00      	nop
   81434:	3708      	adds	r7, #8
   81436:	46bd      	mov	sp, r7
   81438:	bd80      	pop	{r7, pc}
   8143a:	bf00      	nop
   8143c:	20070dd8 	.word	0x20070dd8
   81440:	cccccccd 	.word	0xcccccccd
   81444:	200703e4 	.word	0x200703e4

00081448 <ura_driver3>:




uint32_t clk = 0;
void ura_driver3(void){
   81448:	b480      	push	{r7}
   8144a:	af00      	add	r7, sp, #0

    clk++;
   8144c:	4b0a      	ldr	r3, [pc, #40]	; (81478 <ura_driver3+0x30>)
   8144e:	681b      	ldr	r3, [r3, #0]
   81450:	3301      	adds	r3, #1
   81452:	4a09      	ldr	r2, [pc, #36]	; (81478 <ura_driver3+0x30>)
   81454:	6013      	str	r3, [r2, #0]

    if(clk > DAN){
   81456:	4b08      	ldr	r3, [pc, #32]	; (81478 <ura_driver3+0x30>)
   81458:	681b      	ldr	r3, [r3, #0]
   8145a:	4a08      	ldr	r2, [pc, #32]	; (8147c <ura_driver3+0x34>)
   8145c:	4293      	cmp	r3, r2
   8145e:	d907      	bls.n	81470 <ura_driver3+0x28>
        clk = clk-DAN;
   81460:	4b05      	ldr	r3, [pc, #20]	; (81478 <ura_driver3+0x30>)
   81462:	681b      	ldr	r3, [r3, #0]
   81464:	f5a3 2352 	sub.w	r3, r3, #860160	; 0xd2000
   81468:	f5a3 6370 	sub.w	r3, r3, #3840	; 0xf00
   8146c:	4a02      	ldr	r2, [pc, #8]	; (81478 <ura_driver3+0x30>)
   8146e:	6013      	str	r3, [r2, #0]
    }
}
   81470:	bf00      	nop
   81472:	46bd      	mov	sp, r7
   81474:	bc80      	pop	{r7}
   81476:	4770      	bx	lr
   81478:	20070dc8 	.word	0x20070dc8
   8147c:	000d2f00 	.word	0x000d2f00

00081480 <calc_driver>:


void calc_driver(void){
   81480:	b580      	push	{r7, lr}
   81482:	b086      	sub	sp, #24
   81484:	af02      	add	r7, sp, #8
    int sec, min, ure, n;

    sec = clk/10;
   81486:	4b24      	ldr	r3, [pc, #144]	; (81518 <calc_driver+0x98>)
   81488:	681b      	ldr	r3, [r3, #0]
   8148a:	4a24      	ldr	r2, [pc, #144]	; (8151c <calc_driver+0x9c>)
   8148c:	fba2 2303 	umull	r2, r3, r2, r3
   81490:	08db      	lsrs	r3, r3, #3
   81492:	60fb      	str	r3, [r7, #12]
    min = sec/60;
   81494:	68fb      	ldr	r3, [r7, #12]
   81496:	4a22      	ldr	r2, [pc, #136]	; (81520 <calc_driver+0xa0>)
   81498:	fb82 1203 	smull	r1, r2, r2, r3
   8149c:	441a      	add	r2, r3
   8149e:	1152      	asrs	r2, r2, #5
   814a0:	17db      	asrs	r3, r3, #31
   814a2:	1ad3      	subs	r3, r2, r3
   814a4:	60bb      	str	r3, [r7, #8]
    ure = min/60;
   814a6:	68bb      	ldr	r3, [r7, #8]
   814a8:	4a1d      	ldr	r2, [pc, #116]	; (81520 <calc_driver+0xa0>)
   814aa:	fb82 1203 	smull	r1, r2, r2, r3
   814ae:	441a      	add	r2, r3
   814b0:	1152      	asrs	r2, r2, #5
   814b2:	17db      	asrs	r3, r3, #31
   814b4:	1ad3      	subs	r3, r2, r3
   814b6:	607b      	str	r3, [r7, #4]

    sec = sec%60;
   814b8:	68fa      	ldr	r2, [r7, #12]
   814ba:	4b19      	ldr	r3, [pc, #100]	; (81520 <calc_driver+0xa0>)
   814bc:	fb83 1302 	smull	r1, r3, r3, r2
   814c0:	4413      	add	r3, r2
   814c2:	1159      	asrs	r1, r3, #5
   814c4:	17d3      	asrs	r3, r2, #31
   814c6:	1ac9      	subs	r1, r1, r3
   814c8:	460b      	mov	r3, r1
   814ca:	011b      	lsls	r3, r3, #4
   814cc:	1a5b      	subs	r3, r3, r1
   814ce:	009b      	lsls	r3, r3, #2
   814d0:	1ad3      	subs	r3, r2, r3
   814d2:	60fb      	str	r3, [r7, #12]
    min = min%60;
   814d4:	68ba      	ldr	r2, [r7, #8]
   814d6:	4b12      	ldr	r3, [pc, #72]	; (81520 <calc_driver+0xa0>)
   814d8:	fb83 1302 	smull	r1, r3, r3, r2
   814dc:	4413      	add	r3, r2
   814de:	1159      	asrs	r1, r3, #5
   814e0:	17d3      	asrs	r3, r2, #31
   814e2:	1ac9      	subs	r1, r1, r3
   814e4:	460b      	mov	r3, r1
   814e6:	011b      	lsls	r3, r3, #4
   814e8:	1a5b      	subs	r3, r3, r1
   814ea:	009b      	lsls	r3, r3, #2
   814ec:	1ad3      	subs	r3, r2, r3
   814ee:	60bb      	str	r3, [r7, #8]

    n = sprintf(lcd_string,"ura: %2d:%2d:%2d",ure,min,sec);
   814f0:	4b0c      	ldr	r3, [pc, #48]	; (81524 <calc_driver+0xa4>)
   814f2:	6818      	ldr	r0, [r3, #0]
   814f4:	68fb      	ldr	r3, [r7, #12]
   814f6:	9300      	str	r3, [sp, #0]
   814f8:	68bb      	ldr	r3, [r7, #8]
   814fa:	687a      	ldr	r2, [r7, #4]
   814fc:	490a      	ldr	r1, [pc, #40]	; (81528 <calc_driver+0xa8>)
   814fe:	f004 f8bf 	bl	85680 <sprintf>
   81502:	6038      	str	r0, [r7, #0]
    lcd_string[n] = ' ';
   81504:	4b07      	ldr	r3, [pc, #28]	; (81524 <calc_driver+0xa4>)
   81506:	681a      	ldr	r2, [r3, #0]
   81508:	683b      	ldr	r3, [r7, #0]
   8150a:	4413      	add	r3, r2
   8150c:	2220      	movs	r2, #32
   8150e:	701a      	strb	r2, [r3, #0]
}
   81510:	bf00      	nop
   81512:	3710      	adds	r7, #16
   81514:	46bd      	mov	sp, r7
   81516:	bd80      	pop	{r7, pc}
   81518:	20070dc8 	.word	0x20070dc8
   8151c:	cccccccd 	.word	0xcccccccd
   81520:	88888889 	.word	0x88888889
   81524:	200701bc 	.word	0x200701bc
   81528:	00089f10 	.word	0x00089f10

0008152c <buttons_driver3>:


void buttons_driver3(void){
   8152c:	b580      	push	{r7, lr}
   8152e:	b082      	sub	sp, #8
   81530:	af00      	add	r7, sp, #0
    int butons = 0;
   81532:	2300      	movs	r3, #0
   81534:	607b      	str	r3, [r7, #4]
    bool  hold = 0;
   81536:	2300      	movs	r3, #0
   81538:	70fb      	strb	r3, [r7, #3]

    butons = get_button_press();
   8153a:	f000 fac1 	bl	81ac0 <get_button_press>
   8153e:	6078      	str	r0, [r7, #4]

    if(butons & Mask_T1){
   81540:	687b      	ldr	r3, [r7, #4]
   81542:	f003 0301 	and.w	r3, r3, #1
   81546:	2b00      	cmp	r3, #0
   81548:	d006      	beq.n	81558 <buttons_driver3+0x2c>
        clk = clk + URA;
   8154a:	4b1a      	ldr	r3, [pc, #104]	; (815b4 <buttons_driver3+0x88>)
   8154c:	681b      	ldr	r3, [r3, #0]
   8154e:	f503 430c 	add.w	r3, r3, #35840	; 0x8c00
   81552:	33a0      	adds	r3, #160	; 0xa0
   81554:	4a17      	ldr	r2, [pc, #92]	; (815b4 <buttons_driver3+0x88>)
   81556:	6013      	str	r3, [r2, #0]
    }
    if(butons & Mask_T2){
   81558:	687b      	ldr	r3, [r7, #4]
   8155a:	f003 0302 	and.w	r3, r3, #2
   8155e:	2b00      	cmp	r3, #0
   81560:	d005      	beq.n	8156e <buttons_driver3+0x42>
        clk = clk + MIN;
   81562:	4b14      	ldr	r3, [pc, #80]	; (815b4 <buttons_driver3+0x88>)
   81564:	681b      	ldr	r3, [r3, #0]
   81566:	f503 7316 	add.w	r3, r3, #600	; 0x258
   8156a:	4a12      	ldr	r2, [pc, #72]	; (815b4 <buttons_driver3+0x88>)
   8156c:	6013      	str	r3, [r2, #0]
    }
    if(butons & Mask_T4){
   8156e:	687b      	ldr	r3, [r7, #4]
   81570:	f003 0308 	and.w	r3, r3, #8
   81574:	2b00      	cmp	r3, #0
   81576:	d002      	beq.n	8157e <buttons_driver3+0x52>
        clk = 0;
   81578:	4b0e      	ldr	r3, [pc, #56]	; (815b4 <buttons_driver3+0x88>)
   8157a:	2200      	movs	r2, #0
   8157c:	601a      	str	r2, [r3, #0]
    }

    hold = get_button_state() ^ 0xF;
   8157e:	f000 fa4d 	bl	81a1c <get_button_state>
   81582:	4603      	mov	r3, r0
   81584:	f083 030f 	eor.w	r3, r3, #15
   81588:	2b00      	cmp	r3, #0
   8158a:	bf14      	ite	ne
   8158c:	2301      	movne	r3, #1
   8158e:	2300      	moveq	r3, #0
   81590:	70fb      	strb	r3, [r7, #3]

    if(hold && clk>0){
   81592:	78fb      	ldrb	r3, [r7, #3]
   81594:	2b00      	cmp	r3, #0
   81596:	d008      	beq.n	815aa <buttons_driver3+0x7e>
   81598:	4b06      	ldr	r3, [pc, #24]	; (815b4 <buttons_driver3+0x88>)
   8159a:	681b      	ldr	r3, [r3, #0]
   8159c:	2b00      	cmp	r3, #0
   8159e:	d004      	beq.n	815aa <buttons_driver3+0x7e>
        clk--;
   815a0:	4b04      	ldr	r3, [pc, #16]	; (815b4 <buttons_driver3+0x88>)
   815a2:	681b      	ldr	r3, [r3, #0]
   815a4:	3b01      	subs	r3, #1
   815a6:	4a03      	ldr	r2, [pc, #12]	; (815b4 <buttons_driver3+0x88>)
   815a8:	6013      	str	r3, [r2, #0]
    }
}
   815aa:	bf00      	nop
   815ac:	3708      	adds	r7, #8
   815ae:	46bd      	mov	sp, r7
   815b0:	bd80      	pop	{r7, pc}
   815b2:	bf00      	nop
   815b4:	20070dc8 	.word	0x20070dc8

000815b8 <change>:
/*******************************************************************IZBIRA PROGRAMA******************************************************************/

rtos_task_t *task_list[10];
rtos_task_t *task_priv = &task_ura;

void change(rtos_task_t *task_list00[10],rtos_task_t *priv){
   815b8:	b480      	push	{r7}
   815ba:	b085      	sub	sp, #20
   815bc:	af00      	add	r7, sp, #0
   815be:	6078      	str	r0, [r7, #4]
   815c0:	6039      	str	r1, [r7, #0]
    int i=0;
   815c2:	2300      	movs	r3, #0
   815c4:	60fb      	str	r3, [r7, #12]
    while(task_list00[i]){
   815c6:	e00b      	b.n	815e0 <change+0x28>
        task_list[i] = task_list00[i];
   815c8:	68fb      	ldr	r3, [r7, #12]
   815ca:	009b      	lsls	r3, r3, #2
   815cc:	687a      	ldr	r2, [r7, #4]
   815ce:	4413      	add	r3, r2
   815d0:	681a      	ldr	r2, [r3, #0]
   815d2:	490b      	ldr	r1, [pc, #44]	; (81600 <change+0x48>)
   815d4:	68fb      	ldr	r3, [r7, #12]
   815d6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
        i++;
   815da:	68fb      	ldr	r3, [r7, #12]
   815dc:	3301      	adds	r3, #1
   815de:	60fb      	str	r3, [r7, #12]
    while(task_list00[i]){
   815e0:	68fb      	ldr	r3, [r7, #12]
   815e2:	009b      	lsls	r3, r3, #2
   815e4:	687a      	ldr	r2, [r7, #4]
   815e6:	4413      	add	r3, r2
   815e8:	681b      	ldr	r3, [r3, #0]
   815ea:	2b00      	cmp	r3, #0
   815ec:	d1ec      	bne.n	815c8 <change+0x10>
    }
    task_priv = priv;
   815ee:	4a05      	ldr	r2, [pc, #20]	; (81604 <change+0x4c>)
   815f0:	683b      	ldr	r3, [r7, #0]
   815f2:	6013      	str	r3, [r2, #0]
}
   815f4:	bf00      	nop
   815f6:	3714      	adds	r7, #20
   815f8:	46bd      	mov	sp, r7
   815fa:	bc80      	pop	{r7}
   815fc:	4770      	bx	lr
   815fe:	bf00      	nop
   81600:	20070e68 	.word	0x20070e68
   81604:	2007038c 	.word	0x2007038c

00081608 <NVIC_EnableIRQ>:
{
   81608:	b480      	push	{r7}
   8160a:	b083      	sub	sp, #12
   8160c:	af00      	add	r7, sp, #0
   8160e:	4603      	mov	r3, r0
   81610:	71fb      	strb	r3, [r7, #7]
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   81612:	79fb      	ldrb	r3, [r7, #7]
   81614:	f003 031f 	and.w	r3, r3, #31
   81618:	2201      	movs	r2, #1
   8161a:	fa02 f103 	lsl.w	r1, r2, r3
   8161e:	4a05      	ldr	r2, [pc, #20]	; (81634 <NVIC_EnableIRQ+0x2c>)
   81620:	f997 3007 	ldrsb.w	r3, [r7, #7]
   81624:	095b      	lsrs	r3, r3, #5
   81626:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
   8162a:	bf00      	nop
   8162c:	370c      	adds	r7, #12
   8162e:	46bd      	mov	sp, r7
   81630:	bc80      	pop	{r7}
   81632:	4770      	bx	lr
   81634:	e000e100 	.word	0xe000e100

00081638 <NVIC_SetPriority>:
{
   81638:	b480      	push	{r7}
   8163a:	b083      	sub	sp, #12
   8163c:	af00      	add	r7, sp, #0
   8163e:	4603      	mov	r3, r0
   81640:	6039      	str	r1, [r7, #0]
   81642:	71fb      	strb	r3, [r7, #7]
  if(IRQn < 0) {
   81644:	f997 3007 	ldrsb.w	r3, [r7, #7]
   81648:	2b00      	cmp	r3, #0
   8164a:	da0b      	bge.n	81664 <NVIC_SetPriority+0x2c>
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
   8164c:	683b      	ldr	r3, [r7, #0]
   8164e:	b2da      	uxtb	r2, r3
   81650:	490c      	ldr	r1, [pc, #48]	; (81684 <NVIC_SetPriority+0x4c>)
   81652:	79fb      	ldrb	r3, [r7, #7]
   81654:	f003 030f 	and.w	r3, r3, #15
   81658:	3b04      	subs	r3, #4
   8165a:	0112      	lsls	r2, r2, #4
   8165c:	b2d2      	uxtb	r2, r2
   8165e:	440b      	add	r3, r1
   81660:	761a      	strb	r2, [r3, #24]
}
   81662:	e009      	b.n	81678 <NVIC_SetPriority+0x40>
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   81664:	683b      	ldr	r3, [r7, #0]
   81666:	b2da      	uxtb	r2, r3
   81668:	4907      	ldr	r1, [pc, #28]	; (81688 <NVIC_SetPriority+0x50>)
   8166a:	f997 3007 	ldrsb.w	r3, [r7, #7]
   8166e:	0112      	lsls	r2, r2, #4
   81670:	b2d2      	uxtb	r2, r2
   81672:	440b      	add	r3, r1
   81674:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
   81678:	bf00      	nop
   8167a:	370c      	adds	r7, #12
   8167c:	46bd      	mov	sp, r7
   8167e:	bc80      	pop	{r7}
   81680:	4770      	bx	lr
   81682:	bf00      	nop
   81684:	e000ed00 	.word	0xe000ed00
   81688:	e000e100 	.word	0xe000e100

0008168c <sysclk_enable_peripheral_clock>:
{
   8168c:	b580      	push	{r7, lr}
   8168e:	b082      	sub	sp, #8
   81690:	af00      	add	r7, sp, #0
   81692:	6078      	str	r0, [r7, #4]
	pmc_enable_periph_clk(ul_id);
   81694:	6878      	ldr	r0, [r7, #4]
   81696:	f001 fa2b 	bl	82af0 <pmc_enable_periph_clk>
}
   8169a:	bf00      	nop
   8169c:	3708      	adds	r7, #8
   8169e:	46bd      	mov	sp, r7
   816a0:	bd80      	pop	{r7, pc}

000816a2 <ioport_init>:
{
   816a2:	b580      	push	{r7, lr}
   816a4:	af00      	add	r7, sp, #0
	sysclk_enable_peripheral_clock(ID_PIOA);
   816a6:	200b      	movs	r0, #11
   816a8:	f7ff fff0 	bl	8168c <sysclk_enable_peripheral_clock>
	sysclk_enable_peripheral_clock(ID_PIOB);
   816ac:	200c      	movs	r0, #12
   816ae:	f7ff ffed 	bl	8168c <sysclk_enable_peripheral_clock>
	sysclk_enable_peripheral_clock(ID_PIOC);
   816b2:	200d      	movs	r0, #13
   816b4:	f7ff ffea 	bl	8168c <sysclk_enable_peripheral_clock>
	sysclk_enable_peripheral_clock(ID_PIOD);
   816b8:	200e      	movs	r0, #14
   816ba:	f7ff ffe7 	bl	8168c <sysclk_enable_peripheral_clock>
}
   816be:	bf00      	nop
   816c0:	bd80      	pop	{r7, pc}

000816c2 <ioport_enable_pin>:
{
   816c2:	b480      	push	{r7}
   816c4:	b089      	sub	sp, #36	; 0x24
   816c6:	af00      	add	r7, sp, #0
   816c8:	6078      	str	r0, [r7, #4]
   816ca:	687b      	ldr	r3, [r7, #4]
   816cc:	61fb      	str	r3, [r7, #28]
   816ce:	69fb      	ldr	r3, [r7, #28]
   816d0:	61bb      	str	r3, [r7, #24]
	return pin >> 5;
   816d2:	69bb      	ldr	r3, [r7, #24]
   816d4:	095a      	lsrs	r2, r3, #5
   816d6:	69fb      	ldr	r3, [r7, #28]
   816d8:	617b      	str	r3, [r7, #20]
	return 1U << (pin & 0x1F);
   816da:	697b      	ldr	r3, [r7, #20]
   816dc:	f003 031f 	and.w	r3, r3, #31
   816e0:	2101      	movs	r1, #1
   816e2:	fa01 f303 	lsl.w	r3, r1, r3
   816e6:	613a      	str	r2, [r7, #16]
   816e8:	60fb      	str	r3, [r7, #12]
   816ea:	693b      	ldr	r3, [r7, #16]
   816ec:	60bb      	str	r3, [r7, #8]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   816ee:	68bb      	ldr	r3, [r7, #8]
   816f0:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   816f4:	f203 7307 	addw	r3, r3, #1799	; 0x707
   816f8:	025b      	lsls	r3, r3, #9
   816fa:	461a      	mov	r2, r3
	arch_ioport_port_to_base(port)->PIO_PER = mask;
   816fc:	68fb      	ldr	r3, [r7, #12]
   816fe:	6013      	str	r3, [r2, #0]
}
   81700:	bf00      	nop
   81702:	3724      	adds	r7, #36	; 0x24
   81704:	46bd      	mov	sp, r7
   81706:	bc80      	pop	{r7}
   81708:	4770      	bx	lr

0008170a <ioport_set_pin_mode>:
{
   8170a:	b480      	push	{r7}
   8170c:	b08d      	sub	sp, #52	; 0x34
   8170e:	af00      	add	r7, sp, #0
   81710:	6078      	str	r0, [r7, #4]
   81712:	6039      	str	r1, [r7, #0]
   81714:	687b      	ldr	r3, [r7, #4]
   81716:	62fb      	str	r3, [r7, #44]	; 0x2c
   81718:	683b      	ldr	r3, [r7, #0]
   8171a:	62bb      	str	r3, [r7, #40]	; 0x28
   8171c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   8171e:	627b      	str	r3, [r7, #36]	; 0x24
	return pin >> 5;
   81720:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   81722:	095a      	lsrs	r2, r3, #5
   81724:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   81726:	623b      	str	r3, [r7, #32]
	return 1U << (pin & 0x1F);
   81728:	6a3b      	ldr	r3, [r7, #32]
   8172a:	f003 031f 	and.w	r3, r3, #31
   8172e:	2101      	movs	r1, #1
   81730:	fa01 f303 	lsl.w	r3, r1, r3
   81734:	61fa      	str	r2, [r7, #28]
   81736:	61bb      	str	r3, [r7, #24]
   81738:	6abb      	ldr	r3, [r7, #40]	; 0x28
   8173a:	617b      	str	r3, [r7, #20]
   8173c:	69fb      	ldr	r3, [r7, #28]
   8173e:	613b      	str	r3, [r7, #16]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   81740:	693b      	ldr	r3, [r7, #16]
   81742:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   81746:	f203 7307 	addw	r3, r3, #1799	; 0x707
   8174a:	025b      	lsls	r3, r3, #9
	Pio *base = arch_ioport_port_to_base(port);
   8174c:	60fb      	str	r3, [r7, #12]
	if (mode & IOPORT_MODE_PULLUP) {
   8174e:	697b      	ldr	r3, [r7, #20]
   81750:	f003 0308 	and.w	r3, r3, #8
   81754:	2b00      	cmp	r3, #0
   81756:	d003      	beq.n	81760 <ioport_set_pin_mode+0x56>
		base->PIO_PUER = mask;
   81758:	68fb      	ldr	r3, [r7, #12]
   8175a:	69ba      	ldr	r2, [r7, #24]
   8175c:	665a      	str	r2, [r3, #100]	; 0x64
   8175e:	e002      	b.n	81766 <ioport_set_pin_mode+0x5c>
		base->PIO_PUDR = mask;
   81760:	68fb      	ldr	r3, [r7, #12]
   81762:	69ba      	ldr	r2, [r7, #24]
   81764:	661a      	str	r2, [r3, #96]	; 0x60
	if (mode & IOPORT_MODE_OPEN_DRAIN) {
   81766:	697b      	ldr	r3, [r7, #20]
   81768:	f003 0320 	and.w	r3, r3, #32
   8176c:	2b00      	cmp	r3, #0
   8176e:	d003      	beq.n	81778 <ioport_set_pin_mode+0x6e>
		base->PIO_MDER = mask;
   81770:	68fb      	ldr	r3, [r7, #12]
   81772:	69ba      	ldr	r2, [r7, #24]
   81774:	651a      	str	r2, [r3, #80]	; 0x50
   81776:	e002      	b.n	8177e <ioport_set_pin_mode+0x74>
		base->PIO_MDDR = mask;
   81778:	68fb      	ldr	r3, [r7, #12]
   8177a:	69ba      	ldr	r2, [r7, #24]
   8177c:	655a      	str	r2, [r3, #84]	; 0x54
	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
   8177e:	697b      	ldr	r3, [r7, #20]
   81780:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
   81784:	2b00      	cmp	r3, #0
   81786:	d003      	beq.n	81790 <ioport_set_pin_mode+0x86>
		base->PIO_IFER = mask;
   81788:	68fb      	ldr	r3, [r7, #12]
   8178a:	69ba      	ldr	r2, [r7, #24]
   8178c:	621a      	str	r2, [r3, #32]
   8178e:	e002      	b.n	81796 <ioport_set_pin_mode+0x8c>
		base->PIO_IFDR = mask;
   81790:	68fb      	ldr	r3, [r7, #12]
   81792:	69ba      	ldr	r2, [r7, #24]
   81794:	625a      	str	r2, [r3, #36]	; 0x24
	if (mode & IOPORT_MODE_DEBOUNCE) {
   81796:	697b      	ldr	r3, [r7, #20]
   81798:	f003 0380 	and.w	r3, r3, #128	; 0x80
   8179c:	2b00      	cmp	r3, #0
   8179e:	d004      	beq.n	817aa <ioport_set_pin_mode+0xa0>
		base->PIO_DIFSR = mask;
   817a0:	68fb      	ldr	r3, [r7, #12]
   817a2:	69ba      	ldr	r2, [r7, #24]
   817a4:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
   817a8:	e003      	b.n	817b2 <ioport_set_pin_mode+0xa8>
		base->PIO_SCIFSR = mask;
   817aa:	68fb      	ldr	r3, [r7, #12]
   817ac:	69ba      	ldr	r2, [r7, #24]
   817ae:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
	if (mode & IOPORT_MODE_MUX_BIT0) {
   817b2:	697b      	ldr	r3, [r7, #20]
   817b4:	f003 0301 	and.w	r3, r3, #1
   817b8:	2b00      	cmp	r3, #0
   817ba:	d006      	beq.n	817ca <ioport_set_pin_mode+0xc0>
		base->PIO_ABSR |= mask;
   817bc:	68fb      	ldr	r3, [r7, #12]
   817be:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   817c0:	69bb      	ldr	r3, [r7, #24]
   817c2:	431a      	orrs	r2, r3
   817c4:	68fb      	ldr	r3, [r7, #12]
   817c6:	671a      	str	r2, [r3, #112]	; 0x70
}
   817c8:	e006      	b.n	817d8 <ioport_set_pin_mode+0xce>
		base->PIO_ABSR &= ~mask;
   817ca:	68fb      	ldr	r3, [r7, #12]
   817cc:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   817ce:	69bb      	ldr	r3, [r7, #24]
   817d0:	43db      	mvns	r3, r3
   817d2:	401a      	ands	r2, r3
   817d4:	68fb      	ldr	r3, [r7, #12]
   817d6:	671a      	str	r2, [r3, #112]	; 0x70
   817d8:	bf00      	nop
   817da:	3734      	adds	r7, #52	; 0x34
   817dc:	46bd      	mov	sp, r7
   817de:	bc80      	pop	{r7}
   817e0:	4770      	bx	lr

000817e2 <ioport_set_pin_dir>:
{
   817e2:	b480      	push	{r7}
   817e4:	b08d      	sub	sp, #52	; 0x34
   817e6:	af00      	add	r7, sp, #0
   817e8:	6078      	str	r0, [r7, #4]
   817ea:	460b      	mov	r3, r1
   817ec:	70fb      	strb	r3, [r7, #3]
   817ee:	687b      	ldr	r3, [r7, #4]
   817f0:	62fb      	str	r3, [r7, #44]	; 0x2c
   817f2:	78fb      	ldrb	r3, [r7, #3]
   817f4:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
   817f8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   817fa:	627b      	str	r3, [r7, #36]	; 0x24
   817fc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   817fe:	623b      	str	r3, [r7, #32]
	return pin >> 5;
   81800:	6a3b      	ldr	r3, [r7, #32]
   81802:	095b      	lsrs	r3, r3, #5
   81804:	61fb      	str	r3, [r7, #28]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   81806:	69fb      	ldr	r3, [r7, #28]
   81808:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   8180c:	f203 7307 	addw	r3, r3, #1799	; 0x707
   81810:	025b      	lsls	r3, r3, #9
	Pio *base = arch_ioport_pin_to_base(pin);
   81812:	61bb      	str	r3, [r7, #24]
	if (dir == IOPORT_DIR_OUTPUT) {
   81814:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
   81818:	2b01      	cmp	r3, #1
   8181a:	d109      	bne.n	81830 <ioport_set_pin_dir+0x4e>
   8181c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   8181e:	617b      	str	r3, [r7, #20]
	return 1U << (pin & 0x1F);
   81820:	697b      	ldr	r3, [r7, #20]
   81822:	f003 031f 	and.w	r3, r3, #31
   81826:	2201      	movs	r2, #1
   81828:	409a      	lsls	r2, r3
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   8182a:	69bb      	ldr	r3, [r7, #24]
   8182c:	611a      	str	r2, [r3, #16]
   8182e:	e00c      	b.n	8184a <ioport_set_pin_dir+0x68>
	} else if (dir == IOPORT_DIR_INPUT) {
   81830:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
   81834:	2b00      	cmp	r3, #0
   81836:	d108      	bne.n	8184a <ioport_set_pin_dir+0x68>
   81838:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   8183a:	613b      	str	r3, [r7, #16]
	return 1U << (pin & 0x1F);
   8183c:	693b      	ldr	r3, [r7, #16]
   8183e:	f003 031f 	and.w	r3, r3, #31
   81842:	2201      	movs	r2, #1
   81844:	409a      	lsls	r2, r3
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   81846:	69bb      	ldr	r3, [r7, #24]
   81848:	615a      	str	r2, [r3, #20]
   8184a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
   8184c:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
   8184e:	68fb      	ldr	r3, [r7, #12]
   81850:	f003 031f 	and.w	r3, r3, #31
   81854:	2201      	movs	r2, #1
   81856:	409a      	lsls	r2, r3
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   81858:	69bb      	ldr	r3, [r7, #24]
   8185a:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
}
   8185e:	bf00      	nop
   81860:	3734      	adds	r7, #52	; 0x34
   81862:	46bd      	mov	sp, r7
   81864:	bc80      	pop	{r7}
   81866:	4770      	bx	lr

00081868 <ioport_set_pin_level>:
{
   81868:	b480      	push	{r7}
   8186a:	b08b      	sub	sp, #44	; 0x2c
   8186c:	af00      	add	r7, sp, #0
   8186e:	6078      	str	r0, [r7, #4]
   81870:	460b      	mov	r3, r1
   81872:	70fb      	strb	r3, [r7, #3]
   81874:	687b      	ldr	r3, [r7, #4]
   81876:	627b      	str	r3, [r7, #36]	; 0x24
   81878:	78fb      	ldrb	r3, [r7, #3]
   8187a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
   8187e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   81880:	61fb      	str	r3, [r7, #28]
   81882:	69fb      	ldr	r3, [r7, #28]
   81884:	61bb      	str	r3, [r7, #24]
	return pin >> 5;
   81886:	69bb      	ldr	r3, [r7, #24]
   81888:	095b      	lsrs	r3, r3, #5
   8188a:	617b      	str	r3, [r7, #20]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   8188c:	697b      	ldr	r3, [r7, #20]
   8188e:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   81892:	f203 7307 	addw	r3, r3, #1799	; 0x707
   81896:	025b      	lsls	r3, r3, #9
	Pio *base = arch_ioport_pin_to_base(pin);
   81898:	613b      	str	r3, [r7, #16]
	if (level) {
   8189a:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
   8189e:	2b00      	cmp	r3, #0
   818a0:	d009      	beq.n	818b6 <ioport_set_pin_level+0x4e>
   818a2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   818a4:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
   818a6:	68fb      	ldr	r3, [r7, #12]
   818a8:	f003 031f 	and.w	r3, r3, #31
   818ac:	2201      	movs	r2, #1
   818ae:	409a      	lsls	r2, r3
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   818b0:	693b      	ldr	r3, [r7, #16]
   818b2:	631a      	str	r2, [r3, #48]	; 0x30
}
   818b4:	e008      	b.n	818c8 <ioport_set_pin_level+0x60>
   818b6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
   818b8:	60bb      	str	r3, [r7, #8]
	return 1U << (pin & 0x1F);
   818ba:	68bb      	ldr	r3, [r7, #8]
   818bc:	f003 031f 	and.w	r3, r3, #31
   818c0:	2201      	movs	r2, #1
   818c2:	409a      	lsls	r2, r3
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   818c4:	693b      	ldr	r3, [r7, #16]
   818c6:	635a      	str	r2, [r3, #52]	; 0x34
   818c8:	bf00      	nop
   818ca:	372c      	adds	r7, #44	; 0x2c
   818cc:	46bd      	mov	sp, r7
   818ce:	bc80      	pop	{r7}
   818d0:	4770      	bx	lr

000818d2 <ioport_get_pin_level>:
{
   818d2:	b480      	push	{r7}
   818d4:	b089      	sub	sp, #36	; 0x24
   818d6:	af00      	add	r7, sp, #0
   818d8:	6078      	str	r0, [r7, #4]
   818da:	687b      	ldr	r3, [r7, #4]
   818dc:	61fb      	str	r3, [r7, #28]
   818de:	69fb      	ldr	r3, [r7, #28]
   818e0:	61bb      	str	r3, [r7, #24]
   818e2:	69bb      	ldr	r3, [r7, #24]
   818e4:	617b      	str	r3, [r7, #20]
	return pin >> 5;
   818e6:	697b      	ldr	r3, [r7, #20]
   818e8:	095b      	lsrs	r3, r3, #5
   818ea:	613b      	str	r3, [r7, #16]
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   818ec:	693b      	ldr	r3, [r7, #16]
   818ee:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   818f2:	f203 7307 	addw	r3, r3, #1799	; 0x707
   818f6:	025b      	lsls	r3, r3, #9
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
   818f8:	6bda      	ldr	r2, [r3, #60]	; 0x3c
   818fa:	69fb      	ldr	r3, [r7, #28]
   818fc:	60fb      	str	r3, [r7, #12]
	return 1U << (pin & 0x1F);
   818fe:	68fb      	ldr	r3, [r7, #12]
   81900:	f003 031f 	and.w	r3, r3, #31
   81904:	2101      	movs	r1, #1
   81906:	fa01 f303 	lsl.w	r3, r1, r3
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
   8190a:	4013      	ands	r3, r2
   8190c:	2b00      	cmp	r3, #0
   8190e:	bf14      	ite	ne
   81910:	2301      	movne	r3, #1
   81912:	2300      	moveq	r3, #0
   81914:	b2db      	uxtb	r3, r3
}
   81916:	4618      	mov	r0, r3
   81918:	3724      	adds	r7, #36	; 0x24
   8191a:	46bd      	mov	sp, r7
   8191c:	bc80      	pop	{r7}
   8191e:	4770      	bx	lr

00081920 <bord_init>:
#include"bord.h"


extern signal_t signal;
extern char* lcd_string;
void bord_init(void){
   81920:	b580      	push	{r7, lr}
   81922:	af00      	add	r7, sp, #0
    delay_init();
    ioport_init();
   81924:	f7ff febd 	bl	816a2 <ioport_init>

    //ledice--------------------------------

    ioport_enable_pin(PIO_PC22_IDX);
   81928:	2056      	movs	r0, #86	; 0x56
   8192a:	f7ff feca 	bl	816c2 <ioport_enable_pin>
    ioport_enable_pin(PIO_PC21_IDX);
   8192e:	2055      	movs	r0, #85	; 0x55
   81930:	f7ff fec7 	bl	816c2 <ioport_enable_pin>
    ioport_enable_pin(PIO_PC29_IDX);
   81934:	205d      	movs	r0, #93	; 0x5d
   81936:	f7ff fec4 	bl	816c2 <ioport_enable_pin>
    ioport_enable_pin(PIO_PD7_IDX);
   8193a:	2067      	movs	r0, #103	; 0x67
   8193c:	f7ff fec1 	bl	816c2 <ioport_enable_pin>

    ioport_enable_pin(PIO_PB27_IDX);
   81940:	203b      	movs	r0, #59	; 0x3b
   81942:	f7ff febe 	bl	816c2 <ioport_enable_pin>


    ioport_set_pin_dir(PIO_PC22_IDX, IOPORT_DIR_OUTPUT);
   81946:	2101      	movs	r1, #1
   81948:	2056      	movs	r0, #86	; 0x56
   8194a:	f7ff ff4a 	bl	817e2 <ioport_set_pin_dir>
    ioport_set_pin_dir(PIO_PC21_IDX, IOPORT_DIR_OUTPUT);
   8194e:	2101      	movs	r1, #1
   81950:	2055      	movs	r0, #85	; 0x55
   81952:	f7ff ff46 	bl	817e2 <ioport_set_pin_dir>
    ioport_set_pin_dir(PIO_PC29_IDX, IOPORT_DIR_OUTPUT);
   81956:	2101      	movs	r1, #1
   81958:	205d      	movs	r0, #93	; 0x5d
   8195a:	f7ff ff42 	bl	817e2 <ioport_set_pin_dir>
    ioport_set_pin_dir(PIO_PD7_IDX, IOPORT_DIR_OUTPUT);
   8195e:	2101      	movs	r1, #1
   81960:	2067      	movs	r0, #103	; 0x67
   81962:	f7ff ff3e 	bl	817e2 <ioport_set_pin_dir>

    ioport_set_pin_dir(PIO_PB27_IDX, IOPORT_DIR_OUTPUT);
   81966:	2101      	movs	r1, #1
   81968:	203b      	movs	r0, #59	; 0x3b
   8196a:	f7ff ff3a 	bl	817e2 <ioport_set_pin_dir>

    ioport_set_pin_level(PIO_PC22_IDX, 0);
   8196e:	2100      	movs	r1, #0
   81970:	2056      	movs	r0, #86	; 0x56
   81972:	f7ff ff79 	bl	81868 <ioport_set_pin_level>
    ioport_set_pin_level(PIO_PC21_IDX, 0);
   81976:	2100      	movs	r1, #0
   81978:	2055      	movs	r0, #85	; 0x55
   8197a:	f7ff ff75 	bl	81868 <ioport_set_pin_level>
    ioport_set_pin_level(PIO_PC29_IDX, 0);
   8197e:	2100      	movs	r1, #0
   81980:	205d      	movs	r0, #93	; 0x5d
   81982:	f7ff ff71 	bl	81868 <ioport_set_pin_level>
    ioport_set_pin_level(PIO_PD7_IDX, 0);
   81986:	2100      	movs	r1, #0
   81988:	2067      	movs	r0, #103	; 0x67
   8198a:	f7ff ff6d 	bl	81868 <ioport_set_pin_level>

    pio_set_peripheral(PIOB, PIO_OUTPUT_0, PIO_ABSR_P27);
   8198e:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
   81992:	f04f 5140 	mov.w	r1, #805306368	; 0x30000000
   81996:	4820      	ldr	r0, [pc, #128]	; (81a18 <bord_init+0xf8>)
   81998:	f001 f93b 	bl	82c12 <pio_set_peripheral>


    //tipke-----------------------------------------------------------------------

    ioport_enable_pin(PIO_PC23_IDX);
   8199c:	2057      	movs	r0, #87	; 0x57
   8199e:	f7ff fe90 	bl	816c2 <ioport_enable_pin>
    ioport_enable_pin(PIO_PC24_IDX);
   819a2:	2058      	movs	r0, #88	; 0x58
   819a4:	f7ff fe8d 	bl	816c2 <ioport_enable_pin>
    ioport_enable_pin(PIO_PC25_IDX);
   819a8:	2059      	movs	r0, #89	; 0x59
   819aa:	f7ff fe8a 	bl	816c2 <ioport_enable_pin>
    ioport_enable_pin(PIO_PC26_IDX);
   819ae:	205a      	movs	r0, #90	; 0x5a
   819b0:	f7ff fe87 	bl	816c2 <ioport_enable_pin>


    ioport_set_pin_dir(PIO_PC23_IDX, IOPORT_DIR_INPUT);
   819b4:	2100      	movs	r1, #0
   819b6:	2057      	movs	r0, #87	; 0x57
   819b8:	f7ff ff13 	bl	817e2 <ioport_set_pin_dir>
    ioport_set_pin_dir(PIO_PC24_IDX, IOPORT_DIR_INPUT);
   819bc:	2100      	movs	r1, #0
   819be:	2058      	movs	r0, #88	; 0x58
   819c0:	f7ff ff0f 	bl	817e2 <ioport_set_pin_dir>
    ioport_set_pin_dir(PIO_PC25_IDX, IOPORT_DIR_INPUT);
   819c4:	2100      	movs	r1, #0
   819c6:	2059      	movs	r0, #89	; 0x59
   819c8:	f7ff ff0b 	bl	817e2 <ioport_set_pin_dir>
    ioport_set_pin_dir(PIO_PC26_IDX, IOPORT_DIR_INPUT);
   819cc:	2100      	movs	r1, #0
   819ce:	205a      	movs	r0, #90	; 0x5a
   819d0:	f7ff ff07 	bl	817e2 <ioport_set_pin_dir>



    ioport_set_pin_mode(PIO_PC23_IDX, IOPORT_MODE_DEBOUNCE);
   819d4:	2180      	movs	r1, #128	; 0x80
   819d6:	2057      	movs	r0, #87	; 0x57
   819d8:	f7ff fe97 	bl	8170a <ioport_set_pin_mode>
    ioport_set_pin_mode(PIO_PC24_IDX, IOPORT_MODE_DEBOUNCE);
   819dc:	2180      	movs	r1, #128	; 0x80
   819de:	2058      	movs	r0, #88	; 0x58
   819e0:	f7ff fe93 	bl	8170a <ioport_set_pin_mode>
    ioport_set_pin_mode(PIO_PC25_IDX, IOPORT_MODE_DEBOUNCE);
   819e4:	2180      	movs	r1, #128	; 0x80
   819e6:	2059      	movs	r0, #89	; 0x59
   819e8:	f7ff fe8f 	bl	8170a <ioport_set_pin_mode>
    ioport_set_pin_mode(PIO_PC26_IDX, IOPORT_MODE_DEBOUNCE);
   819ec:	2180      	movs	r1, #128	; 0x80
   819ee:	205a      	movs	r0, #90	; 0x5a
   819f0:	f7ff fe8b 	bl	8170a <ioport_set_pin_mode>

    ioport_set_pin_mode(PIO_PC23_IDX, IOPORT_MODE_PULLUP);
   819f4:	2108      	movs	r1, #8
   819f6:	2057      	movs	r0, #87	; 0x57
   819f8:	f7ff fe87 	bl	8170a <ioport_set_pin_mode>
    ioport_set_pin_mode(PIO_PC24_IDX, IOPORT_MODE_PULLUP);
   819fc:	2108      	movs	r1, #8
   819fe:	2058      	movs	r0, #88	; 0x58
   81a00:	f7ff fe83 	bl	8170a <ioport_set_pin_mode>
    ioport_set_pin_mode(PIO_PC25_IDX, IOPORT_MODE_PULLUP);
   81a04:	2108      	movs	r1, #8
   81a06:	2059      	movs	r0, #89	; 0x59
   81a08:	f7ff fe7f 	bl	8170a <ioport_set_pin_mode>
    ioport_set_pin_mode(PIO_PC26_IDX, IOPORT_MODE_PULLUP);
   81a0c:	2108      	movs	r1, #8
   81a0e:	205a      	movs	r0, #90	; 0x5a
   81a10:	f7ff fe7b 	bl	8170a <ioport_set_pin_mode>





}
   81a14:	bf00      	nop
   81a16:	bd80      	pop	{r7, pc}
   81a18:	400e1000 	.word	0x400e1000

00081a1c <get_button_state>:



int get_button_state(void){
   81a1c:	b580      	push	{r7, lr}
   81a1e:	b08a      	sub	sp, #40	; 0x28
   81a20:	af00      	add	r7, sp, #0
    int stanje = 0;
   81a22:	2300      	movs	r3, #0
   81a24:	627b      	str	r3, [r7, #36]	; 0x24
    int pin1 = 0, pin2 = 0, pin3 = 0, pin4 = 0;
   81a26:	2300      	movs	r3, #0
   81a28:	623b      	str	r3, [r7, #32]
   81a2a:	2300      	movs	r3, #0
   81a2c:	61fb      	str	r3, [r7, #28]
   81a2e:	2300      	movs	r3, #0
   81a30:	61bb      	str	r3, [r7, #24]
   81a32:	2300      	movs	r3, #0
   81a34:	617b      	str	r3, [r7, #20]
    int maska1 = 0, maska2 = 0, maska3 = 0, maska4 = 0;
   81a36:	2300      	movs	r3, #0
   81a38:	613b      	str	r3, [r7, #16]
   81a3a:	2300      	movs	r3, #0
   81a3c:	60fb      	str	r3, [r7, #12]
   81a3e:	2300      	movs	r3, #0
   81a40:	60bb      	str	r3, [r7, #8]
   81a42:	2300      	movs	r3, #0
   81a44:	607b      	str	r3, [r7, #4]

    maska1 = 1<<0;
   81a46:	2301      	movs	r3, #1
   81a48:	613b      	str	r3, [r7, #16]
    maska2 = 1<<1;
   81a4a:	2302      	movs	r3, #2
   81a4c:	60fb      	str	r3, [r7, #12]
    maska3 = 1<<2;
   81a4e:	2304      	movs	r3, #4
   81a50:	60bb      	str	r3, [r7, #8]
    maska4 = 1<<3;
   81a52:	2308      	movs	r3, #8
   81a54:	607b      	str	r3, [r7, #4]

    pin1 = ioport_get_pin_level(PIO_PC23_IDX)<<0;
   81a56:	2057      	movs	r0, #87	; 0x57
   81a58:	f7ff ff3b 	bl	818d2 <ioport_get_pin_level>
   81a5c:	4603      	mov	r3, r0
   81a5e:	623b      	str	r3, [r7, #32]
    pin2 = ioport_get_pin_level(PIO_PC24_IDX)<<1;
   81a60:	2058      	movs	r0, #88	; 0x58
   81a62:	f7ff ff36 	bl	818d2 <ioport_get_pin_level>
   81a66:	4603      	mov	r3, r0
   81a68:	005b      	lsls	r3, r3, #1
   81a6a:	61fb      	str	r3, [r7, #28]
    pin3 = ioport_get_pin_level(PIO_PC25_IDX)<<2;
   81a6c:	2059      	movs	r0, #89	; 0x59
   81a6e:	f7ff ff30 	bl	818d2 <ioport_get_pin_level>
   81a72:	4603      	mov	r3, r0
   81a74:	009b      	lsls	r3, r3, #2
   81a76:	61bb      	str	r3, [r7, #24]
    pin4 = ioport_get_pin_level(PIO_PC26_IDX)<<3;
   81a78:	205a      	movs	r0, #90	; 0x5a
   81a7a:	f7ff ff2a 	bl	818d2 <ioport_get_pin_level>
   81a7e:	4603      	mov	r3, r0
   81a80:	00db      	lsls	r3, r3, #3
   81a82:	617b      	str	r3, [r7, #20]

    stanje = (pin1 & maska1) | stanje;
   81a84:	6a3a      	ldr	r2, [r7, #32]
   81a86:	693b      	ldr	r3, [r7, #16]
   81a88:	4013      	ands	r3, r2
   81a8a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
   81a8c:	4313      	orrs	r3, r2
   81a8e:	627b      	str	r3, [r7, #36]	; 0x24
    stanje = (pin2 & maska2) | stanje;
   81a90:	69fa      	ldr	r2, [r7, #28]
   81a92:	68fb      	ldr	r3, [r7, #12]
   81a94:	4013      	ands	r3, r2
   81a96:	6a7a      	ldr	r2, [r7, #36]	; 0x24
   81a98:	4313      	orrs	r3, r2
   81a9a:	627b      	str	r3, [r7, #36]	; 0x24
    stanje = (pin3 & maska3) | stanje;
   81a9c:	69ba      	ldr	r2, [r7, #24]
   81a9e:	68bb      	ldr	r3, [r7, #8]
   81aa0:	4013      	ands	r3, r2
   81aa2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
   81aa4:	4313      	orrs	r3, r2
   81aa6:	627b      	str	r3, [r7, #36]	; 0x24
    stanje = (pin4 & maska4) | stanje;
   81aa8:	697a      	ldr	r2, [r7, #20]
   81aaa:	687b      	ldr	r3, [r7, #4]
   81aac:	4013      	ands	r3, r2
   81aae:	6a7a      	ldr	r2, [r7, #36]	; 0x24
   81ab0:	4313      	orrs	r3, r2
   81ab2:	627b      	str	r3, [r7, #36]	; 0x24

    return stanje;
   81ab4:	6a7b      	ldr	r3, [r7, #36]	; 0x24


}
   81ab6:	4618      	mov	r0, r3
   81ab8:	3728      	adds	r7, #40	; 0x28
   81aba:	46bd      	mov	sp, r7
   81abc:	bd80      	pop	{r7, pc}
	...

00081ac0 <get_button_press>:


int get_button_press(void){
   81ac0:	b580      	push	{r7, lr}
   81ac2:	b08a      	sub	sp, #40	; 0x28
   81ac4:	af00      	add	r7, sp, #0

    static int old_state = 0;
    int state = 0;
   81ac6:	2300      	movs	r3, #0
   81ac8:	617b      	str	r3, [r7, #20]
    int state1 = 0, state2 = 0, state3 = 0, state4 = 0;
   81aca:	2300      	movs	r3, #0
   81acc:	613b      	str	r3, [r7, #16]
   81ace:	2300      	movs	r3, #0
   81ad0:	60fb      	str	r3, [r7, #12]
   81ad2:	2300      	movs	r3, #0
   81ad4:	60bb      	str	r3, [r7, #8]
   81ad6:	2300      	movs	r3, #0
   81ad8:	607b      	str	r3, [r7, #4]
    int leds = 0, leds1 = 0, leds2 = 0, leds3 = 0, leds4 = 0;
   81ada:	2300      	movs	r3, #0
   81adc:	603b      	str	r3, [r7, #0]
   81ade:	2300      	movs	r3, #0
   81ae0:	627b      	str	r3, [r7, #36]	; 0x24
   81ae2:	2300      	movs	r3, #0
   81ae4:	623b      	str	r3, [r7, #32]
   81ae6:	2300      	movs	r3, #0
   81ae8:	61fb      	str	r3, [r7, #28]
   81aea:	2300      	movs	r3, #0
   81aec:	61bb      	str	r3, [r7, #24]


    state1 = ioport_get_pin_level(PIO_PC23_IDX)<<0;
   81aee:	2057      	movs	r0, #87	; 0x57
   81af0:	f7ff feef 	bl	818d2 <ioport_get_pin_level>
   81af4:	4603      	mov	r3, r0
   81af6:	613b      	str	r3, [r7, #16]
    state2 = ioport_get_pin_level(PIO_PC24_IDX)<<1;
   81af8:	2058      	movs	r0, #88	; 0x58
   81afa:	f7ff feea 	bl	818d2 <ioport_get_pin_level>
   81afe:	4603      	mov	r3, r0
   81b00:	005b      	lsls	r3, r3, #1
   81b02:	60fb      	str	r3, [r7, #12]
    state3 = ioport_get_pin_level(PIO_PC25_IDX)<<2;
   81b04:	2059      	movs	r0, #89	; 0x59
   81b06:	f7ff fee4 	bl	818d2 <ioport_get_pin_level>
   81b0a:	4603      	mov	r3, r0
   81b0c:	009b      	lsls	r3, r3, #2
   81b0e:	60bb      	str	r3, [r7, #8]
    state4 = ioport_get_pin_level(PIO_PC26_IDX)<<3;
   81b10:	205a      	movs	r0, #90	; 0x5a
   81b12:	f7ff fede 	bl	818d2 <ioport_get_pin_level>
   81b16:	4603      	mov	r3, r0
   81b18:	00db      	lsls	r3, r3, #3
   81b1a:	607b      	str	r3, [r7, #4]

    state = state1 | state2 | state3 | state4;
   81b1c:	693a      	ldr	r2, [r7, #16]
   81b1e:	68fb      	ldr	r3, [r7, #12]
   81b20:	431a      	orrs	r2, r3
   81b22:	68bb      	ldr	r3, [r7, #8]
   81b24:	4313      	orrs	r3, r2
   81b26:	687a      	ldr	r2, [r7, #4]
   81b28:	4313      	orrs	r3, r2
   81b2a:	617b      	str	r3, [r7, #20]

    if((old_state & 1<<0) && (state1 == 0))leds1 = 1<<0;
   81b2c:	4b1d      	ldr	r3, [pc, #116]	; (81ba4 <get_button_press+0xe4>)
   81b2e:	681b      	ldr	r3, [r3, #0]
   81b30:	f003 0301 	and.w	r3, r3, #1
   81b34:	2b00      	cmp	r3, #0
   81b36:	d004      	beq.n	81b42 <get_button_press+0x82>
   81b38:	693b      	ldr	r3, [r7, #16]
   81b3a:	2b00      	cmp	r3, #0
   81b3c:	d101      	bne.n	81b42 <get_button_press+0x82>
   81b3e:	2301      	movs	r3, #1
   81b40:	627b      	str	r3, [r7, #36]	; 0x24
    if((old_state & 1<<1) && (state2 == 0))leds2 = 1<<1;
   81b42:	4b18      	ldr	r3, [pc, #96]	; (81ba4 <get_button_press+0xe4>)
   81b44:	681b      	ldr	r3, [r3, #0]
   81b46:	f003 0302 	and.w	r3, r3, #2
   81b4a:	2b00      	cmp	r3, #0
   81b4c:	d004      	beq.n	81b58 <get_button_press+0x98>
   81b4e:	68fb      	ldr	r3, [r7, #12]
   81b50:	2b00      	cmp	r3, #0
   81b52:	d101      	bne.n	81b58 <get_button_press+0x98>
   81b54:	2302      	movs	r3, #2
   81b56:	623b      	str	r3, [r7, #32]
    if((old_state & 1<<2) && (state3 == 0))leds3 = 1<<2;
   81b58:	4b12      	ldr	r3, [pc, #72]	; (81ba4 <get_button_press+0xe4>)
   81b5a:	681b      	ldr	r3, [r3, #0]
   81b5c:	f003 0304 	and.w	r3, r3, #4
   81b60:	2b00      	cmp	r3, #0
   81b62:	d004      	beq.n	81b6e <get_button_press+0xae>
   81b64:	68bb      	ldr	r3, [r7, #8]
   81b66:	2b00      	cmp	r3, #0
   81b68:	d101      	bne.n	81b6e <get_button_press+0xae>
   81b6a:	2304      	movs	r3, #4
   81b6c:	61fb      	str	r3, [r7, #28]
    if((old_state & 1<<3) && (state4 == 0))leds4 = 1<<3;
   81b6e:	4b0d      	ldr	r3, [pc, #52]	; (81ba4 <get_button_press+0xe4>)
   81b70:	681b      	ldr	r3, [r3, #0]
   81b72:	f003 0308 	and.w	r3, r3, #8
   81b76:	2b00      	cmp	r3, #0
   81b78:	d004      	beq.n	81b84 <get_button_press+0xc4>
   81b7a:	687b      	ldr	r3, [r7, #4]
   81b7c:	2b00      	cmp	r3, #0
   81b7e:	d101      	bne.n	81b84 <get_button_press+0xc4>
   81b80:	2308      	movs	r3, #8
   81b82:	61bb      	str	r3, [r7, #24]

    leds = leds1 | leds2 | leds3 | leds4;
   81b84:	6a7a      	ldr	r2, [r7, #36]	; 0x24
   81b86:	6a3b      	ldr	r3, [r7, #32]
   81b88:	431a      	orrs	r2, r3
   81b8a:	69fb      	ldr	r3, [r7, #28]
   81b8c:	4313      	orrs	r3, r2
   81b8e:	69ba      	ldr	r2, [r7, #24]
   81b90:	4313      	orrs	r3, r2
   81b92:	603b      	str	r3, [r7, #0]
    old_state = state;
   81b94:	4a03      	ldr	r2, [pc, #12]	; (81ba4 <get_button_press+0xe4>)
   81b96:	697b      	ldr	r3, [r7, #20]
   81b98:	6013      	str	r3, [r2, #0]

    return leds;
   81b9a:	683b      	ldr	r3, [r7, #0]

}
   81b9c:	4618      	mov	r0, r3
   81b9e:	3728      	adds	r7, #40	; 0x28
   81ba0:	46bd      	mov	sp, r7
   81ba2:	bd80      	pop	{r7, pc}
   81ba4:	20070ddc 	.word	0x20070ddc

00081ba8 <adc_setup>:



void adc_setup(void){
   81ba8:	b580      	push	{r7, lr}
   81baa:	af00      	add	r7, sp, #0
	sysclk_enable_peripheral_clock(ID_ADC);
   81bac:	2025      	movs	r0, #37	; 0x25
   81bae:	f7ff fd6d 	bl	8168c <sysclk_enable_peripheral_clock>
	adc_init(ADC, SystemCoreClock, 6400000, ADC_STARTUP_TIME_4);
   81bb2:	4b0f      	ldr	r3, [pc, #60]	; (81bf0 <adc_setup+0x48>)
   81bb4:	6819      	ldr	r1, [r3, #0]
   81bb6:	f44f 2380 	mov.w	r3, #262144	; 0x40000
   81bba:	4a0e      	ldr	r2, [pc, #56]	; (81bf4 <adc_setup+0x4c>)
   81bbc:	480e      	ldr	r0, [pc, #56]	; (81bf8 <adc_setup+0x50>)
   81bbe:	f001 f867 	bl	82c90 <adc_init>
	adc_configure_timing(ADC, 0, ADC_SETTLING_TIME_3, 1);
   81bc2:	2301      	movs	r3, #1
   81bc4:	f44f 1240 	mov.w	r2, #3145728	; 0x300000
   81bc8:	2100      	movs	r1, #0
   81bca:	480b      	ldr	r0, [pc, #44]	; (81bf8 <adc_setup+0x50>)
   81bcc:	f001 f8bf 	bl	82d4e <adc_configure_timing>
	adc_set_resolution(ADC, ADC_12_BITS);
   81bd0:	2100      	movs	r1, #0
   81bd2:	4809      	ldr	r0, [pc, #36]	; (81bf8 <adc_setup+0x50>)
   81bd4:	f001 f88d 	bl	82cf2 <adc_set_resolution>
	adc_configure_trigger(ADC, ADC_TRIG_SW,0);
   81bd8:	2200      	movs	r2, #0
   81bda:	2100      	movs	r1, #0
   81bdc:	4806      	ldr	r0, [pc, #24]	; (81bf8 <adc_setup+0x50>)
   81bde:	f001 f89f 	bl	82d20 <adc_configure_trigger>
	adc_enable_channel(ADC, ADC_CHANNEL_7);
   81be2:	2107      	movs	r1, #7
   81be4:	4804      	ldr	r0, [pc, #16]	; (81bf8 <adc_setup+0x50>)
   81be6:	f001 f8dd 	bl	82da4 <adc_enable_channel>


}
   81bea:	bf00      	nop
   81bec:	bd80      	pop	{r7, pc}
   81bee:	bf00      	nop
   81bf0:	200703f0 	.word	0x200703f0
   81bf4:	0061a800 	.word	0x0061a800
   81bf8:	400c0000 	.word	0x400c0000
   81bfc:	00000000 	.word	0x00000000

00081c00 <adc_read1>:



}

void adc_read1(void){
   81c00:	b580      	push	{r7, lr}
   81c02:	b084      	sub	sp, #16
   81c04:	af00      	add	r7, sp, #0
    int status = 0;
   81c06:	2300      	movs	r3, #0
   81c08:	60fb      	str	r3, [r7, #12]
    int mask = 1<<7;
   81c0a:	2380      	movs	r3, #128	; 0x80
   81c0c:	60bb      	str	r3, [r7, #8]
    uint32_t value=0;
   81c0e:	2300      	movs	r3, #0
   81c10:	607b      	str	r3, [r7, #4]


    adc_start(ADC);
   81c12:	481f      	ldr	r0, [pc, #124]	; (81c90 <adc_read1+0x90>)
   81c14:	f001 f8ba 	bl	82d8c <adc_start>

    while(1){

        status = adc_get_status(ADC) & mask;
   81c18:	481d      	ldr	r0, [pc, #116]	; (81c90 <adc_read1+0x90>)
   81c1a:	f001 f8ee 	bl	82dfa <adc_get_status>
   81c1e:	4602      	mov	r2, r0
   81c20:	68bb      	ldr	r3, [r7, #8]
   81c22:	4013      	ands	r3, r2
   81c24:	60fb      	str	r3, [r7, #12]

        if(status){
   81c26:	68fb      	ldr	r3, [r7, #12]
   81c28:	2b00      	cmp	r3, #0
   81c2a:	d0f5      	beq.n	81c18 <adc_read1+0x18>
             value = adc_get_channel_value(ADC, ADC_CHANNEL_7);
   81c2c:	2107      	movs	r1, #7
   81c2e:	4818      	ldr	r0, [pc, #96]	; (81c90 <adc_read1+0x90>)
   81c30:	f001 f8ca 	bl	82dc8 <adc_get_channel_value>
   81c34:	6078      	str	r0, [r7, #4]

             signal.f = ((float)value*30)/4095;
   81c36:	6878      	ldr	r0, [r7, #4]
   81c38:	f003 f92c 	bl	84e94 <__aeabi_ui2f>
   81c3c:	4603      	mov	r3, r0
   81c3e:	4915      	ldr	r1, [pc, #84]	; (81c94 <adc_read1+0x94>)
   81c40:	4618      	mov	r0, r3
   81c42:	f003 f97f 	bl	84f44 <__aeabi_fmul>
   81c46:	4603      	mov	r3, r0
   81c48:	4913      	ldr	r1, [pc, #76]	; (81c98 <adc_read1+0x98>)
   81c4a:	4618      	mov	r0, r3
   81c4c:	f003 fa2e 	bl	850ac <__aeabi_fdiv>
   81c50:	4603      	mov	r3, r0
   81c52:	461a      	mov	r2, r3
   81c54:	4b11      	ldr	r3, [pc, #68]	; (81c9c <adc_read1+0x9c>)
   81c56:	601a      	str	r2, [r3, #0]

             if(signal.f<0.1)signal.f=0.1;
   81c58:	4b10      	ldr	r3, [pc, #64]	; (81c9c <adc_read1+0x9c>)
   81c5a:	681b      	ldr	r3, [r3, #0]
   81c5c:	4618      	mov	r0, r3
   81c5e:	f002 fd29 	bl	846b4 <__aeabi_f2d>
   81c62:	a309      	add	r3, pc, #36	; (adr r3, 81c88 <adc_read1+0x88>)
   81c64:	e9d3 2300 	ldrd	r2, r3, [r3]
   81c68:	f002 ffee 	bl	84c48 <__aeabi_dcmplt>
   81c6c:	4603      	mov	r3, r0
   81c6e:	2b00      	cmp	r3, #0
   81c70:	d100      	bne.n	81c74 <adc_read1+0x74>
             break;
   81c72:	e002      	b.n	81c7a <adc_read1+0x7a>
             if(signal.f<0.1)signal.f=0.1;
   81c74:	4b09      	ldr	r3, [pc, #36]	; (81c9c <adc_read1+0x9c>)
   81c76:	4a0a      	ldr	r2, [pc, #40]	; (81ca0 <adc_read1+0xa0>)
   81c78:	601a      	str	r2, [r3, #0]
    }




}
   81c7a:	bf00      	nop
   81c7c:	3710      	adds	r7, #16
   81c7e:	46bd      	mov	sp, r7
   81c80:	bd80      	pop	{r7, pc}
   81c82:	bf00      	nop
   81c84:	f3af 8000 	nop.w
   81c88:	9999999a 	.word	0x9999999a
   81c8c:	3fb99999 	.word	0x3fb99999
   81c90:	400c0000 	.word	0x400c0000
   81c94:	41f00000 	.word	0x41f00000
   81c98:	457ff000 	.word	0x457ff000
   81c9c:	200701c0 	.word	0x200701c0
   81ca0:	3dcccccd 	.word	0x3dcccccd

00081ca4 <timer_init>:


void timer_init(void){
   81ca4:	b580      	push	{r7, lr}
   81ca6:	af00      	add	r7, sp, #0

    sysclk_enable_peripheral_clock(ID_TC0);
   81ca8:	201b      	movs	r0, #27
   81caa:	f7ff fcef 	bl	8168c <sysclk_enable_peripheral_clock>
    NVIC_EnableIRQ(TC0_IRQn);
   81cae:	201b      	movs	r0, #27
   81cb0:	f7ff fcaa 	bl	81608 <NVIC_EnableIRQ>
    NVIC_SetPriority(TC0_IRQn, 0);
   81cb4:	2100      	movs	r1, #0
   81cb6:	201b      	movs	r0, #27
   81cb8:	f7ff fcbe 	bl	81638 <NVIC_SetPriority>
    tc_init(TC0,0, TC_CMR_TCCLKS_TIMER_CLOCK3 | TC_CMR_WAVE | TC_CMR_WAVSEL_UP_RC |TC_CMR_BCPC_CLEAR | TC_CMR_BCPB_SET );//
   81cbc:	4a0a      	ldr	r2, [pc, #40]	; (81ce8 <timer_init+0x44>)
   81cbe:	2100      	movs	r1, #0
   81cc0:	480a      	ldr	r0, [pc, #40]	; (81cec <timer_init+0x48>)
   81cc2:	f001 f8a5 	bl	82e10 <tc_init>

    tc_enable_interrupt(TC0, 0,  TC_IER_CPBS | TC_IER_CPCS);//ne vem zaki se RB compare ne proi??
   81cc6:	2218      	movs	r2, #24
   81cc8:	2100      	movs	r1, #0
   81cca:	4808      	ldr	r0, [pc, #32]	; (81cec <timer_init+0x48>)
   81ccc:	f001 f8de 	bl	82e8c <tc_enable_interrupt>

    tc_write_rc(TC0, 0, 2625000);
   81cd0:	4a07      	ldr	r2, [pc, #28]	; (81cf0 <timer_init+0x4c>)
   81cd2:	2100      	movs	r1, #0
   81cd4:	4805      	ldr	r0, [pc, #20]	; (81cec <timer_init+0x48>)
   81cd6:	f001 f8c7 	bl	82e68 <tc_write_rc>

    tc_start(TC0,0);
   81cda:	2100      	movs	r1, #0
   81cdc:	4803      	ldr	r0, [pc, #12]	; (81cec <timer_init+0x48>)
   81cde:	f001 f8b3 	bl	82e48 <tc_start>



}
   81ce2:	bf00      	nop
   81ce4:	bd80      	pop	{r7, pc}
   81ce6:	bf00      	nop
   81ce8:	0900c002 	.word	0x0900c002
   81cec:	40080000 	.word	0x40080000
   81cf0:	00280de8 	.word	0x00280de8

00081cf4 <NVIC_EnableIRQ>:
{
   81cf4:	b480      	push	{r7}
   81cf6:	b083      	sub	sp, #12
   81cf8:	af00      	add	r7, sp, #0
   81cfa:	4603      	mov	r3, r0
   81cfc:	71fb      	strb	r3, [r7, #7]
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   81cfe:	79fb      	ldrb	r3, [r7, #7]
   81d00:	f003 031f 	and.w	r3, r3, #31
   81d04:	2201      	movs	r2, #1
   81d06:	fa02 f103 	lsl.w	r1, r2, r3
   81d0a:	4a05      	ldr	r2, [pc, #20]	; (81d20 <NVIC_EnableIRQ+0x2c>)
   81d0c:	f997 3007 	ldrsb.w	r3, [r7, #7]
   81d10:	095b      	lsrs	r3, r3, #5
   81d12:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
   81d16:	bf00      	nop
   81d18:	370c      	adds	r7, #12
   81d1a:	46bd      	mov	sp, r7
   81d1c:	bc80      	pop	{r7}
   81d1e:	4770      	bx	lr
   81d20:	e000e100 	.word	0xe000e100
   81d24:	00000000 	.word	0x00000000

00081d28 <main>:


//global variables
extern fifo_t keys_fifo;

int main (void){
   81d28:	b590      	push	{r4, r7, lr}
   81d2a:	b083      	sub	sp, #12
   81d2c:	af00      	add	r7, sp, #0
    uint8_t i;
    for( i = 0; i < NS; i++ ){
   81d2e:	2300      	movs	r3, #0
   81d30:	71fb      	strb	r3, [r7, #7]
   81d32:	e041      	b.n	81db8 <main+0x90>
        sinus[i] = 4095 * (sin( 3.14 / 2 * (NS-1 + 2*i) / (NS-1)  ) + 1) / 2;
   81d34:	79fb      	ldrb	r3, [r7, #7]
   81d36:	005b      	lsls	r3, r3, #1
   81d38:	3309      	adds	r3, #9
   81d3a:	4618      	mov	r0, r3
   81d3c:	f002 fca8 	bl	84690 <__aeabi_i2d>
   81d40:	a33b      	add	r3, pc, #236	; (adr r3, 81e30 <main+0x108>)
   81d42:	e9d3 2300 	ldrd	r2, r3, [r3]
   81d46:	f002 fd0d 	bl	84764 <__aeabi_dmul>
   81d4a:	4603      	mov	r3, r0
   81d4c:	460c      	mov	r4, r1
   81d4e:	4618      	mov	r0, r3
   81d50:	4621      	mov	r1, r4
   81d52:	f04f 0200 	mov.w	r2, #0
   81d56:	4b3a      	ldr	r3, [pc, #232]	; (81e40 <main+0x118>)
   81d58:	f002 fe2e 	bl	849b8 <__aeabi_ddiv>
   81d5c:	4603      	mov	r3, r0
   81d5e:	460c      	mov	r4, r1
   81d60:	4618      	mov	r0, r3
   81d62:	4621      	mov	r1, r4
   81d64:	f001 f9d4 	bl	83110 <sin>
   81d68:	f04f 0200 	mov.w	r2, #0
   81d6c:	4b35      	ldr	r3, [pc, #212]	; (81e44 <main+0x11c>)
   81d6e:	f002 fb43 	bl	843f8 <__adddf3>
   81d72:	4603      	mov	r3, r0
   81d74:	460c      	mov	r4, r1
   81d76:	4618      	mov	r0, r3
   81d78:	4621      	mov	r1, r4
   81d7a:	a32f      	add	r3, pc, #188	; (adr r3, 81e38 <main+0x110>)
   81d7c:	e9d3 2300 	ldrd	r2, r3, [r3]
   81d80:	f002 fcf0 	bl	84764 <__aeabi_dmul>
   81d84:	4603      	mov	r3, r0
   81d86:	460c      	mov	r4, r1
   81d88:	4618      	mov	r0, r3
   81d8a:	4621      	mov	r1, r4
   81d8c:	f04f 0200 	mov.w	r2, #0
   81d90:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
   81d94:	f002 fe10 	bl	849b8 <__aeabi_ddiv>
   81d98:	4603      	mov	r3, r0
   81d9a:	460c      	mov	r4, r1
   81d9c:	461a      	mov	r2, r3
   81d9e:	4623      	mov	r3, r4
   81da0:	79fc      	ldrb	r4, [r7, #7]
   81da2:	4610      	mov	r0, r2
   81da4:	4619      	mov	r1, r3
   81da6:	f002 ff9f 	bl	84ce8 <__aeabi_d2uiz>
   81daa:	4602      	mov	r2, r0
   81dac:	4b26      	ldr	r3, [pc, #152]	; (81e48 <main+0x120>)
   81dae:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
    for( i = 0; i < NS; i++ ){
   81db2:	79fb      	ldrb	r3, [r7, #7]
   81db4:	3301      	adds	r3, #1
   81db6:	71fb      	strb	r3, [r7, #7]
   81db8:	79fb      	ldrb	r3, [r7, #7]
   81dba:	2b09      	cmp	r3, #9
   81dbc:	d9ba      	bls.n	81d34 <main+0xc>
    }

    for( i = 0; i < NS; i++){
   81dbe:	2300      	movs	r3, #0
   81dc0:	71fb      	strb	r3, [r7, #7]
   81dc2:	e011      	b.n	81de8 <main+0xc0>
        triang[i] = 4095 * i / (NS-1);
   81dc4:	79fa      	ldrb	r2, [r7, #7]
   81dc6:	4613      	mov	r3, r2
   81dc8:	031b      	lsls	r3, r3, #12
   81dca:	1a9b      	subs	r3, r3, r2
   81dcc:	4a1f      	ldr	r2, [pc, #124]	; (81e4c <main+0x124>)
   81dce:	fb82 1203 	smull	r1, r2, r2, r3
   81dd2:	1052      	asrs	r2, r2, #1
   81dd4:	17db      	asrs	r3, r3, #31
   81dd6:	1ad2      	subs	r2, r2, r3
   81dd8:	79fb      	ldrb	r3, [r7, #7]
   81dda:	4611      	mov	r1, r2
   81ddc:	4a1c      	ldr	r2, [pc, #112]	; (81e50 <main+0x128>)
   81dde:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
    for( i = 0; i < NS; i++){
   81de2:	79fb      	ldrb	r3, [r7, #7]
   81de4:	3301      	adds	r3, #1
   81de6:	71fb      	strb	r3, [r7, #7]
   81de8:	79fb      	ldrb	r3, [r7, #7]
   81dea:	2b09      	cmp	r3, #9
   81dec:	d9ea      	bls.n	81dc4 <main+0x9c>
    }
    /* sets the processor clock according to conf_clock.h definitions */
    sysclk_init();
   81dee:	f000 fd11 	bl	82814 <sysclk_init>

    /* disable wathcdog */
    WDT->WDT_MR = WDT_MR_WDDIS;
   81df2:	4b18      	ldr	r3, [pc, #96]	; (81e54 <main+0x12c>)
   81df4:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   81df8:	605a      	str	r2, [r3, #4]

    /*********************   HW init   ***************************/
    bord_init();
   81dfa:	f7ff fd91 	bl	81920 <bord_init>
    lcd_init();
   81dfe:	f7fe fd97 	bl	80930 <lcd_init>
    dacc_setup();
   81e02:	f7fe ff07 	bl	80c14 <dacc_setup>
    adc_setup();
   81e06:	f7ff fecf 	bl	81ba8 <adc_setup>
    timer_init();
   81e0a:	f7ff ff4b 	bl	81ca4 <timer_init>
    uart_start();
   81e0e:	f000 f87b 	bl	81f08 <uart_start>

    NVIC_EnableIRQ(SysTick_IRQn);
   81e12:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   81e16:	f7ff ff6d 	bl	81cf4 <NVIC_EnableIRQ>
    //a prioritetaje za exception avtomatsko pred interupt in jih gleda ločeno ker za SysTick mam nastavljeno na 15 ?



    /***********************RTOS**************************************/
    if(rtos_init(20000) != 0){
   81e1a:	f644 6020 	movw	r0, #20000	; 0x4e20
   81e1e:	f7fe f9d7 	bl	801d0 <rtos_init>
   81e22:	4603      	mov	r3, r0
   81e24:	2b00      	cmp	r3, #0
   81e26:	d000      	beq.n	81e2a <main+0x102>
        while(1);
   81e28:	e7fe      	b.n	81e28 <main+0x100>
    }//napaka rezina predolga za števec števec se bo obrnu napaka da operacija uzame preveč čase je drugje
    rtos_enable();
   81e2a:	f7fe fa23 	bl	80274 <rtos_enable>

/************************ test    *******************************/

    /********************* Main loop     ***************************/

    while(1){
   81e2e:	e7fe      	b.n	81e2e <main+0x106>
   81e30:	51eb851f 	.word	0x51eb851f
   81e34:	3ff91eb8 	.word	0x3ff91eb8
   81e38:	00000000 	.word	0x00000000
   81e3c:	40affe00 	.word	0x40affe00
   81e40:	40220000 	.word	0x40220000
   81e44:	3ff00000 	.word	0x3ff00000
   81e48:	20070e40 	.word	0x20070e40
   81e4c:	38e38e39 	.word	0x38e38e39
   81e50:	20070e18 	.word	0x20070e18
   81e54:	400e1a50 	.word	0x400e1a50

00081e58 <NVIC_EnableIRQ>:
{
   81e58:	b480      	push	{r7}
   81e5a:	b083      	sub	sp, #12
   81e5c:	af00      	add	r7, sp, #0
   81e5e:	4603      	mov	r3, r0
   81e60:	71fb      	strb	r3, [r7, #7]
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
   81e62:	79fb      	ldrb	r3, [r7, #7]
   81e64:	f003 031f 	and.w	r3, r3, #31
   81e68:	2201      	movs	r2, #1
   81e6a:	fa02 f103 	lsl.w	r1, r2, r3
   81e6e:	4a05      	ldr	r2, [pc, #20]	; (81e84 <NVIC_EnableIRQ+0x2c>)
   81e70:	f997 3007 	ldrsb.w	r3, [r7, #7]
   81e74:	095b      	lsrs	r3, r3, #5
   81e76:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
   81e7a:	bf00      	nop
   81e7c:	370c      	adds	r7, #12
   81e7e:	46bd      	mov	sp, r7
   81e80:	bc80      	pop	{r7}
   81e82:	4770      	bx	lr
   81e84:	e000e100 	.word	0xe000e100

00081e88 <NVIC_SetPriority>:
{
   81e88:	b480      	push	{r7}
   81e8a:	b083      	sub	sp, #12
   81e8c:	af00      	add	r7, sp, #0
   81e8e:	4603      	mov	r3, r0
   81e90:	6039      	str	r1, [r7, #0]
   81e92:	71fb      	strb	r3, [r7, #7]
  if(IRQn < 0) {
   81e94:	f997 3007 	ldrsb.w	r3, [r7, #7]
   81e98:	2b00      	cmp	r3, #0
   81e9a:	da0b      	bge.n	81eb4 <NVIC_SetPriority+0x2c>
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
   81e9c:	683b      	ldr	r3, [r7, #0]
   81e9e:	b2da      	uxtb	r2, r3
   81ea0:	490c      	ldr	r1, [pc, #48]	; (81ed4 <NVIC_SetPriority+0x4c>)
   81ea2:	79fb      	ldrb	r3, [r7, #7]
   81ea4:	f003 030f 	and.w	r3, r3, #15
   81ea8:	3b04      	subs	r3, #4
   81eaa:	0112      	lsls	r2, r2, #4
   81eac:	b2d2      	uxtb	r2, r2
   81eae:	440b      	add	r3, r1
   81eb0:	761a      	strb	r2, [r3, #24]
}
   81eb2:	e009      	b.n	81ec8 <NVIC_SetPriority+0x40>
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
   81eb4:	683b      	ldr	r3, [r7, #0]
   81eb6:	b2da      	uxtb	r2, r3
   81eb8:	4907      	ldr	r1, [pc, #28]	; (81ed8 <NVIC_SetPriority+0x50>)
   81eba:	f997 3007 	ldrsb.w	r3, [r7, #7]
   81ebe:	0112      	lsls	r2, r2, #4
   81ec0:	b2d2      	uxtb	r2, r2
   81ec2:	440b      	add	r3, r1
   81ec4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
   81ec8:	bf00      	nop
   81eca:	370c      	adds	r7, #12
   81ecc:	46bd      	mov	sp, r7
   81ece:	bc80      	pop	{r7}
   81ed0:	4770      	bx	lr
   81ed2:	bf00      	nop
   81ed4:	e000ed00 	.word	0xe000ed00
   81ed8:	e000e100 	.word	0xe000e100

00081edc <sysclk_enable_peripheral_clock>:
{
   81edc:	b580      	push	{r7, lr}
   81ede:	b082      	sub	sp, #8
   81ee0:	af00      	add	r7, sp, #0
   81ee2:	6078      	str	r0, [r7, #4]
	pmc_enable_periph_clk(ul_id);
   81ee4:	6878      	ldr	r0, [r7, #4]
   81ee6:	f000 fe03 	bl	82af0 <pmc_enable_periph_clk>
}
   81eea:	bf00      	nop
   81eec:	3708      	adds	r7, #8
   81eee:	46bd      	mov	sp, r7
   81ef0:	bd80      	pop	{r7, pc}

00081ef2 <sysclk_disable_peripheral_clock>:
 * \brief Disable a peripheral's clock.
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_disable_peripheral_clock(uint32_t ul_id)
{
   81ef2:	b580      	push	{r7, lr}
   81ef4:	b082      	sub	sp, #8
   81ef6:	af00      	add	r7, sp, #0
   81ef8:	6078      	str	r0, [r7, #4]
	pmc_disable_periph_clk(ul_id);
   81efa:	6878      	ldr	r0, [r7, #4]
   81efc:	f000 fe36 	bl	82b6c <pmc_disable_periph_clk>
}
   81f00:	bf00      	nop
   81f02:	3708      	adds	r7, #8
   81f04:	46bd      	mov	sp, r7
   81f06:	bd80      	pop	{r7, pc}

00081f08 <uart_start>:
extern rtos_task_t  task_led2;
extern rtos_task_t  task_ura;



void uart_start(void){
   81f08:	b580      	push	{r7, lr}
   81f0a:	b084      	sub	sp, #16
   81f0c:	af00      	add	r7, sp, #0
    sam_uart_opt_t uart_setup = {
   81f0e:	4b18      	ldr	r3, [pc, #96]	; (81f70 <uart_start+0x68>)
   81f10:	681b      	ldr	r3, [r3, #0]
   81f12:	607b      	str	r3, [r7, #4]
   81f14:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
   81f18:	60bb      	str	r3, [r7, #8]
   81f1a:	f44f 6300 	mov.w	r3, #2048	; 0x800
   81f1e:	60fb      	str	r3, [r7, #12]
        .ul_mck = SystemCoreClock,
        .ul_baudrate = 115200,
        .ul_mode =UART_MR_CHMODE_NORMAL | UART_MR_PAR_NO
    };

    NVIC_EnableIRQ(UART_IRQn);
   81f20:	2008      	movs	r0, #8
   81f22:	f7ff ff99 	bl	81e58 <NVIC_EnableIRQ>

    sysclk_enable_peripheral_clock(ID_PIOA);
   81f26:	200b      	movs	r0, #11
   81f28:	f7ff ffd8 	bl	81edc <sysclk_enable_peripheral_clock>
    sysclk_enable_peripheral_clock(ID_UART);
   81f2c:	2008      	movs	r0, #8
   81f2e:	f7ff ffd5 	bl	81edc <sysclk_enable_peripheral_clock>

    pio_set_peripheral(PIOA,PIO_PERIPH_A,PIO_PA8A_URXD | PIO_PA9A_UTXD);
   81f32:	f44f 7240 	mov.w	r2, #768	; 0x300
   81f36:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   81f3a:	480e      	ldr	r0, [pc, #56]	; (81f74 <uart_start+0x6c>)
   81f3c:	f000 fe69 	bl	82c12 <pio_set_peripheral>
    pio_pull_up(PIOA,PIO_PA8A_URXD | PIO_PA9A_UTXD,PIO_PULLUP);
   81f40:	2201      	movs	r2, #1
   81f42:	f44f 7140 	mov.w	r1, #768	; 0x300
   81f46:	480b      	ldr	r0, [pc, #44]	; (81f74 <uart_start+0x6c>)
   81f48:	f000 fe4e 	bl	82be8 <pio_pull_up>

    uart_init(UART, &uart_setup);
   81f4c:	1d3b      	adds	r3, r7, #4
   81f4e:	4619      	mov	r1, r3
   81f50:	4809      	ldr	r0, [pc, #36]	; (81f78 <uart_start+0x70>)
   81f52:	f000 ffbf 	bl	82ed4 <uart_init>

    uart_enable_interrupt(UART, UART_SR_RXRDY);  // glej interupt register na ki naj se enabla interupt nimam še ideje
   81f56:	2101      	movs	r1, #1
   81f58:	4807      	ldr	r0, [pc, #28]	; (81f78 <uart_start+0x70>)
   81f5a:	f000 ffeb 	bl	82f34 <uart_enable_interrupt>

    NVIC_SetPriority(UART_IRQn,1);
   81f5e:	2101      	movs	r1, #1
   81f60:	2008      	movs	r0, #8
   81f62:	f7ff ff91 	bl	81e88 <NVIC_SetPriority>

}
   81f66:	bf00      	nop
   81f68:	3710      	adds	r7, #16
   81f6a:	46bd      	mov	sp, r7
   81f6c:	bd80      	pop	{r7, pc}
   81f6e:	bf00      	nop
   81f70:	200703f0 	.word	0x200703f0
   81f74:	400e0e00 	.word	0x400e0e00
   81f78:	400e0800 	.word	0x400e0800

00081f7c <UART_Handler>:




void UART_Handler(){
   81f7c:	b5f0      	push	{r4, r5, r6, r7, lr}
   81f7e:	b089      	sub	sp, #36	; 0x24
   81f80:	af02      	add	r7, sp, #8
    uint8_t uart_data;
    int i;
    int button_ok;
    uint8_t check[KEYS_FIFO_SIZE];

    if(UART->UART_SR & (UART_SR_FRAME | UART_SR_OVRE | UART_SR_PARE)){
   81f82:	4b7a      	ldr	r3, [pc, #488]	; (8216c <UART_Handler+0x1f0>)
   81f84:	695b      	ldr	r3, [r3, #20]
   81f86:	f003 03e0 	and.w	r3, r3, #224	; 0xe0
   81f8a:	2b00      	cmp	r3, #0
   81f8c:	d041      	beq.n	82012 <UART_Handler+0x96>

        i = sprintf(lcd_string, "Error: PARE %d   FRAME %d OVER %d", (int)(UART->UART_SR & UART_SR_PARE)>>7, (int)(UART->UART_SR & UART_SR_FRAME)>>6, (int)(UART->UART_SR & UART_SR_OVRE)>>5);
   81f8e:	4b78      	ldr	r3, [pc, #480]	; (82170 <UART_Handler+0x1f4>)
   81f90:	6818      	ldr	r0, [r3, #0]
   81f92:	4b76      	ldr	r3, [pc, #472]	; (8216c <UART_Handler+0x1f0>)
   81f94:	695b      	ldr	r3, [r3, #20]
   81f96:	11db      	asrs	r3, r3, #7
   81f98:	f003 0201 	and.w	r2, r3, #1
   81f9c:	4b73      	ldr	r3, [pc, #460]	; (8216c <UART_Handler+0x1f0>)
   81f9e:	695b      	ldr	r3, [r3, #20]
   81fa0:	119b      	asrs	r3, r3, #6
   81fa2:	f003 0101 	and.w	r1, r3, #1
   81fa6:	4b71      	ldr	r3, [pc, #452]	; (8216c <UART_Handler+0x1f0>)
   81fa8:	695b      	ldr	r3, [r3, #20]
   81faa:	115b      	asrs	r3, r3, #5
   81fac:	f003 0301 	and.w	r3, r3, #1
   81fb0:	9300      	str	r3, [sp, #0]
   81fb2:	460b      	mov	r3, r1
   81fb4:	496f      	ldr	r1, [pc, #444]	; (82174 <UART_Handler+0x1f8>)
   81fb6:	f003 fb63 	bl	85680 <sprintf>
   81fba:	6178      	str	r0, [r7, #20]
        lcd_string[i] = ' ';
   81fbc:	4b6c      	ldr	r3, [pc, #432]	; (82170 <UART_Handler+0x1f4>)
   81fbe:	681a      	ldr	r2, [r3, #0]
   81fc0:	697b      	ldr	r3, [r7, #20]
   81fc2:	4413      	add	r3, r2
   81fc4:	2220      	movs	r2, #32
   81fc6:	701a      	strb	r2, [r3, #0]
        lcd_driver();
   81fc8:	f7fe fde8 	bl	80b9c <lcd_driver>
        uart_reset_status(UART);
   81fcc:	4867      	ldr	r0, [pc, #412]	; (8216c <UART_Handler+0x1f0>)
   81fce:	f000 ffbe 	bl	82f4e <uart_reset_status>
        while(1){
            button_ok = get_button_press();
   81fd2:	f7ff fd75 	bl	81ac0 <get_button_press>
   81fd6:	6138      	str	r0, [r7, #16]
            if(button_ok & 1<<3){
   81fd8:	693b      	ldr	r3, [r7, #16]
   81fda:	f003 0308 	and.w	r3, r3, #8
   81fde:	2b00      	cmp	r3, #0
   81fe0:	d0f7      	beq.n	81fd2 <UART_Handler+0x56>
                i = sprintf(lcd_string,"                               ");
   81fe2:	4b63      	ldr	r3, [pc, #396]	; (82170 <UART_Handler+0x1f4>)
   81fe4:	681b      	ldr	r3, [r3, #0]
   81fe6:	4a64      	ldr	r2, [pc, #400]	; (82178 <UART_Handler+0x1fc>)
   81fe8:	461c      	mov	r4, r3
   81fea:	4615      	mov	r5, r2
   81fec:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   81fee:	6020      	str	r0, [r4, #0]
   81ff0:	6061      	str	r1, [r4, #4]
   81ff2:	60a2      	str	r2, [r4, #8]
   81ff4:	60e3      	str	r3, [r4, #12]
   81ff6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   81ff8:	6120      	str	r0, [r4, #16]
   81ffa:	6161      	str	r1, [r4, #20]
   81ffc:	61a2      	str	r2, [r4, #24]
   81ffe:	61e3      	str	r3, [r4, #28]
   82000:	231f      	movs	r3, #31
   82002:	617b      	str	r3, [r7, #20]
                lcd_string[i] = ' ';
   82004:	4b5a      	ldr	r3, [pc, #360]	; (82170 <UART_Handler+0x1f4>)
   82006:	681a      	ldr	r2, [r3, #0]
   82008:	697b      	ldr	r3, [r7, #20]
   8200a:	4413      	add	r3, r2
   8200c:	2220      	movs	r2, #32
   8200e:	701a      	strb	r2, [r3, #0]
                break;
   82010:	e00c      	b.n	8202c <UART_Handler+0xb0>
         }
        }
    }
    else{
        uart_read(UART, &uart_data);
   82012:	f107 030f 	add.w	r3, r7, #15
   82016:	4619      	mov	r1, r3
   82018:	4854      	ldr	r0, [pc, #336]	; (8216c <UART_Handler+0x1f0>)
   8201a:	f000 ffbc 	bl	82f96 <uart_read>
        fifo_write(&keys_fifo,&uart_data,1);
   8201e:	f107 030f 	add.w	r3, r7, #15
   82022:	2201      	movs	r2, #1
   82024:	4619      	mov	r1, r3
   82026:	4855      	ldr	r0, [pc, #340]	; (8217c <UART_Handler+0x200>)
   82028:	f000 f8f6 	bl	82218 <fifo_write>
    }

    i = fifo_look(&keys_fifo,check);
   8202c:	1d3b      	adds	r3, r7, #4
   8202e:	4619      	mov	r1, r3
   82030:	4852      	ldr	r0, [pc, #328]	; (8217c <UART_Handler+0x200>)
   82032:	f000 f949 	bl	822c8 <fifo_look>
   82036:	4603      	mov	r3, r0
   82038:	617b      	str	r3, [r7, #20]

    switch(check[i-1]){
   8203a:	697b      	ldr	r3, [r7, #20]
   8203c:	3b01      	subs	r3, #1
   8203e:	f107 0218 	add.w	r2, r7, #24
   82042:	4413      	add	r3, r2
   82044:	f813 3c14 	ldrb.w	r3, [r3, #-20]
   82048:	3b31      	subs	r3, #49	; 0x31
   8204a:	2b03      	cmp	r3, #3
   8204c:	f200 8088 	bhi.w	82160 <UART_Handler+0x1e4>
   82050:	a201      	add	r2, pc, #4	; (adr r2, 82058 <UART_Handler+0xdc>)
   82052:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   82056:	bf00      	nop
   82058:	00082069 	.word	0x00082069
   8205c:	000820a7 	.word	0x000820a7
   82060:	000820e5 	.word	0x000820e5
   82064:	00082123 	.word	0x00082123
        case '1':
            change(task_list0,&task_ura);
   82068:	4945      	ldr	r1, [pc, #276]	; (82180 <UART_Handler+0x204>)
   8206a:	4846      	ldr	r0, [pc, #280]	; (82184 <UART_Handler+0x208>)
   8206c:	f7ff faa4 	bl	815b8 <change>
            sprintf(lcd_string,"                                ");
   82070:	4b3f      	ldr	r3, [pc, #252]	; (82170 <UART_Handler+0x1f4>)
   82072:	681b      	ldr	r3, [r3, #0]
   82074:	4a44      	ldr	r2, [pc, #272]	; (82188 <UART_Handler+0x20c>)
   82076:	4614      	mov	r4, r2
   82078:	469c      	mov	ip, r3
   8207a:	f104 0e20 	add.w	lr, r4, #32
   8207e:	4665      	mov	r5, ip
   82080:	4626      	mov	r6, r4
   82082:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
   82084:	6028      	str	r0, [r5, #0]
   82086:	6069      	str	r1, [r5, #4]
   82088:	60aa      	str	r2, [r5, #8]
   8208a:	60eb      	str	r3, [r5, #12]
   8208c:	3410      	adds	r4, #16
   8208e:	f10c 0c10 	add.w	ip, ip, #16
   82092:	4574      	cmp	r4, lr
   82094:	d1f3      	bne.n	8207e <UART_Handler+0x102>
   82096:	4663      	mov	r3, ip
   82098:	4622      	mov	r2, r4
   8209a:	7812      	ldrb	r2, [r2, #0]
   8209c:	701a      	strb	r2, [r3, #0]
            sysclk_disable_peripheral_clock(ID_TC0);
   8209e:	201b      	movs	r0, #27
   820a0:	f7ff ff27 	bl	81ef2 <sysclk_disable_peripheral_clock>
            break;
   820a4:	e05d      	b.n	82162 <UART_Handler+0x1e6>
        case '2':
            change(task_list1,0);
   820a6:	2100      	movs	r1, #0
   820a8:	4838      	ldr	r0, [pc, #224]	; (8218c <UART_Handler+0x210>)
   820aa:	f7ff fa85 	bl	815b8 <change>
            sprintf(lcd_string,"                                ");
   820ae:	4b30      	ldr	r3, [pc, #192]	; (82170 <UART_Handler+0x1f4>)
   820b0:	681b      	ldr	r3, [r3, #0]
   820b2:	4a35      	ldr	r2, [pc, #212]	; (82188 <UART_Handler+0x20c>)
   820b4:	4614      	mov	r4, r2
   820b6:	469c      	mov	ip, r3
   820b8:	f104 0e20 	add.w	lr, r4, #32
   820bc:	4665      	mov	r5, ip
   820be:	4626      	mov	r6, r4
   820c0:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
   820c2:	6028      	str	r0, [r5, #0]
   820c4:	6069      	str	r1, [r5, #4]
   820c6:	60aa      	str	r2, [r5, #8]
   820c8:	60eb      	str	r3, [r5, #12]
   820ca:	3410      	adds	r4, #16
   820cc:	f10c 0c10 	add.w	ip, ip, #16
   820d0:	4574      	cmp	r4, lr
   820d2:	d1f3      	bne.n	820bc <UART_Handler+0x140>
   820d4:	4663      	mov	r3, ip
   820d6:	4622      	mov	r2, r4
   820d8:	7812      	ldrb	r2, [r2, #0]
   820da:	701a      	strb	r2, [r3, #0]
            sysclk_enable_peripheral_clock(ID_TC0);
   820dc:	201b      	movs	r0, #27
   820de:	f7ff fefd 	bl	81edc <sysclk_enable_peripheral_clock>
            break;
   820e2:	e03e      	b.n	82162 <UART_Handler+0x1e6>
        case '3':
            change(task_list2,&task_led2);
   820e4:	492a      	ldr	r1, [pc, #168]	; (82190 <UART_Handler+0x214>)
   820e6:	482b      	ldr	r0, [pc, #172]	; (82194 <UART_Handler+0x218>)
   820e8:	f7ff fa66 	bl	815b8 <change>
            sprintf(lcd_string,"                                ");
   820ec:	4b20      	ldr	r3, [pc, #128]	; (82170 <UART_Handler+0x1f4>)
   820ee:	681b      	ldr	r3, [r3, #0]
   820f0:	4a25      	ldr	r2, [pc, #148]	; (82188 <UART_Handler+0x20c>)
   820f2:	4614      	mov	r4, r2
   820f4:	469c      	mov	ip, r3
   820f6:	f104 0e20 	add.w	lr, r4, #32
   820fa:	4665      	mov	r5, ip
   820fc:	4626      	mov	r6, r4
   820fe:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
   82100:	6028      	str	r0, [r5, #0]
   82102:	6069      	str	r1, [r5, #4]
   82104:	60aa      	str	r2, [r5, #8]
   82106:	60eb      	str	r3, [r5, #12]
   82108:	3410      	adds	r4, #16
   8210a:	f10c 0c10 	add.w	ip, ip, #16
   8210e:	4574      	cmp	r4, lr
   82110:	d1f3      	bne.n	820fa <UART_Handler+0x17e>
   82112:	4663      	mov	r3, ip
   82114:	4622      	mov	r2, r4
   82116:	7812      	ldrb	r2, [r2, #0]
   82118:	701a      	strb	r2, [r3, #0]
            sysclk_disable_peripheral_clock(ID_TC0);
   8211a:	201b      	movs	r0, #27
   8211c:	f7ff fee9 	bl	81ef2 <sysclk_disable_peripheral_clock>
            break;
   82120:	e01f      	b.n	82162 <UART_Handler+0x1e6>
        case '4':
            change(task_list3,0);
   82122:	2100      	movs	r1, #0
   82124:	481c      	ldr	r0, [pc, #112]	; (82198 <UART_Handler+0x21c>)
   82126:	f7ff fa47 	bl	815b8 <change>
            sprintf(lcd_string,"                                ");
   8212a:	4b11      	ldr	r3, [pc, #68]	; (82170 <UART_Handler+0x1f4>)
   8212c:	681b      	ldr	r3, [r3, #0]
   8212e:	4a16      	ldr	r2, [pc, #88]	; (82188 <UART_Handler+0x20c>)
   82130:	4614      	mov	r4, r2
   82132:	469c      	mov	ip, r3
   82134:	f104 0e20 	add.w	lr, r4, #32
   82138:	4665      	mov	r5, ip
   8213a:	4626      	mov	r6, r4
   8213c:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
   8213e:	6028      	str	r0, [r5, #0]
   82140:	6069      	str	r1, [r5, #4]
   82142:	60aa      	str	r2, [r5, #8]
   82144:	60eb      	str	r3, [r5, #12]
   82146:	3410      	adds	r4, #16
   82148:	f10c 0c10 	add.w	ip, ip, #16
   8214c:	4574      	cmp	r4, lr
   8214e:	d1f3      	bne.n	82138 <UART_Handler+0x1bc>
   82150:	4663      	mov	r3, ip
   82152:	4622      	mov	r2, r4
   82154:	7812      	ldrb	r2, [r2, #0]
   82156:	701a      	strb	r2, [r3, #0]
            sysclk_disable_peripheral_clock(ID_TC0);
   82158:	201b      	movs	r0, #27
   8215a:	f7ff feca 	bl	81ef2 <sysclk_disable_peripheral_clock>
            break;
   8215e:	e000      	b.n	82162 <UART_Handler+0x1e6>
        default :
            break;
   82160:	bf00      	nop

    }

}
   82162:	bf00      	nop
   82164:	371c      	adds	r7, #28
   82166:	46bd      	mov	sp, r7
   82168:	bdf0      	pop	{r4, r5, r6, r7, pc}
   8216a:	bf00      	nop
   8216c:	400e0800 	.word	0x400e0800
   82170:	200701bc 	.word	0x200701bc
   82174:	00089f24 	.word	0x00089f24
   82178:	00089f48 	.word	0x00089f48
   8217c:	200703e4 	.word	0x200703e4
   82180:	200701e8 	.word	0x200701e8
   82184:	20070390 	.word	0x20070390
   82188:	00089f68 	.word	0x00089f68
   8218c:	200703a8 	.word	0x200703a8
   82190:	2007031c 	.word	0x2007031c
   82194:	200703bc 	.word	0x200703bc
   82198:	200703d0 	.word	0x200703d0

0008219c <fifo_read>:



/*****************FUNKCIJE*******************************************/

uint16_t fifo_read (fifo_t *fifo, uint8_t *write_addr, uint16_t n){
   8219c:	b480      	push	{r7}
   8219e:	b087      	sub	sp, #28
   821a0:	af00      	add	r7, sp, #0
   821a2:	60f8      	str	r0, [r7, #12]
   821a4:	60b9      	str	r1, [r7, #8]
   821a6:	4613      	mov	r3, r2
   821a8:	80fb      	strh	r3, [r7, #6]
    uint16_t i;

    for(i = 0; (i<n && fifo->read_idx != fifo->write_idx); i++){
   821aa:	2300      	movs	r3, #0
   821ac:	82fb      	strh	r3, [r7, #22]
   821ae:	e020      	b.n	821f2 <fifo_read+0x56>

        write_addr[i] = fifo->buff[fifo->read_idx];
   821b0:	68fb      	ldr	r3, [r7, #12]
   821b2:	689b      	ldr	r3, [r3, #8]
   821b4:	68fa      	ldr	r2, [r7, #12]
   821b6:	8852      	ldrh	r2, [r2, #2]
   821b8:	441a      	add	r2, r3
   821ba:	8afb      	ldrh	r3, [r7, #22]
   821bc:	68b9      	ldr	r1, [r7, #8]
   821be:	440b      	add	r3, r1
   821c0:	7812      	ldrb	r2, [r2, #0]
   821c2:	701a      	strb	r2, [r3, #0]
        fifo->read_idx++;
   821c4:	68fb      	ldr	r3, [r7, #12]
   821c6:	885b      	ldrh	r3, [r3, #2]
   821c8:	3301      	adds	r3, #1
   821ca:	b29a      	uxth	r2, r3
   821cc:	68fb      	ldr	r3, [r7, #12]
   821ce:	805a      	strh	r2, [r3, #2]
        fifo->read_idx = fifo->read_idx%10;
   821d0:	68fb      	ldr	r3, [r7, #12]
   821d2:	885a      	ldrh	r2, [r3, #2]
   821d4:	4b0f      	ldr	r3, [pc, #60]	; (82214 <fifo_read+0x78>)
   821d6:	fba3 1302 	umull	r1, r3, r3, r2
   821da:	08d9      	lsrs	r1, r3, #3
   821dc:	460b      	mov	r3, r1
   821de:	009b      	lsls	r3, r3, #2
   821e0:	440b      	add	r3, r1
   821e2:	005b      	lsls	r3, r3, #1
   821e4:	1ad3      	subs	r3, r2, r3
   821e6:	b29a      	uxth	r2, r3
   821e8:	68fb      	ldr	r3, [r7, #12]
   821ea:	805a      	strh	r2, [r3, #2]
    for(i = 0; (i<n && fifo->read_idx != fifo->write_idx); i++){
   821ec:	8afb      	ldrh	r3, [r7, #22]
   821ee:	3301      	adds	r3, #1
   821f0:	82fb      	strh	r3, [r7, #22]
   821f2:	8afa      	ldrh	r2, [r7, #22]
   821f4:	88fb      	ldrh	r3, [r7, #6]
   821f6:	429a      	cmp	r2, r3
   821f8:	d205      	bcs.n	82206 <fifo_read+0x6a>
   821fa:	68fb      	ldr	r3, [r7, #12]
   821fc:	885a      	ldrh	r2, [r3, #2]
   821fe:	68fb      	ldr	r3, [r7, #12]
   82200:	881b      	ldrh	r3, [r3, #0]
   82202:	429a      	cmp	r2, r3
   82204:	d1d4      	bne.n	821b0 <fifo_read+0x14>


    }
    return i;
   82206:	8afb      	ldrh	r3, [r7, #22]
}
   82208:	4618      	mov	r0, r3
   8220a:	371c      	adds	r7, #28
   8220c:	46bd      	mov	sp, r7
   8220e:	bc80      	pop	{r7}
   82210:	4770      	bx	lr
   82212:	bf00      	nop
   82214:	cccccccd 	.word	0xcccccccd

00082218 <fifo_write>:

/************************************************************************************************/

uint16_t fifo_write(fifo_t *fifo, const uint8_t *read_addr, uint16_t n){
   82218:	b480      	push	{r7}
   8221a:	b087      	sub	sp, #28
   8221c:	af00      	add	r7, sp, #0
   8221e:	60f8      	str	r0, [r7, #12]
   82220:	60b9      	str	r1, [r7, #8]
   82222:	4613      	mov	r3, r2
   82224:	80fb      	strh	r3, [r7, #6]
    uint16_t i;

    if(fifo->write_protect == 0){
   82226:	68fb      	ldr	r3, [r7, #12]
   82228:	799b      	ldrb	r3, [r3, #6]
   8222a:	2b00      	cmp	r3, #0
   8222c:	d141      	bne.n	822b2 <fifo_write+0x9a>
        fifo->write_protect = 1;
   8222e:	68fb      	ldr	r3, [r7, #12]
   82230:	2201      	movs	r2, #1
   82232:	719a      	strb	r2, [r3, #6]
        for(i = 0; i<n; i++){
   82234:	2300      	movs	r3, #0
   82236:	82fb      	strh	r3, [r7, #22]
   82238:	e032      	b.n	822a0 <fifo_write+0x88>
            if((fifo->write_idx+1)%10 == fifo->read_idx){
   8223a:	68fb      	ldr	r3, [r7, #12]
   8223c:	881b      	ldrh	r3, [r3, #0]
   8223e:	1c59      	adds	r1, r3, #1
   82240:	4b1f      	ldr	r3, [pc, #124]	; (822c0 <fifo_write+0xa8>)
   82242:	fb83 2301 	smull	r2, r3, r3, r1
   82246:	109a      	asrs	r2, r3, #2
   82248:	17cb      	asrs	r3, r1, #31
   8224a:	1ad2      	subs	r2, r2, r3
   8224c:	4613      	mov	r3, r2
   8224e:	009b      	lsls	r3, r3, #2
   82250:	4413      	add	r3, r2
   82252:	005b      	lsls	r3, r3, #1
   82254:	1aca      	subs	r2, r1, r3
   82256:	68fb      	ldr	r3, [r7, #12]
   82258:	885b      	ldrh	r3, [r3, #2]
   8225a:	429a      	cmp	r2, r3
   8225c:	d025      	beq.n	822aa <fifo_write+0x92>
                break;
            }
            else{
                fifo->buff[fifo->write_idx] = read_addr[i] ;
   8225e:	8afb      	ldrh	r3, [r7, #22]
   82260:	68ba      	ldr	r2, [r7, #8]
   82262:	441a      	add	r2, r3
   82264:	68fb      	ldr	r3, [r7, #12]
   82266:	689b      	ldr	r3, [r3, #8]
   82268:	68f9      	ldr	r1, [r7, #12]
   8226a:	8809      	ldrh	r1, [r1, #0]
   8226c:	440b      	add	r3, r1
   8226e:	7812      	ldrb	r2, [r2, #0]
   82270:	701a      	strb	r2, [r3, #0]
                fifo->write_idx++;
   82272:	68fb      	ldr	r3, [r7, #12]
   82274:	881b      	ldrh	r3, [r3, #0]
   82276:	3301      	adds	r3, #1
   82278:	b29a      	uxth	r2, r3
   8227a:	68fb      	ldr	r3, [r7, #12]
   8227c:	801a      	strh	r2, [r3, #0]
                fifo->write_idx = fifo->write_idx%10;
   8227e:	68fb      	ldr	r3, [r7, #12]
   82280:	881a      	ldrh	r2, [r3, #0]
   82282:	4b10      	ldr	r3, [pc, #64]	; (822c4 <fifo_write+0xac>)
   82284:	fba3 1302 	umull	r1, r3, r3, r2
   82288:	08d9      	lsrs	r1, r3, #3
   8228a:	460b      	mov	r3, r1
   8228c:	009b      	lsls	r3, r3, #2
   8228e:	440b      	add	r3, r1
   82290:	005b      	lsls	r3, r3, #1
   82292:	1ad3      	subs	r3, r2, r3
   82294:	b29a      	uxth	r2, r3
   82296:	68fb      	ldr	r3, [r7, #12]
   82298:	801a      	strh	r2, [r3, #0]
        for(i = 0; i<n; i++){
   8229a:	8afb      	ldrh	r3, [r7, #22]
   8229c:	3301      	adds	r3, #1
   8229e:	82fb      	strh	r3, [r7, #22]
   822a0:	8afa      	ldrh	r2, [r7, #22]
   822a2:	88fb      	ldrh	r3, [r7, #6]
   822a4:	429a      	cmp	r2, r3
   822a6:	d3c8      	bcc.n	8223a <fifo_write+0x22>
   822a8:	e000      	b.n	822ac <fifo_write+0x94>
                break;
   822aa:	bf00      	nop

            }

        }
        fifo->write_protect = 0;
   822ac:	68fb      	ldr	r3, [r7, #12]
   822ae:	2200      	movs	r2, #0
   822b0:	719a      	strb	r2, [r3, #6]
    }

    return i;
   822b2:	8afb      	ldrh	r3, [r7, #22]
}
   822b4:	4618      	mov	r0, r3
   822b6:	371c      	adds	r7, #28
   822b8:	46bd      	mov	sp, r7
   822ba:	bc80      	pop	{r7}
   822bc:	4770      	bx	lr
   822be:	bf00      	nop
   822c0:	66666667 	.word	0x66666667
   822c4:	cccccccd 	.word	0xcccccccd

000822c8 <fifo_look>:

/********************************************************************************************************/

uint16_t fifo_look(fifo_t  *fifo, uint8_t *write_addr){
   822c8:	b480      	push	{r7}
   822ca:	b085      	sub	sp, #20
   822cc:	af00      	add	r7, sp, #0
   822ce:	6078      	str	r0, [r7, #4]
   822d0:	6039      	str	r1, [r7, #0]
    uint16_t read, i;
    read = fifo->read_idx;
   822d2:	687b      	ldr	r3, [r7, #4]
   822d4:	885b      	ldrh	r3, [r3, #2]
   822d6:	81fb      	strh	r3, [r7, #14]



    for(i = 0; read != fifo->write_idx; i++){
   822d8:	2300      	movs	r3, #0
   822da:	81bb      	strh	r3, [r7, #12]
   822dc:	e019      	b.n	82312 <fifo_look+0x4a>

        write_addr[i] = fifo->buff[read];
   822de:	687b      	ldr	r3, [r7, #4]
   822e0:	689a      	ldr	r2, [r3, #8]
   822e2:	89fb      	ldrh	r3, [r7, #14]
   822e4:	441a      	add	r2, r3
   822e6:	89bb      	ldrh	r3, [r7, #12]
   822e8:	6839      	ldr	r1, [r7, #0]
   822ea:	440b      	add	r3, r1
   822ec:	7812      	ldrb	r2, [r2, #0]
   822ee:	701a      	strb	r2, [r3, #0]
        read++;
   822f0:	89fb      	ldrh	r3, [r7, #14]
   822f2:	3301      	adds	r3, #1
   822f4:	81fb      	strh	r3, [r7, #14]
        read = read%10;
   822f6:	89fa      	ldrh	r2, [r7, #14]
   822f8:	4b0b      	ldr	r3, [pc, #44]	; (82328 <fifo_look+0x60>)
   822fa:	fba3 1302 	umull	r1, r3, r3, r2
   822fe:	08d9      	lsrs	r1, r3, #3
   82300:	460b      	mov	r3, r1
   82302:	009b      	lsls	r3, r3, #2
   82304:	440b      	add	r3, r1
   82306:	005b      	lsls	r3, r3, #1
   82308:	1ad3      	subs	r3, r2, r3
   8230a:	81fb      	strh	r3, [r7, #14]
    for(i = 0; read != fifo->write_idx; i++){
   8230c:	89bb      	ldrh	r3, [r7, #12]
   8230e:	3301      	adds	r3, #1
   82310:	81bb      	strh	r3, [r7, #12]
   82312:	687b      	ldr	r3, [r7, #4]
   82314:	881b      	ldrh	r3, [r3, #0]
   82316:	89fa      	ldrh	r2, [r7, #14]
   82318:	429a      	cmp	r2, r3
   8231a:	d1e0      	bne.n	822de <fifo_look+0x16>


    }
    return i;
   8231c:	89bb      	ldrh	r3, [r7, #12]
}
   8231e:	4618      	mov	r0, r3
   82320:	3714      	adds	r7, #20
   82322:	46bd      	mov	sp, r7
   82324:	bc80      	pop	{r7}
   82326:	4770      	bx	lr
   82328:	cccccccd 	.word	0xcccccccd

0008232c <SystemCoreClockUpdate>:

	SystemCoreClock = CHIP_FREQ_CPU_MAX;
}

void SystemCoreClockUpdate(void)
{
   8232c:	b480      	push	{r7}
   8232e:	af00      	add	r7, sp, #0
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
   82330:	4b57      	ldr	r3, [pc, #348]	; (82490 <SystemCoreClockUpdate+0x164>)
   82332:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   82334:	f003 0303 	and.w	r3, r3, #3
   82338:	2b03      	cmp	r3, #3
   8233a:	f200 808a 	bhi.w	82452 <SystemCoreClockUpdate+0x126>
   8233e:	a201      	add	r2, pc, #4	; (adr r2, 82344 <SystemCoreClockUpdate+0x18>)
   82340:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   82344:	00082355 	.word	0x00082355
   82348:	00082375 	.word	0x00082375
   8234c:	000823c5 	.word	0x000823c5
   82350:	000823c5 	.word	0x000823c5
	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
   82354:	4b4f      	ldr	r3, [pc, #316]	; (82494 <SystemCoreClockUpdate+0x168>)
   82356:	695b      	ldr	r3, [r3, #20]
   82358:	f003 0380 	and.w	r3, r3, #128	; 0x80
   8235c:	2b00      	cmp	r3, #0
   8235e:	d004      	beq.n	8236a <SystemCoreClockUpdate+0x3e>
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
   82360:	4b4d      	ldr	r3, [pc, #308]	; (82498 <SystemCoreClockUpdate+0x16c>)
   82362:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   82366:	601a      	str	r2, [r3, #0]
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
		}
		break;
   82368:	e073      	b.n	82452 <SystemCoreClockUpdate+0x126>
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
   8236a:	4b4b      	ldr	r3, [pc, #300]	; (82498 <SystemCoreClockUpdate+0x16c>)
   8236c:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
   82370:	601a      	str	r2, [r3, #0]
		break;
   82372:	e06e      	b.n	82452 <SystemCoreClockUpdate+0x126>
	case PMC_MCKR_CSS_MAIN_CLK:	/* Main clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   82374:	4b46      	ldr	r3, [pc, #280]	; (82490 <SystemCoreClockUpdate+0x164>)
   82376:	6a1b      	ldr	r3, [r3, #32]
   82378:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
   8237c:	2b00      	cmp	r3, #0
   8237e:	d003      	beq.n	82388 <SystemCoreClockUpdate+0x5c>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   82380:	4b45      	ldr	r3, [pc, #276]	; (82498 <SystemCoreClockUpdate+0x16c>)
   82382:	4a46      	ldr	r2, [pc, #280]	; (8249c <SystemCoreClockUpdate+0x170>)
   82384:	601a      	str	r2, [r3, #0]
				break;
			default:
				break;
			}
		}
		break;
   82386:	e064      	b.n	82452 <SystemCoreClockUpdate+0x126>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   82388:	4b43      	ldr	r3, [pc, #268]	; (82498 <SystemCoreClockUpdate+0x16c>)
   8238a:	4a45      	ldr	r2, [pc, #276]	; (824a0 <SystemCoreClockUpdate+0x174>)
   8238c:	601a      	str	r2, [r3, #0]
			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   8238e:	4b40      	ldr	r3, [pc, #256]	; (82490 <SystemCoreClockUpdate+0x164>)
   82390:	6a1b      	ldr	r3, [r3, #32]
   82392:	f003 0370 	and.w	r3, r3, #112	; 0x70
   82396:	2b10      	cmp	r3, #16
   82398:	d004      	beq.n	823a4 <SystemCoreClockUpdate+0x78>
   8239a:	2b20      	cmp	r3, #32
   8239c:	d008      	beq.n	823b0 <SystemCoreClockUpdate+0x84>
   8239e:	2b00      	cmp	r3, #0
   823a0:	d00e      	beq.n	823c0 <SystemCoreClockUpdate+0x94>
				break;
   823a2:	e00e      	b.n	823c2 <SystemCoreClockUpdate+0x96>
				SystemCoreClock *= 2U;
   823a4:	4b3c      	ldr	r3, [pc, #240]	; (82498 <SystemCoreClockUpdate+0x16c>)
   823a6:	681b      	ldr	r3, [r3, #0]
   823a8:	005b      	lsls	r3, r3, #1
   823aa:	4a3b      	ldr	r2, [pc, #236]	; (82498 <SystemCoreClockUpdate+0x16c>)
   823ac:	6013      	str	r3, [r2, #0]
				break;
   823ae:	e008      	b.n	823c2 <SystemCoreClockUpdate+0x96>
				SystemCoreClock *= 3U;
   823b0:	4b39      	ldr	r3, [pc, #228]	; (82498 <SystemCoreClockUpdate+0x16c>)
   823b2:	681a      	ldr	r2, [r3, #0]
   823b4:	4613      	mov	r3, r2
   823b6:	005b      	lsls	r3, r3, #1
   823b8:	4413      	add	r3, r2
   823ba:	4a37      	ldr	r2, [pc, #220]	; (82498 <SystemCoreClockUpdate+0x16c>)
   823bc:	6013      	str	r3, [r2, #0]
				break;
   823be:	e000      	b.n	823c2 <SystemCoreClockUpdate+0x96>
				break;
   823c0:	bf00      	nop
		break;
   823c2:	e046      	b.n	82452 <SystemCoreClockUpdate+0x126>
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
	case PMC_MCKR_CSS_UPLL_CLK:	/* UPLL clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   823c4:	4b32      	ldr	r3, [pc, #200]	; (82490 <SystemCoreClockUpdate+0x164>)
   823c6:	6a1b      	ldr	r3, [r3, #32]
   823c8:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
   823cc:	2b00      	cmp	r3, #0
   823ce:	d003      	beq.n	823d8 <SystemCoreClockUpdate+0xac>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   823d0:	4b31      	ldr	r3, [pc, #196]	; (82498 <SystemCoreClockUpdate+0x16c>)
   823d2:	4a32      	ldr	r2, [pc, #200]	; (8249c <SystemCoreClockUpdate+0x170>)
   823d4:	601a      	str	r2, [r3, #0]
   823d6:	e01c      	b.n	82412 <SystemCoreClockUpdate+0xe6>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   823d8:	4b2f      	ldr	r3, [pc, #188]	; (82498 <SystemCoreClockUpdate+0x16c>)
   823da:	4a31      	ldr	r2, [pc, #196]	; (824a0 <SystemCoreClockUpdate+0x174>)
   823dc:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   823de:	4b2c      	ldr	r3, [pc, #176]	; (82490 <SystemCoreClockUpdate+0x164>)
   823e0:	6a1b      	ldr	r3, [r3, #32]
   823e2:	f003 0370 	and.w	r3, r3, #112	; 0x70
   823e6:	2b10      	cmp	r3, #16
   823e8:	d004      	beq.n	823f4 <SystemCoreClockUpdate+0xc8>
   823ea:	2b20      	cmp	r3, #32
   823ec:	d008      	beq.n	82400 <SystemCoreClockUpdate+0xd4>
   823ee:	2b00      	cmp	r3, #0
   823f0:	d00e      	beq.n	82410 <SystemCoreClockUpdate+0xe4>
				break;
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
				break;
			default:
				break;
   823f2:	e00e      	b.n	82412 <SystemCoreClockUpdate+0xe6>
				SystemCoreClock *= 2U;
   823f4:	4b28      	ldr	r3, [pc, #160]	; (82498 <SystemCoreClockUpdate+0x16c>)
   823f6:	681b      	ldr	r3, [r3, #0]
   823f8:	005b      	lsls	r3, r3, #1
   823fa:	4a27      	ldr	r2, [pc, #156]	; (82498 <SystemCoreClockUpdate+0x16c>)
   823fc:	6013      	str	r3, [r2, #0]
				break;
   823fe:	e008      	b.n	82412 <SystemCoreClockUpdate+0xe6>
				SystemCoreClock *= 3U;
   82400:	4b25      	ldr	r3, [pc, #148]	; (82498 <SystemCoreClockUpdate+0x16c>)
   82402:	681a      	ldr	r2, [r3, #0]
   82404:	4613      	mov	r3, r2
   82406:	005b      	lsls	r3, r3, #1
   82408:	4413      	add	r3, r2
   8240a:	4a23      	ldr	r2, [pc, #140]	; (82498 <SystemCoreClockUpdate+0x16c>)
   8240c:	6013      	str	r3, [r2, #0]
				break;
   8240e:	e000      	b.n	82412 <SystemCoreClockUpdate+0xe6>
				break;
   82410:	bf00      	nop
			}
		}
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
   82412:	4b1f      	ldr	r3, [pc, #124]	; (82490 <SystemCoreClockUpdate+0x164>)
   82414:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   82416:	f003 0303 	and.w	r3, r3, #3
   8241a:	2b02      	cmp	r3, #2
   8241c:	d115      	bne.n	8244a <SystemCoreClockUpdate+0x11e>
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   8241e:	4b1c      	ldr	r3, [pc, #112]	; (82490 <SystemCoreClockUpdate+0x164>)
   82420:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   82422:	0c1b      	lsrs	r3, r3, #16
   82424:	f3c3 030a 	ubfx	r3, r3, #0, #11
				                            CKGR_PLLAR_MULA_Pos) + 1U);
   82428:	3301      	adds	r3, #1
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   8242a:	4a1b      	ldr	r2, [pc, #108]	; (82498 <SystemCoreClockUpdate+0x16c>)
   8242c:	6812      	ldr	r2, [r2, #0]
   8242e:	fb02 f303 	mul.w	r3, r2, r3
   82432:	4a19      	ldr	r2, [pc, #100]	; (82498 <SystemCoreClockUpdate+0x16c>)
   82434:	6013      	str	r3, [r2, #0]
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   82436:	4b16      	ldr	r3, [pc, #88]	; (82490 <SystemCoreClockUpdate+0x164>)
   82438:	6a9b      	ldr	r3, [r3, #40]	; 0x28
   8243a:	b2db      	uxtb	r3, r3
   8243c:	4a16      	ldr	r2, [pc, #88]	; (82498 <SystemCoreClockUpdate+0x16c>)
   8243e:	6812      	ldr	r2, [r2, #0]
   82440:	fbb2 f3f3 	udiv	r3, r2, r3
   82444:	4a14      	ldr	r2, [pc, #80]	; (82498 <SystemCoreClockUpdate+0x16c>)
   82446:	6013      	str	r3, [r2, #0]
				                             CKGR_PLLAR_DIVA_Pos));
		} else {
			SystemCoreClock = SYS_UTMIPLL / 2U;
		}
		break;
   82448:	e002      	b.n	82450 <SystemCoreClockUpdate+0x124>
			SystemCoreClock = SYS_UTMIPLL / 2U;
   8244a:	4b13      	ldr	r3, [pc, #76]	; (82498 <SystemCoreClockUpdate+0x16c>)
   8244c:	4a15      	ldr	r2, [pc, #84]	; (824a4 <SystemCoreClockUpdate+0x178>)
   8244e:	601a      	str	r2, [r3, #0]
		break;
   82450:	bf00      	nop
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   82452:	4b0f      	ldr	r3, [pc, #60]	; (82490 <SystemCoreClockUpdate+0x164>)
   82454:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   82456:	f003 0370 	and.w	r3, r3, #112	; 0x70
   8245a:	2b70      	cmp	r3, #112	; 0x70
   8245c:	d108      	bne.n	82470 <SystemCoreClockUpdate+0x144>
		SystemCoreClock /= 3U;
   8245e:	4b0e      	ldr	r3, [pc, #56]	; (82498 <SystemCoreClockUpdate+0x16c>)
   82460:	681b      	ldr	r3, [r3, #0]
   82462:	4a11      	ldr	r2, [pc, #68]	; (824a8 <SystemCoreClockUpdate+0x17c>)
   82464:	fba2 2303 	umull	r2, r3, r2, r3
   82468:	085b      	lsrs	r3, r3, #1
   8246a:	4a0b      	ldr	r2, [pc, #44]	; (82498 <SystemCoreClockUpdate+0x16c>)
   8246c:	6013      	str	r3, [r2, #0]
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
			                          PMC_MCKR_PRES_Pos);
	}
}
   8246e:	e00a      	b.n	82486 <SystemCoreClockUpdate+0x15a>
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
   82470:	4b07      	ldr	r3, [pc, #28]	; (82490 <SystemCoreClockUpdate+0x164>)
   82472:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   82474:	091b      	lsrs	r3, r3, #4
   82476:	f003 0307 	and.w	r3, r3, #7
   8247a:	4a07      	ldr	r2, [pc, #28]	; (82498 <SystemCoreClockUpdate+0x16c>)
   8247c:	6812      	ldr	r2, [r2, #0]
   8247e:	fa22 f303 	lsr.w	r3, r2, r3
   82482:	4a05      	ldr	r2, [pc, #20]	; (82498 <SystemCoreClockUpdate+0x16c>)
   82484:	6013      	str	r3, [r2, #0]
}
   82486:	bf00      	nop
   82488:	46bd      	mov	sp, r7
   8248a:	bc80      	pop	{r7}
   8248c:	4770      	bx	lr
   8248e:	bf00      	nop
   82490:	400e0600 	.word	0x400e0600
   82494:	400e1a10 	.word	0x400e1a10
   82498:	200703f0 	.word	0x200703f0
   8249c:	00b71b00 	.word	0x00b71b00
   824a0:	003d0900 	.word	0x003d0900
   824a4:	0e4e1c00 	.word	0x0e4e1c00
   824a8:	aaaaaaab 	.word	0xaaaaaaab

000824ac <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   824ac:	b480      	push	{r7}
   824ae:	af00      	add	r7, sp, #0
	while (1) {
   824b0:	e7fe      	b.n	824b0 <Dummy_Handler+0x4>
	...

000824b4 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
   824b4:	b580      	push	{r7, lr}
   824b6:	b082      	sub	sp, #8
   824b8:	af00      	add	r7, sp, #0
	uint32_t *pSrc, *pDest;

	/* Initialize the relocate segment */
	pSrc = &_etext;
   824ba:	4b1e      	ldr	r3, [pc, #120]	; (82534 <Reset_Handler+0x80>)
   824bc:	607b      	str	r3, [r7, #4]
	pDest = &_srelocate;
   824be:	4b1e      	ldr	r3, [pc, #120]	; (82538 <Reset_Handler+0x84>)
   824c0:	603b      	str	r3, [r7, #0]

	if (pSrc != pDest) {
   824c2:	687a      	ldr	r2, [r7, #4]
   824c4:	683b      	ldr	r3, [r7, #0]
   824c6:	429a      	cmp	r2, r3
   824c8:	d00c      	beq.n	824e4 <Reset_Handler+0x30>
		for (; pDest < &_erelocate;) {
   824ca:	e007      	b.n	824dc <Reset_Handler+0x28>
			*pDest++ = *pSrc++;
   824cc:	687a      	ldr	r2, [r7, #4]
   824ce:	1d13      	adds	r3, r2, #4
   824d0:	607b      	str	r3, [r7, #4]
   824d2:	683b      	ldr	r3, [r7, #0]
   824d4:	1d19      	adds	r1, r3, #4
   824d6:	6039      	str	r1, [r7, #0]
   824d8:	6812      	ldr	r2, [r2, #0]
   824da:	601a      	str	r2, [r3, #0]
		for (; pDest < &_erelocate;) {
   824dc:	683b      	ldr	r3, [r7, #0]
   824de:	4a17      	ldr	r2, [pc, #92]	; (8253c <Reset_Handler+0x88>)
   824e0:	4293      	cmp	r3, r2
   824e2:	d3f3      	bcc.n	824cc <Reset_Handler+0x18>
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   824e4:	4b16      	ldr	r3, [pc, #88]	; (82540 <Reset_Handler+0x8c>)
   824e6:	603b      	str	r3, [r7, #0]
   824e8:	e004      	b.n	824f4 <Reset_Handler+0x40>
		*pDest++ = 0;
   824ea:	683b      	ldr	r3, [r7, #0]
   824ec:	1d1a      	adds	r2, r3, #4
   824ee:	603a      	str	r2, [r7, #0]
   824f0:	2200      	movs	r2, #0
   824f2:	601a      	str	r2, [r3, #0]
	for (pDest = &_szero; pDest < &_ezero;) {
   824f4:	683b      	ldr	r3, [r7, #0]
   824f6:	4a13      	ldr	r2, [pc, #76]	; (82544 <Reset_Handler+0x90>)
   824f8:	4293      	cmp	r3, r2
   824fa:	d3f6      	bcc.n	824ea <Reset_Handler+0x36>
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
   824fc:	4b12      	ldr	r3, [pc, #72]	; (82548 <Reset_Handler+0x94>)
   824fe:	607b      	str	r3, [r7, #4]
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   82500:	687b      	ldr	r3, [r7, #4]
   82502:	4a12      	ldr	r2, [pc, #72]	; (8254c <Reset_Handler+0x98>)
   82504:	f023 4360 	bic.w	r3, r3, #3758096384	; 0xe0000000
   82508:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   8250c:	6093      	str	r3, [r2, #8]

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < NFC_RAM_ADDR)) {
   8250e:	687b      	ldr	r3, [r7, #4]
   82510:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
   82514:	d309      	bcc.n	8252a <Reset_Handler+0x76>
   82516:	687b      	ldr	r3, [r7, #4]
   82518:	4a0d      	ldr	r2, [pc, #52]	; (82550 <Reset_Handler+0x9c>)
   8251a:	4293      	cmp	r3, r2
   8251c:	d805      	bhi.n	8252a <Reset_Handler+0x76>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   8251e:	4b0b      	ldr	r3, [pc, #44]	; (8254c <Reset_Handler+0x98>)
   82520:	689b      	ldr	r3, [r3, #8]
   82522:	4a0a      	ldr	r2, [pc, #40]	; (8254c <Reset_Handler+0x98>)
   82524:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   82528:	6093      	str	r3, [r2, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   8252a:	f003 f81d 	bl	85568 <__libc_init_array>

	/* Branch to main function */
	main();
   8252e:	f7ff fbfb 	bl	81d28 <main>

	/* Infinite loop */
	while (1);
   82532:	e7fe      	b.n	82532 <Reset_Handler+0x7e>
   82534:	0008a47c 	.word	0x0008a47c
   82538:	20070000 	.word	0x20070000
   8253c:	20070da4 	.word	0x20070da4
   82540:	20070da4 	.word	0x20070da4
   82544:	20070eac 	.word	0x20070eac
   82548:	00080000 	.word	0x00080000
   8254c:	e000ed00 	.word	0xe000ed00
   82550:	200fffff 	.word	0x200fffff

00082554 <osc_enable>:
{
   82554:	b580      	push	{r7, lr}
   82556:	b082      	sub	sp, #8
   82558:	af00      	add	r7, sp, #0
   8255a:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
   8255c:	687b      	ldr	r3, [r7, #4]
   8255e:	2b07      	cmp	r3, #7
   82560:	d831      	bhi.n	825c6 <osc_enable+0x72>
   82562:	a201      	add	r2, pc, #4	; (adr r2, 82568 <osc_enable+0x14>)
   82564:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   82568:	000825c5 	.word	0x000825c5
   8256c:	00082589 	.word	0x00082589
   82570:	00082591 	.word	0x00082591
   82574:	00082599 	.word	0x00082599
   82578:	000825a1 	.word	0x000825a1
   8257c:	000825a9 	.word	0x000825a9
   82580:	000825b1 	.word	0x000825b1
   82584:	000825bb 	.word	0x000825bb
		pmc_switch_sclk_to_32kxtal(PMC_OSC_XTAL);
   82588:	2000      	movs	r0, #0
   8258a:	f000 f9d7 	bl	8293c <pmc_switch_sclk_to_32kxtal>
		break;
   8258e:	e01a      	b.n	825c6 <osc_enable+0x72>
		pmc_switch_sclk_to_32kxtal(PMC_OSC_BYPASS);
   82590:	2001      	movs	r0, #1
   82592:	f000 f9d3 	bl	8293c <pmc_switch_sclk_to_32kxtal>
		break;
   82596:	e016      	b.n	825c6 <osc_enable+0x72>
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_4_MHz);
   82598:	2000      	movs	r0, #0
   8259a:	f000 fa05 	bl	829a8 <pmc_switch_mainck_to_fastrc>
		break;
   8259e:	e012      	b.n	825c6 <osc_enable+0x72>
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_8_MHz);
   825a0:	2010      	movs	r0, #16
   825a2:	f000 fa01 	bl	829a8 <pmc_switch_mainck_to_fastrc>
		break;
   825a6:	e00e      	b.n	825c6 <osc_enable+0x72>
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
   825a8:	2020      	movs	r0, #32
   825aa:	f000 f9fd 	bl	829a8 <pmc_switch_mainck_to_fastrc>
		break;
   825ae:	e00a      	b.n	825c6 <osc_enable+0x72>
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
   825b0:	213e      	movs	r1, #62	; 0x3e
   825b2:	2000      	movs	r0, #0
   825b4:	f000 fa30 	bl	82a18 <pmc_switch_mainck_to_xtal>
		break;
   825b8:	e005      	b.n	825c6 <osc_enable+0x72>
		pmc_switch_mainck_to_xtal(PMC_OSC_BYPASS,
   825ba:	213e      	movs	r1, #62	; 0x3e
   825bc:	2001      	movs	r0, #1
   825be:	f000 fa2b 	bl	82a18 <pmc_switch_mainck_to_xtal>
		break;
   825c2:	e000      	b.n	825c6 <osc_enable+0x72>
		break;
   825c4:	bf00      	nop
}
   825c6:	bf00      	nop
   825c8:	3708      	adds	r7, #8
   825ca:	46bd      	mov	sp, r7
   825cc:	bd80      	pop	{r7, pc}
   825ce:	bf00      	nop

000825d0 <osc_is_ready>:
{
   825d0:	b580      	push	{r7, lr}
   825d2:	b082      	sub	sp, #8
   825d4:	af00      	add	r7, sp, #0
   825d6:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
   825d8:	687b      	ldr	r3, [r7, #4]
   825da:	2b07      	cmp	r3, #7
   825dc:	d826      	bhi.n	8262c <osc_is_ready+0x5c>
   825de:	a201      	add	r2, pc, #4	; (adr r2, 825e4 <osc_is_ready+0x14>)
   825e0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   825e4:	00082605 	.word	0x00082605
   825e8:	00082609 	.word	0x00082609
   825ec:	00082609 	.word	0x00082609
   825f0:	0008261b 	.word	0x0008261b
   825f4:	0008261b 	.word	0x0008261b
   825f8:	0008261b 	.word	0x0008261b
   825fc:	0008261b 	.word	0x0008261b
   82600:	0008261b 	.word	0x0008261b
		return 1;
   82604:	2301      	movs	r3, #1
   82606:	e012      	b.n	8262e <osc_is_ready+0x5e>
		return pmc_osc_is_ready_32kxtal();
   82608:	f000 f9b4 	bl	82974 <pmc_osc_is_ready_32kxtal>
   8260c:	4603      	mov	r3, r0
   8260e:	2b00      	cmp	r3, #0
   82610:	bf14      	ite	ne
   82612:	2301      	movne	r3, #1
   82614:	2300      	moveq	r3, #0
   82616:	b2db      	uxtb	r3, r3
   82618:	e009      	b.n	8262e <osc_is_ready+0x5e>
		return pmc_osc_is_ready_mainck();
   8261a:	f000 fa39 	bl	82a90 <pmc_osc_is_ready_mainck>
   8261e:	4603      	mov	r3, r0
   82620:	2b00      	cmp	r3, #0
   82622:	bf14      	ite	ne
   82624:	2301      	movne	r3, #1
   82626:	2300      	moveq	r3, #0
   82628:	b2db      	uxtb	r3, r3
   8262a:	e000      	b.n	8262e <osc_is_ready+0x5e>
	return 0;
   8262c:	2300      	movs	r3, #0
}
   8262e:	4618      	mov	r0, r3
   82630:	3708      	adds	r7, #8
   82632:	46bd      	mov	sp, r7
   82634:	bd80      	pop	{r7, pc}
   82636:	bf00      	nop

00082638 <osc_get_rate>:
{
   82638:	b480      	push	{r7}
   8263a:	b083      	sub	sp, #12
   8263c:	af00      	add	r7, sp, #0
   8263e:	6078      	str	r0, [r7, #4]
	switch (ul_id) {
   82640:	687b      	ldr	r3, [r7, #4]
   82642:	2b07      	cmp	r3, #7
   82644:	d825      	bhi.n	82692 <osc_get_rate+0x5a>
   82646:	a201      	add	r2, pc, #4	; (adr r2, 8264c <osc_get_rate+0x14>)
   82648:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   8264c:	0008266d 	.word	0x0008266d
   82650:	00082673 	.word	0x00082673
   82654:	00082679 	.word	0x00082679
   82658:	0008267f 	.word	0x0008267f
   8265c:	00082683 	.word	0x00082683
   82660:	00082687 	.word	0x00082687
   82664:	0008268b 	.word	0x0008268b
   82668:	0008268f 	.word	0x0008268f
		return OSC_SLCK_32K_RC_HZ;
   8266c:	f44f 43fa 	mov.w	r3, #32000	; 0x7d00
   82670:	e010      	b.n	82694 <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_XTAL;
   82672:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   82676:	e00d      	b.n	82694 <osc_get_rate+0x5c>
		return BOARD_FREQ_SLCK_BYPASS;
   82678:	f44f 4300 	mov.w	r3, #32768	; 0x8000
   8267c:	e00a      	b.n	82694 <osc_get_rate+0x5c>
		return OSC_MAINCK_4M_RC_HZ;
   8267e:	4b08      	ldr	r3, [pc, #32]	; (826a0 <osc_get_rate+0x68>)
   82680:	e008      	b.n	82694 <osc_get_rate+0x5c>
		return OSC_MAINCK_8M_RC_HZ;
   82682:	4b08      	ldr	r3, [pc, #32]	; (826a4 <osc_get_rate+0x6c>)
   82684:	e006      	b.n	82694 <osc_get_rate+0x5c>
		return OSC_MAINCK_12M_RC_HZ;
   82686:	4b08      	ldr	r3, [pc, #32]	; (826a8 <osc_get_rate+0x70>)
   82688:	e004      	b.n	82694 <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_XTAL;
   8268a:	4b07      	ldr	r3, [pc, #28]	; (826a8 <osc_get_rate+0x70>)
   8268c:	e002      	b.n	82694 <osc_get_rate+0x5c>
		return BOARD_FREQ_MAINCK_BYPASS;
   8268e:	4b06      	ldr	r3, [pc, #24]	; (826a8 <osc_get_rate+0x70>)
   82690:	e000      	b.n	82694 <osc_get_rate+0x5c>
	return 0;
   82692:	2300      	movs	r3, #0
}
   82694:	4618      	mov	r0, r3
   82696:	370c      	adds	r7, #12
   82698:	46bd      	mov	sp, r7
   8269a:	bc80      	pop	{r7}
   8269c:	4770      	bx	lr
   8269e:	bf00      	nop
   826a0:	003d0900 	.word	0x003d0900
   826a4:	007a1200 	.word	0x007a1200
   826a8:	00b71b00 	.word	0x00b71b00

000826ac <osc_wait_ready>:
 * to become stable and ready to use as a clock source.
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
   826ac:	b580      	push	{r7, lr}
   826ae:	b082      	sub	sp, #8
   826b0:	af00      	add	r7, sp, #0
   826b2:	4603      	mov	r3, r0
   826b4:	71fb      	strb	r3, [r7, #7]
	while (!osc_is_ready(id)) {
   826b6:	bf00      	nop
   826b8:	79fb      	ldrb	r3, [r7, #7]
   826ba:	4618      	mov	r0, r3
   826bc:	f7ff ff88 	bl	825d0 <osc_is_ready>
   826c0:	4603      	mov	r3, r0
   826c2:	f083 0301 	eor.w	r3, r3, #1
   826c6:	b2db      	uxtb	r3, r3
   826c8:	2b00      	cmp	r3, #0
   826ca:	d1f5      	bne.n	826b8 <osc_wait_ready+0xc>
		/* Do nothing */
	}
}
   826cc:	bf00      	nop
   826ce:	3708      	adds	r7, #8
   826d0:	46bd      	mov	sp, r7
   826d2:	bd80      	pop	{r7, pc}

000826d4 <pll_config_init>:
 * \note The SAM3X PLL hardware interprets mul as mul+1. For readability the hardware mul+1
 * is hidden in this implementation. Use mul as mul effective value.
 */
static inline void pll_config_init(struct pll_config *p_cfg,
		enum pll_source e_src, uint32_t ul_div, uint32_t ul_mul)
{
   826d4:	b580      	push	{r7, lr}
   826d6:	b086      	sub	sp, #24
   826d8:	af00      	add	r7, sp, #0
   826da:	60f8      	str	r0, [r7, #12]
   826dc:	607a      	str	r2, [r7, #4]
   826de:	603b      	str	r3, [r7, #0]
   826e0:	460b      	mov	r3, r1
   826e2:	72fb      	strb	r3, [r7, #11]
	uint32_t vco_hz;

	Assert(e_src < PLL_NR_SOURCES);

	if (ul_div == 0 && ul_mul == 0) { /* Must only be true for UTMI PLL */
   826e4:	687b      	ldr	r3, [r7, #4]
   826e6:	2b00      	cmp	r3, #0
   826e8:	d107      	bne.n	826fa <pll_config_init+0x26>
   826ea:	683b      	ldr	r3, [r7, #0]
   826ec:	2b00      	cmp	r3, #0
   826ee:	d104      	bne.n	826fa <pll_config_init+0x26>
		p_cfg->ctrl = CKGR_UCKR_UPLLCOUNT(PLL_COUNT);
   826f0:	68fb      	ldr	r3, [r7, #12]
   826f2:	f44f 0270 	mov.w	r2, #15728640	; 0xf00000
   826f6:	601a      	str	r2, [r3, #0]
   826f8:	e019      	b.n	8272e <pll_config_init+0x5a>
	} else { /* PLLA */
		/* Calculate internal VCO frequency */
		vco_hz = osc_get_rate(e_src) / ul_div;
   826fa:	7afb      	ldrb	r3, [r7, #11]
   826fc:	4618      	mov	r0, r3
   826fe:	f7ff ff9b 	bl	82638 <osc_get_rate>
   82702:	4602      	mov	r2, r0
   82704:	687b      	ldr	r3, [r7, #4]
   82706:	fbb2 f3f3 	udiv	r3, r2, r3
   8270a:	617b      	str	r3, [r7, #20]
		Assert(vco_hz >= PLL_INPUT_MIN_HZ);
		Assert(vco_hz <= PLL_INPUT_MAX_HZ);

		vco_hz *= ul_mul;
   8270c:	697b      	ldr	r3, [r7, #20]
   8270e:	683a      	ldr	r2, [r7, #0]
   82710:	fb02 f303 	mul.w	r3, r2, r3
   82714:	617b      	str	r3, [r7, #20]
		Assert(vco_hz >= PLL_OUTPUT_MIN_HZ);
		Assert(vco_hz <= PLL_OUTPUT_MAX_HZ);

		/* PMC hardware will automatically make it mul+1 */
		p_cfg->ctrl = CKGR_PLLAR_MULA(ul_mul - 1) | CKGR_PLLAR_DIVA(ul_div) | CKGR_PLLAR_PLLACOUNT(PLL_COUNT);
   82716:	683b      	ldr	r3, [r7, #0]
   82718:	3b01      	subs	r3, #1
   8271a:	041a      	lsls	r2, r3, #16
   8271c:	4b06      	ldr	r3, [pc, #24]	; (82738 <pll_config_init+0x64>)
   8271e:	4013      	ands	r3, r2
   82720:	687a      	ldr	r2, [r7, #4]
   82722:	b2d2      	uxtb	r2, r2
   82724:	4313      	orrs	r3, r2
   82726:	f443 527c 	orr.w	r2, r3, #16128	; 0x3f00
   8272a:	68fb      	ldr	r3, [r7, #12]
   8272c:	601a      	str	r2, [r3, #0]
	}
}
   8272e:	bf00      	nop
   82730:	3718      	adds	r7, #24
   82732:	46bd      	mov	sp, r7
   82734:	bd80      	pop	{r7, pc}
   82736:	bf00      	nop
   82738:	07ff0000 	.word	0x07ff0000

0008273c <pll_enable>:
		PMC->CKGR_UCKR = p_cfg->ctrl;
	}
}

static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
   8273c:	b580      	push	{r7, lr}
   8273e:	b082      	sub	sp, #8
   82740:	af00      	add	r7, sp, #0
   82742:	6078      	str	r0, [r7, #4]
   82744:	6039      	str	r1, [r7, #0]
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
   82746:	683b      	ldr	r3, [r7, #0]
   82748:	2b00      	cmp	r3, #0
   8274a:	d108      	bne.n	8275e <pll_enable+0x22>
		pmc_disable_pllack(); // Always stop PLL first!
   8274c:	f000 f9ac 	bl	82aa8 <pmc_disable_pllack>
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
   82750:	687b      	ldr	r3, [r7, #4]
   82752:	681b      	ldr	r3, [r3, #0]
   82754:	4a07      	ldr	r2, [pc, #28]	; (82774 <pll_enable+0x38>)
   82756:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
   8275a:	6293      	str	r3, [r2, #40]	; 0x28
	} else {
		PMC->CKGR_UCKR = p_cfg->ctrl | CKGR_UCKR_UPLLEN;
	}
}
   8275c:	e005      	b.n	8276a <pll_enable+0x2e>
		PMC->CKGR_UCKR = p_cfg->ctrl | CKGR_UCKR_UPLLEN;
   8275e:	687b      	ldr	r3, [r7, #4]
   82760:	681b      	ldr	r3, [r3, #0]
   82762:	4a04      	ldr	r2, [pc, #16]	; (82774 <pll_enable+0x38>)
   82764:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   82768:	61d3      	str	r3, [r2, #28]
}
   8276a:	bf00      	nop
   8276c:	3708      	adds	r7, #8
   8276e:	46bd      	mov	sp, r7
   82770:	bd80      	pop	{r7, pc}
   82772:	bf00      	nop
   82774:	400e0600 	.word	0x400e0600

00082778 <pll_is_locked>:
		PMC->CKGR_UCKR &= ~CKGR_UCKR_UPLLEN;
	}
}

static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
   82778:	b580      	push	{r7, lr}
   8277a:	b082      	sub	sp, #8
   8277c:	af00      	add	r7, sp, #0
   8277e:	6078      	str	r0, [r7, #4]
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
   82780:	687b      	ldr	r3, [r7, #4]
   82782:	2b00      	cmp	r3, #0
   82784:	d103      	bne.n	8278e <pll_is_locked+0x16>
		return pmc_is_locked_pllack();
   82786:	f000 f99b 	bl	82ac0 <pmc_is_locked_pllack>
   8278a:	4603      	mov	r3, r0
   8278c:	e002      	b.n	82794 <pll_is_locked+0x1c>
	} else {
		return pmc_is_locked_upll();
   8278e:	f000 f9a3 	bl	82ad8 <pmc_is_locked_upll>
   82792:	4603      	mov	r3, r0
	}
}
   82794:	4618      	mov	r0, r3
   82796:	3708      	adds	r7, #8
   82798:	46bd      	mov	sp, r7
   8279a:	bd80      	pop	{r7, pc}

0008279c <pll_enable_source>:

static inline void pll_enable_source(enum pll_source e_src)
{
   8279c:	b580      	push	{r7, lr}
   8279e:	b082      	sub	sp, #8
   827a0:	af00      	add	r7, sp, #0
   827a2:	4603      	mov	r3, r0
   827a4:	71fb      	strb	r3, [r7, #7]
	switch (e_src) {
   827a6:	79fb      	ldrb	r3, [r7, #7]
   827a8:	3b03      	subs	r3, #3
   827aa:	2b04      	cmp	r3, #4
   827ac:	d808      	bhi.n	827c0 <pll_enable_source+0x24>
	case PLL_SRC_MAINCK_4M_RC:
	case PLL_SRC_MAINCK_8M_RC:
	case PLL_SRC_MAINCK_12M_RC:
	case PLL_SRC_MAINCK_XTAL:
	case PLL_SRC_MAINCK_BYPASS:
		osc_enable(e_src);
   827ae:	79fb      	ldrb	r3, [r7, #7]
   827b0:	4618      	mov	r0, r3
   827b2:	f7ff fecf 	bl	82554 <osc_enable>
		osc_wait_ready(e_src);
   827b6:	79fb      	ldrb	r3, [r7, #7]
   827b8:	4618      	mov	r0, r3
   827ba:	f7ff ff77 	bl	826ac <osc_wait_ready>
		break;
   827be:	e000      	b.n	827c2 <pll_enable_source+0x26>

	default:
		Assert(false);
		break;
   827c0:	bf00      	nop
	}
}
   827c2:	bf00      	nop
   827c4:	3708      	adds	r7, #8
   827c6:	46bd      	mov	sp, r7
   827c8:	bd80      	pop	{r7, pc}

000827ca <pll_wait_for_lock>:
 *
 * \retval STATUS_OK The PLL is now locked.
 * \retval ERR_TIMEOUT Timed out waiting for PLL to become locked.
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
   827ca:	b580      	push	{r7, lr}
   827cc:	b082      	sub	sp, #8
   827ce:	af00      	add	r7, sp, #0
   827d0:	6078      	str	r0, [r7, #4]
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
   827d2:	bf00      	nop
   827d4:	6878      	ldr	r0, [r7, #4]
   827d6:	f7ff ffcf 	bl	82778 <pll_is_locked>
   827da:	4603      	mov	r3, r0
   827dc:	2b00      	cmp	r3, #0
   827de:	d0f9      	beq.n	827d4 <pll_wait_for_lock+0xa>
		/* Do nothing */
	}

	return 0;
   827e0:	2300      	movs	r3, #0
}
   827e2:	4618      	mov	r0, r3
   827e4:	3708      	adds	r7, #8
   827e6:	46bd      	mov	sp, r7
   827e8:	bd80      	pop	{r7, pc}

000827ea <sysclk_get_main_hz>:
{
   827ea:	b580      	push	{r7, lr}
   827ec:	af00      	add	r7, sp, #0
		return pll_get_default_rate(0);
   827ee:	2006      	movs	r0, #6
   827f0:	f7ff ff22 	bl	82638 <osc_get_rate>
   827f4:	4602      	mov	r2, r0
   827f6:	4613      	mov	r3, r2
   827f8:	00db      	lsls	r3, r3, #3
   827fa:	1a9b      	subs	r3, r3, r2
   827fc:	005b      	lsls	r3, r3, #1
}
   827fe:	4618      	mov	r0, r3
   82800:	bd80      	pop	{r7, pc}

00082802 <sysclk_get_cpu_hz>:
{
   82802:	b580      	push	{r7, lr}
   82804:	af00      	add	r7, sp, #0
	return sysclk_get_main_hz() /
   82806:	f7ff fff0 	bl	827ea <sysclk_get_main_hz>
   8280a:	4603      	mov	r3, r0
   8280c:	085b      	lsrs	r3, r3, #1
}
   8280e:	4618      	mov	r0, r3
   82810:	bd80      	pop	{r7, pc}
	...

00082814 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
   82814:	b580      	push	{r7, lr}
   82816:	b082      	sub	sp, #8
   82818:	af00      	add	r7, sp, #0
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
   8281a:	4811      	ldr	r0, [pc, #68]	; (82860 <sysclk_init+0x4c>)
   8281c:	f007 fe24 	bl	8a468 <__system_init_flash_veneer>
		pmc_switch_mck_to_mainck(CONFIG_SYSCLK_PRES);
	}

#ifdef CONFIG_PLL0_SOURCE
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
   82820:	2006      	movs	r0, #6
   82822:	f7ff ffbb 	bl	8279c <pll_enable_source>
		pll_config_defaults(&pllcfg, 0);
   82826:	1d38      	adds	r0, r7, #4
   82828:	230e      	movs	r3, #14
   8282a:	2201      	movs	r2, #1
   8282c:	2106      	movs	r1, #6
   8282e:	f7ff ff51 	bl	826d4 <pll_config_init>
		pll_enable(&pllcfg, 0);
   82832:	1d3b      	adds	r3, r7, #4
   82834:	2100      	movs	r1, #0
   82836:	4618      	mov	r0, r3
   82838:	f7ff ff80 	bl	8273c <pll_enable>
		pll_wait_for_lock(0);
   8283c:	2000      	movs	r0, #0
   8283e:	f7ff ffc4 	bl	827ca <pll_wait_for_lock>
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   82842:	2010      	movs	r0, #16
   82844:	f000 f83a 	bl	828bc <pmc_switch_mck_to_pllack>
		pll_wait_for_lock(1);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
   82848:	f7ff fd70 	bl	8232c <SystemCoreClockUpdate>

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
   8284c:	f7ff ffd9 	bl	82802 <sysclk_get_cpu_hz>
   82850:	4603      	mov	r3, r0
   82852:	4618      	mov	r0, r3
   82854:	f007 fe08 	bl	8a468 <__system_init_flash_veneer>

#if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
	/* Signal that the internal frequencies are setup */
	sysclk_initialized = 1;
#endif
}
   82858:	bf00      	nop
   8285a:	3708      	adds	r7, #8
   8285c:	46bd      	mov	sp, r7
   8285e:	bd80      	pop	{r7, pc}
   82860:	0501bd00 	.word	0x0501bd00

00082864 <_sbrk>:
extern void _exit(int status);
extern void _kill(int pid, int sig);
extern int _getpid(void);

extern caddr_t _sbrk(int incr)
{
   82864:	b480      	push	{r7}
   82866:	b085      	sub	sp, #20
   82868:	af00      	add	r7, sp, #0
   8286a:	6078      	str	r0, [r7, #4]
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;
   8286c:	4b10      	ldr	r3, [pc, #64]	; (828b0 <_sbrk+0x4c>)
   8286e:	60fb      	str	r3, [r7, #12]

	if (heap == NULL) {
   82870:	4b10      	ldr	r3, [pc, #64]	; (828b4 <_sbrk+0x50>)
   82872:	681b      	ldr	r3, [r3, #0]
   82874:	2b00      	cmp	r3, #0
   82876:	d102      	bne.n	8287e <_sbrk+0x1a>
		heap = (unsigned char *)&_end;
   82878:	4b0e      	ldr	r3, [pc, #56]	; (828b4 <_sbrk+0x50>)
   8287a:	4a0f      	ldr	r2, [pc, #60]	; (828b8 <_sbrk+0x54>)
   8287c:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
   8287e:	4b0d      	ldr	r3, [pc, #52]	; (828b4 <_sbrk+0x50>)
   82880:	681b      	ldr	r3, [r3, #0]
   82882:	60bb      	str	r3, [r7, #8]

	if (((int)prev_heap + incr) > ramend) {
   82884:	68ba      	ldr	r2, [r7, #8]
   82886:	687b      	ldr	r3, [r7, #4]
   82888:	4413      	add	r3, r2
   8288a:	68fa      	ldr	r2, [r7, #12]
   8288c:	429a      	cmp	r2, r3
   8288e:	da02      	bge.n	82896 <_sbrk+0x32>
		return (caddr_t) -1;	
   82890:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   82894:	e006      	b.n	828a4 <_sbrk+0x40>
	}

	heap += incr;
   82896:	4b07      	ldr	r3, [pc, #28]	; (828b4 <_sbrk+0x50>)
   82898:	681a      	ldr	r2, [r3, #0]
   8289a:	687b      	ldr	r3, [r7, #4]
   8289c:	4413      	add	r3, r2
   8289e:	4a05      	ldr	r2, [pc, #20]	; (828b4 <_sbrk+0x50>)
   828a0:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap;
   828a2:	68bb      	ldr	r3, [r7, #8]
}
   828a4:	4618      	mov	r0, r3
   828a6:	3714      	adds	r7, #20
   828a8:	46bd      	mov	sp, r7
   828aa:	bc80      	pop	{r7}
   828ac:	4770      	bx	lr
   828ae:	bf00      	nop
   828b0:	20087ffc 	.word	0x20087ffc
   828b4:	20070de0 	.word	0x20070de0
   828b8:	20072eb0 	.word	0x20072eb0

000828bc <pmc_switch_mck_to_pllack>:
 *
 * \retval 0 Success.
 * \retval 1 Timeout error.
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
   828bc:	b480      	push	{r7}
   828be:	b085      	sub	sp, #20
   828c0:	af00      	add	r7, sp, #0
   828c2:	6078      	str	r0, [r7, #4]
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   828c4:	4b1c      	ldr	r3, [pc, #112]	; (82938 <pmc_switch_mck_to_pllack+0x7c>)
   828c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   828c8:	f023 0270 	bic.w	r2, r3, #112	; 0x70
   828cc:	491a      	ldr	r1, [pc, #104]	; (82938 <pmc_switch_mck_to_pllack+0x7c>)
   828ce:	687b      	ldr	r3, [r7, #4]
   828d0:	4313      	orrs	r3, r2
   828d2:	630b      	str	r3, [r1, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   828d4:	f44f 6300 	mov.w	r3, #2048	; 0x800
   828d8:	60fb      	str	r3, [r7, #12]
   828da:	e007      	b.n	828ec <pmc_switch_mck_to_pllack+0x30>
			--ul_timeout) {
		if (ul_timeout == 0) {
   828dc:	68fb      	ldr	r3, [r7, #12]
   828de:	2b00      	cmp	r3, #0
   828e0:	d101      	bne.n	828e6 <pmc_switch_mck_to_pllack+0x2a>
			return 1;
   828e2:	2301      	movs	r3, #1
   828e4:	e023      	b.n	8292e <pmc_switch_mck_to_pllack+0x72>
			--ul_timeout) {
   828e6:	68fb      	ldr	r3, [r7, #12]
   828e8:	3b01      	subs	r3, #1
   828ea:	60fb      	str	r3, [r7, #12]
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   828ec:	4b12      	ldr	r3, [pc, #72]	; (82938 <pmc_switch_mck_to_pllack+0x7c>)
   828ee:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   828f0:	f003 0308 	and.w	r3, r3, #8
   828f4:	2b00      	cmp	r3, #0
   828f6:	d0f1      	beq.n	828dc <pmc_switch_mck_to_pllack+0x20>
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   828f8:	4b0f      	ldr	r3, [pc, #60]	; (82938 <pmc_switch_mck_to_pllack+0x7c>)
   828fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   828fc:	f023 0303 	bic.w	r3, r3, #3
   82900:	4a0d      	ldr	r2, [pc, #52]	; (82938 <pmc_switch_mck_to_pllack+0x7c>)
   82902:	f043 0302 	orr.w	r3, r3, #2
   82906:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   82908:	f44f 6300 	mov.w	r3, #2048	; 0x800
   8290c:	60fb      	str	r3, [r7, #12]
   8290e:	e007      	b.n	82920 <pmc_switch_mck_to_pllack+0x64>
			--ul_timeout) {
		if (ul_timeout == 0) {
   82910:	68fb      	ldr	r3, [r7, #12]
   82912:	2b00      	cmp	r3, #0
   82914:	d101      	bne.n	8291a <pmc_switch_mck_to_pllack+0x5e>
			return 1;
   82916:	2301      	movs	r3, #1
   82918:	e009      	b.n	8292e <pmc_switch_mck_to_pllack+0x72>
			--ul_timeout) {
   8291a:	68fb      	ldr	r3, [r7, #12]
   8291c:	3b01      	subs	r3, #1
   8291e:	60fb      	str	r3, [r7, #12]
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   82920:	4b05      	ldr	r3, [pc, #20]	; (82938 <pmc_switch_mck_to_pllack+0x7c>)
   82922:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   82924:	f003 0308 	and.w	r3, r3, #8
   82928:	2b00      	cmp	r3, #0
   8292a:	d0f1      	beq.n	82910 <pmc_switch_mck_to_pllack+0x54>
		}
	}

	return 0;
   8292c:	2300      	movs	r3, #0
}
   8292e:	4618      	mov	r0, r3
   82930:	3714      	adds	r7, #20
   82932:	46bd      	mov	sp, r7
   82934:	bc80      	pop	{r7}
   82936:	4770      	bx	lr
   82938:	400e0600 	.word	0x400e0600

0008293c <pmc_switch_sclk_to_32kxtal>:
 *       VDDIO power supply.
 *
 * \param ul_bypass 0 for Xtal, 1 for bypass.
 */
void pmc_switch_sclk_to_32kxtal(uint32_t ul_bypass)
{
   8293c:	b480      	push	{r7}
   8293e:	b083      	sub	sp, #12
   82940:	af00      	add	r7, sp, #0
   82942:	6078      	str	r0, [r7, #4]
	/* Set Bypass mode if required */
	if (ul_bypass == 1) {
   82944:	687b      	ldr	r3, [r7, #4]
   82946:	2b01      	cmp	r3, #1
   82948:	d107      	bne.n	8295a <pmc_switch_sclk_to_32kxtal+0x1e>
		SUPC->SUPC_MR |= SUPC_MR_KEY_PASSWD |
   8294a:	4b08      	ldr	r3, [pc, #32]	; (8296c <pmc_switch_sclk_to_32kxtal+0x30>)
   8294c:	689b      	ldr	r3, [r3, #8]
   8294e:	4a07      	ldr	r2, [pc, #28]	; (8296c <pmc_switch_sclk_to_32kxtal+0x30>)
   82950:	f043 4325 	orr.w	r3, r3, #2768240640	; 0xa5000000
   82954:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   82958:	6093      	str	r3, [r2, #8]
			SUPC_MR_OSCBYPASS;
	}

	SUPC->SUPC_CR = SUPC_CR_KEY_PASSWD | SUPC_CR_XTALSEL;
   8295a:	4b04      	ldr	r3, [pc, #16]	; (8296c <pmc_switch_sclk_to_32kxtal+0x30>)
   8295c:	4a04      	ldr	r2, [pc, #16]	; (82970 <pmc_switch_sclk_to_32kxtal+0x34>)
   8295e:	601a      	str	r2, [r3, #0]
}
   82960:	bf00      	nop
   82962:	370c      	adds	r7, #12
   82964:	46bd      	mov	sp, r7
   82966:	bc80      	pop	{r7}
   82968:	4770      	bx	lr
   8296a:	bf00      	nop
   8296c:	400e1a10 	.word	0x400e1a10
   82970:	a5000008 	.word	0xa5000008

00082974 <pmc_osc_is_ready_32kxtal>:
 *
 * \retval 1 External 32k Xtal is ready.
 * \retval 0 External 32k Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_32kxtal(void)
{
   82974:	b480      	push	{r7}
   82976:	af00      	add	r7, sp, #0
	return ((SUPC->SUPC_SR & SUPC_SR_OSCSEL)
   82978:	4b09      	ldr	r3, [pc, #36]	; (829a0 <pmc_osc_is_ready_32kxtal+0x2c>)
   8297a:	695b      	ldr	r3, [r3, #20]
   8297c:	f003 0380 	and.w	r3, r3, #128	; 0x80
			&& (PMC->PMC_SR & PMC_SR_OSCSELS));
   82980:	2b00      	cmp	r3, #0
   82982:	d007      	beq.n	82994 <pmc_osc_is_ready_32kxtal+0x20>
   82984:	4b07      	ldr	r3, [pc, #28]	; (829a4 <pmc_osc_is_ready_32kxtal+0x30>)
   82986:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   82988:	f003 0380 	and.w	r3, r3, #128	; 0x80
   8298c:	2b00      	cmp	r3, #0
   8298e:	d001      	beq.n	82994 <pmc_osc_is_ready_32kxtal+0x20>
   82990:	2301      	movs	r3, #1
   82992:	e000      	b.n	82996 <pmc_osc_is_ready_32kxtal+0x22>
   82994:	2300      	movs	r3, #0
}
   82996:	4618      	mov	r0, r3
   82998:	46bd      	mov	sp, r7
   8299a:	bc80      	pop	{r7}
   8299c:	4770      	bx	lr
   8299e:	bf00      	nop
   829a0:	400e1a10 	.word	0x400e1a10
   829a4:	400e0600 	.word	0x400e0600

000829a8 <pmc_switch_mainck_to_fastrc>:
 * \retval 0 Success.
 * \retval 1 Timeout error.
 * \retval 2 Invalid frequency.
 */
void pmc_switch_mainck_to_fastrc(uint32_t ul_moscrcf)
{
   829a8:	b480      	push	{r7}
   829aa:	b083      	sub	sp, #12
   829ac:	af00      	add	r7, sp, #0
   829ae:	6078      	str	r0, [r7, #4]
	/* Enable Fast RC oscillator but DO NOT switch to RC now */
	PMC->CKGR_MOR |= (CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCRCEN);
   829b0:	4b18      	ldr	r3, [pc, #96]	; (82a14 <pmc_switch_mainck_to_fastrc+0x6c>)
   829b2:	6a1b      	ldr	r3, [r3, #32]
   829b4:	4a17      	ldr	r2, [pc, #92]	; (82a14 <pmc_switch_mainck_to_fastrc+0x6c>)
   829b6:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   829ba:	f043 0308 	orr.w	r3, r3, #8
   829be:	6213      	str	r3, [r2, #32]

	/* Wait the Fast RC to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
   829c0:	bf00      	nop
   829c2:	4b14      	ldr	r3, [pc, #80]	; (82a14 <pmc_switch_mainck_to_fastrc+0x6c>)
   829c4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   829c6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
   829ca:	2b00      	cmp	r3, #0
   829cc:	d0f9      	beq.n	829c2 <pmc_switch_mainck_to_fastrc+0x1a>

	/* Change Fast RC oscillator frequency */
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCF_Msk) |
   829ce:	4b11      	ldr	r3, [pc, #68]	; (82a14 <pmc_switch_mainck_to_fastrc+0x6c>)
   829d0:	6a1b      	ldr	r3, [r3, #32]
   829d2:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   829d6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
			CKGR_MOR_KEY_PASSWD | ul_moscrcf;
   829da:	687a      	ldr	r2, [r7, #4]
   829dc:	4313      	orrs	r3, r2
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCF_Msk) |
   829de:	4a0d      	ldr	r2, [pc, #52]	; (82a14 <pmc_switch_mainck_to_fastrc+0x6c>)
			CKGR_MOR_KEY_PASSWD | ul_moscrcf;
   829e0:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCF_Msk) |
   829e4:	6213      	str	r3, [r2, #32]

	/* Wait the Fast RC to stabilize */
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
   829e6:	bf00      	nop
   829e8:	4b0a      	ldr	r3, [pc, #40]	; (82a14 <pmc_switch_mainck_to_fastrc+0x6c>)
   829ea:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   829ec:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
   829f0:	2b00      	cmp	r3, #0
   829f2:	d0f9      	beq.n	829e8 <pmc_switch_mainck_to_fastrc+0x40>

	/* Switch to Fast RC */
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
   829f4:	4b07      	ldr	r3, [pc, #28]	; (82a14 <pmc_switch_mainck_to_fastrc+0x6c>)
   829f6:	6a1b      	ldr	r3, [r3, #32]
   829f8:	f023 739b 	bic.w	r3, r3, #20316160	; 0x1360000
   829fc:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
   82a00:	4a04      	ldr	r2, [pc, #16]	; (82a14 <pmc_switch_mainck_to_fastrc+0x6c>)
   82a02:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   82a06:	6213      	str	r3, [r2, #32]
			CKGR_MOR_KEY_PASSWD;
}
   82a08:	bf00      	nop
   82a0a:	370c      	adds	r7, #12
   82a0c:	46bd      	mov	sp, r7
   82a0e:	bc80      	pop	{r7}
   82a10:	4770      	bx	lr
   82a12:	bf00      	nop
   82a14:	400e0600 	.word	0x400e0600

00082a18 <pmc_switch_mainck_to_xtal>:
 * \retval 0 Success.
 * \retval 1 Timeout error.
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
   82a18:	b480      	push	{r7}
   82a1a:	b083      	sub	sp, #12
   82a1c:	af00      	add	r7, sp, #0
   82a1e:	6078      	str	r0, [r7, #4]
   82a20:	6039      	str	r1, [r7, #0]
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
   82a22:	687b      	ldr	r3, [r7, #4]
   82a24:	2b00      	cmp	r3, #0
   82a26:	d008      	beq.n	82a3a <pmc_switch_mainck_to_xtal+0x22>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   82a28:	4b16      	ldr	r3, [pc, #88]	; (82a84 <pmc_switch_mainck_to_xtal+0x6c>)
   82a2a:	6a1b      	ldr	r3, [r3, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
   82a2c:	4a16      	ldr	r2, [pc, #88]	; (82a88 <pmc_switch_mainck_to_xtal+0x70>)
   82a2e:	401a      	ands	r2, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   82a30:	4914      	ldr	r1, [pc, #80]	; (82a84 <pmc_switch_mainck_to_xtal+0x6c>)
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
   82a32:	4b16      	ldr	r3, [pc, #88]	; (82a8c <pmc_switch_mainck_to_xtal+0x74>)
   82a34:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   82a36:	620b      	str	r3, [r1, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
	}
}
   82a38:	e01e      	b.n	82a78 <pmc_switch_mainck_to_xtal+0x60>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   82a3a:	4b12      	ldr	r3, [pc, #72]	; (82a84 <pmc_switch_mainck_to_xtal+0x6c>)
   82a3c:	6a1b      	ldr	r3, [r3, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   82a3e:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   82a42:	f023 0303 	bic.w	r3, r3, #3
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   82a46:	683a      	ldr	r2, [r7, #0]
   82a48:	0212      	lsls	r2, r2, #8
   82a4a:	b292      	uxth	r2, r2
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   82a4c:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   82a4e:	4a0d      	ldr	r2, [pc, #52]	; (82a84 <pmc_switch_mainck_to_xtal+0x6c>)
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   82a50:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   82a54:	f043 0301 	orr.w	r3, r3, #1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   82a58:	6213      	str	r3, [r2, #32]
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   82a5a:	bf00      	nop
   82a5c:	4b09      	ldr	r3, [pc, #36]	; (82a84 <pmc_switch_mainck_to_xtal+0x6c>)
   82a5e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   82a60:	f003 0301 	and.w	r3, r3, #1
   82a64:	2b00      	cmp	r3, #0
   82a66:	d0f9      	beq.n	82a5c <pmc_switch_mainck_to_xtal+0x44>
		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
   82a68:	4b06      	ldr	r3, [pc, #24]	; (82a84 <pmc_switch_mainck_to_xtal+0x6c>)
   82a6a:	6a1b      	ldr	r3, [r3, #32]
   82a6c:	4a05      	ldr	r2, [pc, #20]	; (82a84 <pmc_switch_mainck_to_xtal+0x6c>)
   82a6e:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
   82a72:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   82a76:	6213      	str	r3, [r2, #32]
}
   82a78:	bf00      	nop
   82a7a:	370c      	adds	r7, #12
   82a7c:	46bd      	mov	sp, r7
   82a7e:	bc80      	pop	{r7}
   82a80:	4770      	bx	lr
   82a82:	bf00      	nop
   82a84:	400e0600 	.word	0x400e0600
   82a88:	fec8fffc 	.word	0xfec8fffc
   82a8c:	01370002 	.word	0x01370002

00082a90 <pmc_osc_is_ready_mainck>:
 *
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
   82a90:	b480      	push	{r7}
   82a92:	af00      	add	r7, sp, #0
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
   82a94:	4b03      	ldr	r3, [pc, #12]	; (82aa4 <pmc_osc_is_ready_mainck+0x14>)
   82a96:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   82a98:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
}
   82a9c:	4618      	mov	r0, r3
   82a9e:	46bd      	mov	sp, r7
   82aa0:	bc80      	pop	{r7}
   82aa2:	4770      	bx	lr
   82aa4:	400e0600 	.word	0x400e0600

00082aa8 <pmc_disable_pllack>:

/**
 * \brief Disable PLLA clock.
 */
void pmc_disable_pllack(void)
{
   82aa8:	b480      	push	{r7}
   82aaa:	af00      	add	r7, sp, #0
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
   82aac:	4b03      	ldr	r3, [pc, #12]	; (82abc <pmc_disable_pllack+0x14>)
   82aae:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   82ab2:	629a      	str	r2, [r3, #40]	; 0x28
#endif
}
   82ab4:	bf00      	nop
   82ab6:	46bd      	mov	sp, r7
   82ab8:	bc80      	pop	{r7}
   82aba:	4770      	bx	lr
   82abc:	400e0600 	.word	0x400e0600

00082ac0 <pmc_is_locked_pllack>:
 *
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
   82ac0:	b480      	push	{r7}
   82ac2:	af00      	add	r7, sp, #0
	return (PMC->PMC_SR & PMC_SR_LOCKA);
   82ac4:	4b03      	ldr	r3, [pc, #12]	; (82ad4 <pmc_is_locked_pllack+0x14>)
   82ac6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   82ac8:	f003 0302 	and.w	r3, r3, #2
}
   82acc:	4618      	mov	r0, r3
   82ace:	46bd      	mov	sp, r7
   82ad0:	bc80      	pop	{r7}
   82ad2:	4770      	bx	lr
   82ad4:	400e0600 	.word	0x400e0600

00082ad8 <pmc_is_locked_upll>:
 *
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_upll(void)
{
   82ad8:	b480      	push	{r7}
   82ada:	af00      	add	r7, sp, #0
	return (PMC->PMC_SR & PMC_SR_LOCKU);
   82adc:	4b03      	ldr	r3, [pc, #12]	; (82aec <pmc_is_locked_upll+0x14>)
   82ade:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   82ae0:	f003 0340 	and.w	r3, r3, #64	; 0x40
}
   82ae4:	4618      	mov	r0, r3
   82ae6:	46bd      	mov	sp, r7
   82ae8:	bc80      	pop	{r7}
   82aea:	4770      	bx	lr
   82aec:	400e0600 	.word	0x400e0600

00082af0 <pmc_enable_periph_clk>:
 *
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
   82af0:	b480      	push	{r7}
   82af2:	b083      	sub	sp, #12
   82af4:	af00      	add	r7, sp, #0
   82af6:	6078      	str	r0, [r7, #4]
	if (ul_id > MAX_PERIPH_ID) {
   82af8:	687b      	ldr	r3, [r7, #4]
   82afa:	2b2c      	cmp	r3, #44	; 0x2c
   82afc:	d901      	bls.n	82b02 <pmc_enable_periph_clk+0x12>
		return 1;
   82afe:	2301      	movs	r3, #1
   82b00:	e02d      	b.n	82b5e <pmc_enable_periph_clk+0x6e>
	}

	if (ul_id < 32) {
   82b02:	687b      	ldr	r3, [r7, #4]
   82b04:	2b1f      	cmp	r3, #31
   82b06:	d812      	bhi.n	82b2e <pmc_enable_periph_clk+0x3e>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   82b08:	4b17      	ldr	r3, [pc, #92]	; (82b68 <pmc_enable_periph_clk+0x78>)
   82b0a:	699a      	ldr	r2, [r3, #24]
   82b0c:	2101      	movs	r1, #1
   82b0e:	687b      	ldr	r3, [r7, #4]
   82b10:	fa01 f303 	lsl.w	r3, r1, r3
   82b14:	401a      	ands	r2, r3
   82b16:	2101      	movs	r1, #1
   82b18:	687b      	ldr	r3, [r7, #4]
   82b1a:	fa01 f303 	lsl.w	r3, r1, r3
   82b1e:	429a      	cmp	r2, r3
   82b20:	d01c      	beq.n	82b5c <pmc_enable_periph_clk+0x6c>
			PMC->PMC_PCER0 = 1 << ul_id;
   82b22:	2201      	movs	r2, #1
   82b24:	687b      	ldr	r3, [r7, #4]
   82b26:	409a      	lsls	r2, r3
   82b28:	4b0f      	ldr	r3, [pc, #60]	; (82b68 <pmc_enable_periph_clk+0x78>)
   82b2a:	611a      	str	r2, [r3, #16]
   82b2c:	e016      	b.n	82b5c <pmc_enable_periph_clk+0x6c>
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAME70 || SAMS70)
	} else {
		ul_id -= 32;
   82b2e:	687b      	ldr	r3, [r7, #4]
   82b30:	3b20      	subs	r3, #32
   82b32:	607b      	str	r3, [r7, #4]
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   82b34:	4b0c      	ldr	r3, [pc, #48]	; (82b68 <pmc_enable_periph_clk+0x78>)
   82b36:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
   82b3a:	2101      	movs	r1, #1
   82b3c:	687b      	ldr	r3, [r7, #4]
   82b3e:	fa01 f303 	lsl.w	r3, r1, r3
   82b42:	401a      	ands	r2, r3
   82b44:	2101      	movs	r1, #1
   82b46:	687b      	ldr	r3, [r7, #4]
   82b48:	fa01 f303 	lsl.w	r3, r1, r3
   82b4c:	429a      	cmp	r2, r3
   82b4e:	d005      	beq.n	82b5c <pmc_enable_periph_clk+0x6c>
			PMC->PMC_PCER1 = 1 << ul_id;
   82b50:	2201      	movs	r2, #1
   82b52:	687b      	ldr	r3, [r7, #4]
   82b54:	409a      	lsls	r2, r3
   82b56:	4b04      	ldr	r3, [pc, #16]	; (82b68 <pmc_enable_periph_clk+0x78>)
   82b58:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
		}
#endif
	}

	return 0;
   82b5c:	2300      	movs	r3, #0
}
   82b5e:	4618      	mov	r0, r3
   82b60:	370c      	adds	r7, #12
   82b62:	46bd      	mov	sp, r7
   82b64:	bc80      	pop	{r7}
   82b66:	4770      	bx	lr
   82b68:	400e0600 	.word	0x400e0600

00082b6c <pmc_disable_periph_clk>:
 *
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_disable_periph_clk(uint32_t ul_id)
{
   82b6c:	b480      	push	{r7}
   82b6e:	b083      	sub	sp, #12
   82b70:	af00      	add	r7, sp, #0
   82b72:	6078      	str	r0, [r7, #4]
	if (ul_id > MAX_PERIPH_ID) {
   82b74:	687b      	ldr	r3, [r7, #4]
   82b76:	2b2c      	cmp	r3, #44	; 0x2c
   82b78:	d901      	bls.n	82b7e <pmc_disable_periph_clk+0x12>
		return 1;
   82b7a:	2301      	movs	r3, #1
   82b7c:	e02d      	b.n	82bda <pmc_disable_periph_clk+0x6e>
	}

	if (ul_id < 32) {
   82b7e:	687b      	ldr	r3, [r7, #4]
   82b80:	2b1f      	cmp	r3, #31
   82b82:	d812      	bhi.n	82baa <pmc_disable_periph_clk+0x3e>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) == (1u << ul_id)) {
   82b84:	4b17      	ldr	r3, [pc, #92]	; (82be4 <pmc_disable_periph_clk+0x78>)
   82b86:	699a      	ldr	r2, [r3, #24]
   82b88:	2101      	movs	r1, #1
   82b8a:	687b      	ldr	r3, [r7, #4]
   82b8c:	fa01 f303 	lsl.w	r3, r1, r3
   82b90:	401a      	ands	r2, r3
   82b92:	2101      	movs	r1, #1
   82b94:	687b      	ldr	r3, [r7, #4]
   82b96:	fa01 f303 	lsl.w	r3, r1, r3
   82b9a:	429a      	cmp	r2, r3
   82b9c:	d11c      	bne.n	82bd8 <pmc_disable_periph_clk+0x6c>
			PMC->PMC_PCDR0 = 1 << ul_id;
   82b9e:	2201      	movs	r2, #1
   82ba0:	687b      	ldr	r3, [r7, #4]
   82ba2:	409a      	lsls	r2, r3
   82ba4:	4b0f      	ldr	r3, [pc, #60]	; (82be4 <pmc_disable_periph_clk+0x78>)
   82ba6:	615a      	str	r2, [r3, #20]
   82ba8:	e016      	b.n	82bd8 <pmc_disable_periph_clk+0x6c>
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 \
		|| SAMV70 || SAME70 || SAMS70)
	} else {
		ul_id -= 32;
   82baa:	687b      	ldr	r3, [r7, #4]
   82bac:	3b20      	subs	r3, #32
   82bae:	607b      	str	r3, [r7, #4]
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) == (1u << ul_id)) {
   82bb0:	4b0c      	ldr	r3, [pc, #48]	; (82be4 <pmc_disable_periph_clk+0x78>)
   82bb2:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
   82bb6:	2101      	movs	r1, #1
   82bb8:	687b      	ldr	r3, [r7, #4]
   82bba:	fa01 f303 	lsl.w	r3, r1, r3
   82bbe:	401a      	ands	r2, r3
   82bc0:	2101      	movs	r1, #1
   82bc2:	687b      	ldr	r3, [r7, #4]
   82bc4:	fa01 f303 	lsl.w	r3, r1, r3
   82bc8:	429a      	cmp	r2, r3
   82bca:	d105      	bne.n	82bd8 <pmc_disable_periph_clk+0x6c>
			PMC->PMC_PCDR1 = 1 << ul_id;
   82bcc:	2201      	movs	r2, #1
   82bce:	687b      	ldr	r3, [r7, #4]
   82bd0:	409a      	lsls	r2, r3
   82bd2:	4b04      	ldr	r3, [pc, #16]	; (82be4 <pmc_disable_periph_clk+0x78>)
   82bd4:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
		}
#endif
	}
	return 0;
   82bd8:	2300      	movs	r3, #0
}
   82bda:	4618      	mov	r0, r3
   82bdc:	370c      	adds	r7, #12
   82bde:	46bd      	mov	sp, r7
   82be0:	bc80      	pop	{r7}
   82be2:	4770      	bx	lr
   82be4:	400e0600 	.word	0x400e0600

00082be8 <pio_pull_up>:
 * \param ul_pull_up_enable Indicates if the pin(s) internal pull-up shall be
 * configured.
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
   82be8:	b480      	push	{r7}
   82bea:	b085      	sub	sp, #20
   82bec:	af00      	add	r7, sp, #0
   82bee:	60f8      	str	r0, [r7, #12]
   82bf0:	60b9      	str	r1, [r7, #8]
   82bf2:	607a      	str	r2, [r7, #4]
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   82bf4:	687b      	ldr	r3, [r7, #4]
   82bf6:	2b00      	cmp	r3, #0
   82bf8:	d003      	beq.n	82c02 <pio_pull_up+0x1a>
		p_pio->PIO_PUER = ul_mask;
   82bfa:	68fb      	ldr	r3, [r7, #12]
   82bfc:	68ba      	ldr	r2, [r7, #8]
   82bfe:	665a      	str	r2, [r3, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
	}
}
   82c00:	e002      	b.n	82c08 <pio_pull_up+0x20>
		p_pio->PIO_PUDR = ul_mask;
   82c02:	68fb      	ldr	r3, [r7, #12]
   82c04:	68ba      	ldr	r2, [r7, #8]
   82c06:	661a      	str	r2, [r3, #96]	; 0x60
}
   82c08:	bf00      	nop
   82c0a:	3714      	adds	r7, #20
   82c0c:	46bd      	mov	sp, r7
   82c0e:	bc80      	pop	{r7}
   82c10:	4770      	bx	lr

00082c12 <pio_set_peripheral>:
 * \param ul_type PIO type.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set_peripheral(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask)
{
   82c12:	b480      	push	{r7}
   82c14:	b087      	sub	sp, #28
   82c16:	af00      	add	r7, sp, #0
   82c18:	60f8      	str	r0, [r7, #12]
   82c1a:	60b9      	str	r1, [r7, #8]
   82c1c:	607a      	str	r2, [r7, #4]
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
   82c1e:	68fb      	ldr	r3, [r7, #12]
   82c20:	687a      	ldr	r2, [r7, #4]
   82c22:	645a      	str	r2, [r3, #68]	; 0x44
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
	}
#elif (SAM3XA|| SAM3U)
	switch (ul_type) {
   82c24:	68bb      	ldr	r3, [r7, #8]
   82c26:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   82c2a:	d01f      	beq.n	82c6c <pio_set_peripheral+0x5a>
   82c2c:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
   82c30:	d805      	bhi.n	82c3e <pio_set_peripheral+0x2c>
   82c32:	2b00      	cmp	r3, #0
   82c34:	d027      	beq.n	82c86 <pio_set_peripheral+0x74>
   82c36:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
   82c3a:	d00a      	beq.n	82c52 <pio_set_peripheral+0x40>
   82c3c:	e01f      	b.n	82c7e <pio_set_peripheral+0x6c>
   82c3e:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
   82c42:	d020      	beq.n	82c86 <pio_set_peripheral+0x74>
   82c44:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
   82c48:	d01d      	beq.n	82c86 <pio_set_peripheral+0x74>
   82c4a:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
   82c4e:	d01a      	beq.n	82c86 <pio_set_peripheral+0x74>
   82c50:	e015      	b.n	82c7e <pio_set_peripheral+0x6c>
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABSR;
   82c52:	68fb      	ldr	r3, [r7, #12]
   82c54:	6f1b      	ldr	r3, [r3, #112]	; 0x70
   82c56:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   82c58:	68fb      	ldr	r3, [r7, #12]
   82c5a:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   82c5c:	687b      	ldr	r3, [r7, #4]
   82c5e:	43d9      	mvns	r1, r3
   82c60:	697b      	ldr	r3, [r7, #20]
   82c62:	400b      	ands	r3, r1
   82c64:	401a      	ands	r2, r3
   82c66:	68fb      	ldr	r3, [r7, #12]
   82c68:	671a      	str	r2, [r3, #112]	; 0x70
		break;
   82c6a:	e008      	b.n	82c7e <pio_set_peripheral+0x6c>

	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABSR;
   82c6c:	68fb      	ldr	r3, [r7, #12]
   82c6e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
   82c70:	617b      	str	r3, [r7, #20]
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   82c72:	687a      	ldr	r2, [r7, #4]
   82c74:	697b      	ldr	r3, [r7, #20]
   82c76:	431a      	orrs	r2, r3
   82c78:	68fb      	ldr	r3, [r7, #12]
   82c7a:	671a      	str	r2, [r3, #112]	; 0x70
		break;
   82c7c:	bf00      	nop
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
   82c7e:	68fb      	ldr	r3, [r7, #12]
   82c80:	687a      	ldr	r2, [r7, #4]
   82c82:	605a      	str	r2, [r3, #4]
   82c84:	e000      	b.n	82c88 <pio_set_peripheral+0x76>
		return;
   82c86:	bf00      	nop
}
   82c88:	371c      	adds	r7, #28
   82c8a:	46bd      	mov	sp, r7
   82c8c:	bc80      	pop	{r7}
   82c8e:	4770      	bx	lr

00082c90 <adc_init>:
 *
 * \return 0 on success.
 */
uint32_t adc_init(Adc *p_adc, const uint32_t ul_mck,
		const uint32_t ul_adc_clock, const enum adc_startup_time startup)
{
   82c90:	b480      	push	{r7}
   82c92:	b087      	sub	sp, #28
   82c94:	af00      	add	r7, sp, #0
   82c96:	60f8      	str	r0, [r7, #12]
   82c98:	60b9      	str	r1, [r7, #8]
   82c9a:	607a      	str	r2, [r7, #4]
   82c9c:	603b      	str	r3, [r7, #0]
	uint32_t ul_prescal;

	/*  Reset the controller. */
	p_adc->ADC_CR = ADC_CR_SWRST;
   82c9e:	68fb      	ldr	r3, [r7, #12]
   82ca0:	2201      	movs	r2, #1
   82ca2:	601a      	str	r2, [r3, #0]

	/* Reset Mode Register. */
	p_adc->ADC_MR = 0;
   82ca4:	68fb      	ldr	r3, [r7, #12]
   82ca6:	2200      	movs	r2, #0
   82ca8:	605a      	str	r2, [r3, #4]

	/* Reset PDC transfer. */
	p_adc->ADC_PTCR = (ADC_PTCR_RXTDIS | ADC_PTCR_TXTDIS);
   82caa:	68fb      	ldr	r3, [r7, #12]
   82cac:	f240 2202 	movw	r2, #514	; 0x202
   82cb0:	f8c3 2120 	str.w	r2, [r3, #288]	; 0x120
	p_adc->ADC_RCR = 0;
   82cb4:	68fb      	ldr	r3, [r7, #12]
   82cb6:	2200      	movs	r2, #0
   82cb8:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
	p_adc->ADC_RNCR = 0;
   82cbc:	68fb      	ldr	r3, [r7, #12]
   82cbe:	2200      	movs	r2, #0
   82cc0:	f8c3 2114 	str.w	r2, [r3, #276]	; 0x114

	ul_prescal = ul_mck / (2 * ul_adc_clock) - 1;
   82cc4:	687b      	ldr	r3, [r7, #4]
   82cc6:	005b      	lsls	r3, r3, #1
   82cc8:	68ba      	ldr	r2, [r7, #8]
   82cca:	fbb2 f3f3 	udiv	r3, r2, r3
   82cce:	3b01      	subs	r3, #1
   82cd0:	617b      	str	r3, [r7, #20]
	p_adc->ADC_MR |= ADC_MR_PRESCAL(ul_prescal) | startup;
   82cd2:	68fb      	ldr	r3, [r7, #12]
   82cd4:	685a      	ldr	r2, [r3, #4]
   82cd6:	697b      	ldr	r3, [r7, #20]
   82cd8:	021b      	lsls	r3, r3, #8
   82cda:	b299      	uxth	r1, r3
   82cdc:	683b      	ldr	r3, [r7, #0]
   82cde:	430b      	orrs	r3, r1
   82ce0:	431a      	orrs	r2, r3
   82ce2:	68fb      	ldr	r3, [r7, #12]
   82ce4:	605a      	str	r2, [r3, #4]
	return 0;
   82ce6:	2300      	movs	r3, #0
}
   82ce8:	4618      	mov	r0, r3
   82cea:	371c      	adds	r7, #28
   82cec:	46bd      	mov	sp, r7
   82cee:	bc80      	pop	{r7}
   82cf0:	4770      	bx	lr

00082cf2 <adc_set_resolution>:
 * \param p_adc Pointer to an ADC instance.
 * \param resolution ADC resolution.
 *
 */
void adc_set_resolution(Adc *p_adc, const enum adc_resolution_t resolution)
{
   82cf2:	b480      	push	{r7}
   82cf4:	b083      	sub	sp, #12
   82cf6:	af00      	add	r7, sp, #0
   82cf8:	6078      	str	r0, [r7, #4]
   82cfa:	460b      	mov	r3, r1
   82cfc:	70fb      	strb	r3, [r7, #3]
		p_adc->ADC_MR &= ~ADC_MR_LOWRES;
		p_adc->ADC_EMR |= resolution;
		break;
	}
#else
	p_adc->ADC_MR &= ~ADC_MR_LOWRES;
   82cfe:	687b      	ldr	r3, [r7, #4]
   82d00:	685b      	ldr	r3, [r3, #4]
   82d02:	f023 0210 	bic.w	r2, r3, #16
   82d06:	687b      	ldr	r3, [r7, #4]
   82d08:	605a      	str	r2, [r3, #4]
	p_adc->ADC_MR |= resolution;
   82d0a:	687b      	ldr	r3, [r7, #4]
   82d0c:	685a      	ldr	r2, [r3, #4]
   82d0e:	78fb      	ldrb	r3, [r7, #3]
   82d10:	431a      	orrs	r2, r3
   82d12:	687b      	ldr	r3, [r7, #4]
   82d14:	605a      	str	r2, [r3, #4]
#endif
}
   82d16:	bf00      	nop
   82d18:	370c      	adds	r7, #12
   82d1a:	46bd      	mov	sp, r7
   82d1c:	bc80      	pop	{r7}
   82d1e:	4770      	bx	lr

00082d20 <adc_configure_trigger>:
 * ADC_MR_FREERUN_OFF disables freerun mode.
 *
 */
void adc_configure_trigger(Adc *p_adc, const enum adc_trigger_t trigger,
		uint8_t uc_freerun)
{
   82d20:	b480      	push	{r7}
   82d22:	b083      	sub	sp, #12
   82d24:	af00      	add	r7, sp, #0
   82d26:	6078      	str	r0, [r7, #4]
   82d28:	460b      	mov	r3, r1
   82d2a:	70fb      	strb	r3, [r7, #3]
   82d2c:	4613      	mov	r3, r2
   82d2e:	70bb      	strb	r3, [r7, #2]
	p_adc->ADC_MR |= trigger | ((uc_freerun << 7) & ADC_MR_FREERUN);
   82d30:	687b      	ldr	r3, [r7, #4]
   82d32:	685a      	ldr	r2, [r3, #4]
   82d34:	78f9      	ldrb	r1, [r7, #3]
   82d36:	78bb      	ldrb	r3, [r7, #2]
   82d38:	01db      	lsls	r3, r3, #7
   82d3a:	b2db      	uxtb	r3, r3
   82d3c:	430b      	orrs	r3, r1
   82d3e:	431a      	orrs	r2, r3
   82d40:	687b      	ldr	r3, [r7, #4]
   82d42:	605a      	str	r2, [r3, #4]
}
   82d44:	bf00      	nop
   82d46:	370c      	adds	r7, #12
   82d48:	46bd      	mov	sp, r7
   82d4a:	bc80      	pop	{r7}
   82d4c:	4770      	bx	lr

00082d4e <adc_configure_timing>:
 * \param uc_settling Analog settling time = (uc_settling + 1) / ADC clock.
 * \param uc_transfer Data transfer time = (uc_transfer * 2 + 3) / ADC clock.
 */
void adc_configure_timing(Adc *p_adc, const uint8_t uc_tracking,
		const enum adc_settling_time_t settling,const uint8_t uc_transfer)
{
   82d4e:	b480      	push	{r7}
   82d50:	b085      	sub	sp, #20
   82d52:	af00      	add	r7, sp, #0
   82d54:	60f8      	str	r0, [r7, #12]
   82d56:	607a      	str	r2, [r7, #4]
   82d58:	461a      	mov	r2, r3
   82d5a:	460b      	mov	r3, r1
   82d5c:	72fb      	strb	r3, [r7, #11]
   82d5e:	4613      	mov	r3, r2
   82d60:	72bb      	strb	r3, [r7, #10]
	p_adc->ADC_MR |= ADC_MR_TRANSFER(uc_transfer)
   82d62:	68fb      	ldr	r3, [r7, #12]
   82d64:	685a      	ldr	r2, [r3, #4]
   82d66:	7abb      	ldrb	r3, [r7, #10]
   82d68:	071b      	lsls	r3, r3, #28
   82d6a:	f003 5140 	and.w	r1, r3, #805306368	; 0x30000000
			| settling | ADC_MR_TRACKTIM(uc_tracking);
   82d6e:	687b      	ldr	r3, [r7, #4]
   82d70:	4319      	orrs	r1, r3
   82d72:	7afb      	ldrb	r3, [r7, #11]
   82d74:	061b      	lsls	r3, r3, #24
   82d76:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
   82d7a:	430b      	orrs	r3, r1
	p_adc->ADC_MR |= ADC_MR_TRANSFER(uc_transfer)
   82d7c:	431a      	orrs	r2, r3
   82d7e:	68fb      	ldr	r3, [r7, #12]
   82d80:	605a      	str	r2, [r3, #4]
}
   82d82:	bf00      	nop
   82d84:	3714      	adds	r7, #20
   82d86:	46bd      	mov	sp, r7
   82d88:	bc80      	pop	{r7}
   82d8a:	4770      	bx	lr

00082d8c <adc_start>:
 *
 * \param p_adc Pointer to an ADC instance.
 */

void adc_start(Adc *p_adc)
{
   82d8c:	b480      	push	{r7}
   82d8e:	b083      	sub	sp, #12
   82d90:	af00      	add	r7, sp, #0
   82d92:	6078      	str	r0, [r7, #4]
	p_adc->ADC_CR = ADC_CR_START;
   82d94:	687b      	ldr	r3, [r7, #4]
   82d96:	2202      	movs	r2, #2
   82d98:	601a      	str	r2, [r3, #0]
}
   82d9a:	bf00      	nop
   82d9c:	370c      	adds	r7, #12
   82d9e:	46bd      	mov	sp, r7
   82da0:	bc80      	pop	{r7}
   82da2:	4770      	bx	lr

00082da4 <adc_enable_channel>:
 *
 * \param p_adc Pointer to an ADC instance.
 * \param adc_ch ADC channel number.
 */
void adc_enable_channel(Adc *p_adc, const enum adc_channel_num_t adc_ch)
{
   82da4:	b480      	push	{r7}
   82da6:	b083      	sub	sp, #12
   82da8:	af00      	add	r7, sp, #0
   82daa:	6078      	str	r0, [r7, #4]
   82dac:	460b      	mov	r3, r1
   82dae:	70fb      	strb	r3, [r7, #3]
	p_adc->ADC_CHER = 1 << adc_ch;
   82db0:	78fb      	ldrb	r3, [r7, #3]
   82db2:	2201      	movs	r2, #1
   82db4:	fa02 f303 	lsl.w	r3, r2, r3
   82db8:	461a      	mov	r2, r3
   82dba:	687b      	ldr	r3, [r7, #4]
   82dbc:	611a      	str	r2, [r3, #16]
}
   82dbe:	bf00      	nop
   82dc0:	370c      	adds	r7, #12
   82dc2:	46bd      	mov	sp, r7
   82dc4:	bc80      	pop	{r7}
   82dc6:	4770      	bx	lr

00082dc8 <adc_get_channel_value>:
 * \param adc_ch ADC channel number.
 *
 * \return ADC value of the specified channel.
 */
uint32_t adc_get_channel_value(const Adc *p_adc, const enum adc_channel_num_t adc_ch)
{
   82dc8:	b480      	push	{r7}
   82dca:	b085      	sub	sp, #20
   82dcc:	af00      	add	r7, sp, #0
   82dce:	6078      	str	r0, [r7, #4]
   82dd0:	460b      	mov	r3, r1
   82dd2:	70fb      	strb	r3, [r7, #3]
	uint32_t ul_data = 0;
   82dd4:	2300      	movs	r3, #0
   82dd6:	60fb      	str	r3, [r7, #12]

	if (15 >= adc_ch) {
   82dd8:	78fb      	ldrb	r3, [r7, #3]
   82dda:	2b0f      	cmp	r3, #15
   82ddc:	d807      	bhi.n	82dee <adc_get_channel_value+0x26>
		ul_data = *(p_adc->ADC_CDR + adc_ch);
   82dde:	687b      	ldr	r3, [r7, #4]
   82de0:	f103 0250 	add.w	r2, r3, #80	; 0x50
   82de4:	78fb      	ldrb	r3, [r7, #3]
   82de6:	009b      	lsls	r3, r3, #2
   82de8:	4413      	add	r3, r2
   82dea:	681b      	ldr	r3, [r3, #0]
   82dec:	60fb      	str	r3, [r7, #12]
	}

	return ul_data;
   82dee:	68fb      	ldr	r3, [r7, #12]
}
   82df0:	4618      	mov	r0, r3
   82df2:	3714      	adds	r7, #20
   82df4:	46bd      	mov	sp, r7
   82df6:	bc80      	pop	{r7}
   82df8:	4770      	bx	lr

00082dfa <adc_get_status>:
 * \param p_adc Pointer to an ADC instance.
 *
 * \return ADC status structure.
 */
uint32_t adc_get_status(const Adc *p_adc)
{
   82dfa:	b480      	push	{r7}
   82dfc:	b083      	sub	sp, #12
   82dfe:	af00      	add	r7, sp, #0
   82e00:	6078      	str	r0, [r7, #4]
	return p_adc->ADC_ISR;
   82e02:	687b      	ldr	r3, [r7, #4]
   82e04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
}
   82e06:	4618      	mov	r0, r3
   82e08:	370c      	adds	r7, #12
   82e0a:	46bd      	mov	sp, r7
   82e0c:	bc80      	pop	{r7}
   82e0e:	4770      	bx	lr

00082e10 <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
   82e10:	b480      	push	{r7}
   82e12:	b087      	sub	sp, #28
   82e14:	af00      	add	r7, sp, #0
   82e16:	60f8      	str	r0, [r7, #12]
   82e18:	60b9      	str	r1, [r7, #8]
   82e1a:	607a      	str	r2, [r7, #4]

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   82e1c:	68fa      	ldr	r2, [r7, #12]
   82e1e:	68bb      	ldr	r3, [r7, #8]
   82e20:	019b      	lsls	r3, r3, #6
   82e22:	4413      	add	r3, r2
   82e24:	617b      	str	r3, [r7, #20]

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
   82e26:	697b      	ldr	r3, [r7, #20]
   82e28:	2202      	movs	r2, #2
   82e2a:	601a      	str	r2, [r3, #0]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
   82e2c:	697b      	ldr	r3, [r7, #20]
   82e2e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   82e32:	629a      	str	r2, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
   82e34:	697b      	ldr	r3, [r7, #20]
   82e36:	6a1b      	ldr	r3, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
   82e38:	697b      	ldr	r3, [r7, #20]
   82e3a:	687a      	ldr	r2, [r7, #4]
   82e3c:	605a      	str	r2, [r3, #4]
}
   82e3e:	bf00      	nop
   82e40:	371c      	adds	r7, #28
   82e42:	46bd      	mov	sp, r7
   82e44:	bc80      	pop	{r7}
   82e46:	4770      	bx	lr

00082e48 <tc_start>:
 * \param[in] ul_channel Channel to configure
 */
void tc_start(
		Tc *p_tc,
		uint32_t ul_channel)
{
   82e48:	b480      	push	{r7}
   82e4a:	b083      	sub	sp, #12
   82e4c:	af00      	add	r7, sp, #0
   82e4e:	6078      	str	r0, [r7, #4]
   82e50:	6039      	str	r1, [r7, #0]
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
   82e52:	687a      	ldr	r2, [r7, #4]
   82e54:	683b      	ldr	r3, [r7, #0]
   82e56:	019b      	lsls	r3, r3, #6
   82e58:	4413      	add	r3, r2
   82e5a:	2205      	movs	r2, #5
   82e5c:	601a      	str	r2, [r3, #0]
}
   82e5e:	bf00      	nop
   82e60:	370c      	adds	r7, #12
   82e62:	46bd      	mov	sp, r7
   82e64:	bc80      	pop	{r7}
   82e66:	4770      	bx	lr

00082e68 <tc_write_rc>:
 */
void tc_write_rc(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_value)
{
   82e68:	b480      	push	{r7}
   82e6a:	b085      	sub	sp, #20
   82e6c:	af00      	add	r7, sp, #0
   82e6e:	60f8      	str	r0, [r7, #12]
   82e70:	60b9      	str	r1, [r7, #8]
   82e72:	607a      	str	r2, [r7, #4]
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
   82e74:	68fa      	ldr	r2, [r7, #12]
   82e76:	68bb      	ldr	r3, [r7, #8]
   82e78:	019b      	lsls	r3, r3, #6
   82e7a:	4413      	add	r3, r2
   82e7c:	331c      	adds	r3, #28
   82e7e:	687a      	ldr	r2, [r7, #4]
   82e80:	601a      	str	r2, [r3, #0]
}
   82e82:	bf00      	nop
   82e84:	3714      	adds	r7, #20
   82e86:	46bd      	mov	sp, r7
   82e88:	bc80      	pop	{r7}
   82e8a:	4770      	bx	lr

00082e8c <tc_enable_interrupt>:
 */
void tc_enable_interrupt(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_sources)
{
   82e8c:	b480      	push	{r7}
   82e8e:	b087      	sub	sp, #28
   82e90:	af00      	add	r7, sp, #0
   82e92:	60f8      	str	r0, [r7, #12]
   82e94:	60b9      	str	r1, [r7, #8]
   82e96:	607a      	str	r2, [r7, #4]

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   82e98:	68fa      	ldr	r2, [r7, #12]
   82e9a:	68bb      	ldr	r3, [r7, #8]
   82e9c:	019b      	lsls	r3, r3, #6
   82e9e:	4413      	add	r3, r2
   82ea0:	617b      	str	r3, [r7, #20]
	tc_channel->TC_IER = ul_sources;
   82ea2:	697b      	ldr	r3, [r7, #20]
   82ea4:	687a      	ldr	r2, [r7, #4]
   82ea6:	625a      	str	r2, [r3, #36]	; 0x24
}
   82ea8:	bf00      	nop
   82eaa:	371c      	adds	r7, #28
   82eac:	46bd      	mov	sp, r7
   82eae:	bc80      	pop	{r7}
   82eb0:	4770      	bx	lr

00082eb2 <tc_get_status>:
 * \return The current TC status.
 */
uint32_t tc_get_status(
		Tc *p_tc,
		uint32_t ul_channel)
{
   82eb2:	b480      	push	{r7}
   82eb4:	b085      	sub	sp, #20
   82eb6:	af00      	add	r7, sp, #0
   82eb8:	6078      	str	r0, [r7, #4]
   82eba:	6039      	str	r1, [r7, #0]
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
   82ebc:	687a      	ldr	r2, [r7, #4]
   82ebe:	683b      	ldr	r3, [r7, #0]
   82ec0:	019b      	lsls	r3, r3, #6
   82ec2:	4413      	add	r3, r2
   82ec4:	60fb      	str	r3, [r7, #12]
	return tc_channel->TC_SR;
   82ec6:	68fb      	ldr	r3, [r7, #12]
   82ec8:	6a1b      	ldr	r3, [r3, #32]
}
   82eca:	4618      	mov	r0, r3
   82ecc:	3714      	adds	r7, #20
   82ece:	46bd      	mov	sp, r7
   82ed0:	bc80      	pop	{r7}
   82ed2:	4770      	bx	lr

00082ed4 <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
   82ed4:	b480      	push	{r7}
   82ed6:	b085      	sub	sp, #20
   82ed8:	af00      	add	r7, sp, #0
   82eda:	6078      	str	r0, [r7, #4]
   82edc:	6039      	str	r1, [r7, #0]
	uint32_t cd = 0;
   82ede:	2300      	movs	r3, #0
   82ee0:	60fb      	str	r3, [r7, #12]

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
   82ee2:	687b      	ldr	r3, [r7, #4]
   82ee4:	22ac      	movs	r2, #172	; 0xac
   82ee6:	601a      	str	r2, [r3, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
   82ee8:	683b      	ldr	r3, [r7, #0]
   82eea:	681a      	ldr	r2, [r3, #0]
   82eec:	683b      	ldr	r3, [r7, #0]
   82eee:	685b      	ldr	r3, [r3, #4]
   82ef0:	fbb2 f3f3 	udiv	r3, r2, r3
   82ef4:	091b      	lsrs	r3, r3, #4
   82ef6:	60fb      	str	r3, [r7, #12]
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
   82ef8:	68fb      	ldr	r3, [r7, #12]
   82efa:	2b00      	cmp	r3, #0
   82efc:	d003      	beq.n	82f06 <uart_init+0x32>
   82efe:	68fb      	ldr	r3, [r7, #12]
   82f00:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
   82f04:	d301      	bcc.n	82f0a <uart_init+0x36>
		return 1;
   82f06:	2301      	movs	r3, #1
   82f08:	e00f      	b.n	82f2a <uart_init+0x56>

	p_uart->UART_BRGR = cd;
   82f0a:	687b      	ldr	r3, [r7, #4]
   82f0c:	68fa      	ldr	r2, [r7, #12]
   82f0e:	621a      	str	r2, [r3, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
   82f10:	683b      	ldr	r3, [r7, #0]
   82f12:	689a      	ldr	r2, [r3, #8]
   82f14:	687b      	ldr	r3, [r7, #4]
   82f16:	605a      	str	r2, [r3, #4]

#if (!SAMV71 && !SAMV70 && !SAME70 && !SAMS70)
	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
   82f18:	687b      	ldr	r3, [r7, #4]
   82f1a:	f240 2202 	movw	r2, #514	; 0x202
   82f1e:	f8c3 2120 	str.w	r2, [r3, #288]	; 0x120
#endif

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
   82f22:	687b      	ldr	r3, [r7, #4]
   82f24:	2250      	movs	r2, #80	; 0x50
   82f26:	601a      	str	r2, [r3, #0]

	return 0;
   82f28:	2300      	movs	r3, #0
}
   82f2a:	4618      	mov	r0, r3
   82f2c:	3714      	adds	r7, #20
   82f2e:	46bd      	mov	sp, r7
   82f30:	bc80      	pop	{r7}
   82f32:	4770      	bx	lr

00082f34 <uart_enable_interrupt>:
 *
 * \param p_uart Pointer to a UART instance.
 *  \param ul_sources Interrupts to be enabled.
 */
void uart_enable_interrupt(Uart *p_uart, uint32_t ul_sources)
{
   82f34:	b480      	push	{r7}
   82f36:	b083      	sub	sp, #12
   82f38:	af00      	add	r7, sp, #0
   82f3a:	6078      	str	r0, [r7, #4]
   82f3c:	6039      	str	r1, [r7, #0]
	p_uart->UART_IER = ul_sources;
   82f3e:	687b      	ldr	r3, [r7, #4]
   82f40:	683a      	ldr	r2, [r7, #0]
   82f42:	609a      	str	r2, [r3, #8]
}
   82f44:	bf00      	nop
   82f46:	370c      	adds	r7, #12
   82f48:	46bd      	mov	sp, r7
   82f4a:	bc80      	pop	{r7}
   82f4c:	4770      	bx	lr

00082f4e <uart_reset_status>:
 * \brief Reset status bits.
 *
 * \param p_uart Pointer to a UART instance.
 */
void uart_reset_status(Uart *p_uart)
{
   82f4e:	b480      	push	{r7}
   82f50:	b083      	sub	sp, #12
   82f52:	af00      	add	r7, sp, #0
   82f54:	6078      	str	r0, [r7, #4]
	p_uart->UART_CR = UART_CR_RSTSTA;
   82f56:	687b      	ldr	r3, [r7, #4]
   82f58:	f44f 7280 	mov.w	r2, #256	; 0x100
   82f5c:	601a      	str	r2, [r3, #0]
}
   82f5e:	bf00      	nop
   82f60:	370c      	adds	r7, #12
   82f62:	46bd      	mov	sp, r7
   82f64:	bc80      	pop	{r7}
   82f66:	4770      	bx	lr

00082f68 <uart_write>:
 *
 * \retval 0 Success.
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
   82f68:	b480      	push	{r7}
   82f6a:	b083      	sub	sp, #12
   82f6c:	af00      	add	r7, sp, #0
   82f6e:	6078      	str	r0, [r7, #4]
   82f70:	460b      	mov	r3, r1
   82f72:	70fb      	strb	r3, [r7, #3]
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
   82f74:	687b      	ldr	r3, [r7, #4]
   82f76:	695b      	ldr	r3, [r3, #20]
   82f78:	f003 0302 	and.w	r3, r3, #2
   82f7c:	2b00      	cmp	r3, #0
   82f7e:	d101      	bne.n	82f84 <uart_write+0x1c>
		return 1;
   82f80:	2301      	movs	r3, #1
   82f82:	e003      	b.n	82f8c <uart_write+0x24>

	/* Send character */
	p_uart->UART_THR = uc_data;
   82f84:	78fa      	ldrb	r2, [r7, #3]
   82f86:	687b      	ldr	r3, [r7, #4]
   82f88:	61da      	str	r2, [r3, #28]
	return 0;
   82f8a:	2300      	movs	r3, #0
}
   82f8c:	4618      	mov	r0, r3
   82f8e:	370c      	adds	r7, #12
   82f90:	46bd      	mov	sp, r7
   82f92:	bc80      	pop	{r7}
   82f94:	4770      	bx	lr

00082f96 <uart_read>:
 *
 * \retval 0 Success.
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
   82f96:	b480      	push	{r7}
   82f98:	b083      	sub	sp, #12
   82f9a:	af00      	add	r7, sp, #0
   82f9c:	6078      	str	r0, [r7, #4]
   82f9e:	6039      	str	r1, [r7, #0]
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
   82fa0:	687b      	ldr	r3, [r7, #4]
   82fa2:	695b      	ldr	r3, [r3, #20]
   82fa4:	f003 0301 	and.w	r3, r3, #1
   82fa8:	2b00      	cmp	r3, #0
   82faa:	d101      	bne.n	82fb0 <uart_read+0x1a>
		return 1;
   82fac:	2301      	movs	r3, #1
   82fae:	e005      	b.n	82fbc <uart_read+0x26>

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
   82fb0:	687b      	ldr	r3, [r7, #4]
   82fb2:	699b      	ldr	r3, [r3, #24]
   82fb4:	b2da      	uxtb	r2, r3
   82fb6:	683b      	ldr	r3, [r7, #0]
   82fb8:	701a      	strb	r2, [r3, #0]
	return 0;
   82fba:	2300      	movs	r3, #0
}
   82fbc:	4618      	mov	r0, r3
   82fbe:	370c      	adds	r7, #12
   82fc0:	46bd      	mov	sp, r7
   82fc2:	bc80      	pop	{r7}
   82fc4:	4770      	bx	lr

00082fc6 <dacc_reset>:
 * \brief Reset DACC.
 *
 * \param p_dacc Pointer to a DACC instance.
 */
void dacc_reset(Dacc *p_dacc)
{
   82fc6:	b480      	push	{r7}
   82fc8:	b083      	sub	sp, #12
   82fca:	af00      	add	r7, sp, #0
   82fcc:	6078      	str	r0, [r7, #4]
	p_dacc->DACC_CR = DACC_CR_SWRST;
   82fce:	687b      	ldr	r3, [r7, #4]
   82fd0:	2201      	movs	r2, #1
   82fd2:	601a      	str	r2, [r3, #0]
}
   82fd4:	bf00      	nop
   82fd6:	370c      	adds	r7, #12
   82fd8:	46bd      	mov	sp, r7
   82fda:	bc80      	pop	{r7}
   82fdc:	4770      	bx	lr

00082fde <dacc_set_transfer_mode>:
 * \param ul_mode Transfer mode configuration.
 *
 * \return \ref DACC_RC_OK for OK.
 */
uint32_t dacc_set_transfer_mode(Dacc *p_dacc, uint32_t ul_mode)
{
   82fde:	b480      	push	{r7}
   82fe0:	b083      	sub	sp, #12
   82fe2:	af00      	add	r7, sp, #0
   82fe4:	6078      	str	r0, [r7, #4]
   82fe6:	6039      	str	r1, [r7, #0]
	if (ul_mode) {
   82fe8:	683b      	ldr	r3, [r7, #0]
   82fea:	2b00      	cmp	r3, #0
   82fec:	d006      	beq.n	82ffc <dacc_set_transfer_mode+0x1e>
		p_dacc->DACC_MR |= DACC_MR_ONE;
		p_dacc->DACC_MR |= DACC_MR_WORD_WORD;
#elif (SAMV70 || SAMV71 || SAME70 || SAMS70)
		p_dacc->DACC_MR = ul_mode;
#else
		p_dacc->DACC_MR |= DACC_MR_WORD_WORD;
   82fee:	687b      	ldr	r3, [r7, #4]
   82ff0:	685b      	ldr	r3, [r3, #4]
   82ff2:	f043 0210 	orr.w	r2, r3, #16
   82ff6:	687b      	ldr	r3, [r7, #4]
   82ff8:	605a      	str	r2, [r3, #4]
   82ffa:	e005      	b.n	83008 <dacc_set_transfer_mode+0x2a>
		p_dacc->DACC_MR |= DACC_MR_ONE;
		p_dacc->DACC_MR &= (~DACC_MR_WORD_WORD);
#elif (SAMV70 || SAMV71 || SAME70 || SAMS70)
		p_dacc->DACC_MR = ul_mode;
#else
		p_dacc->DACC_MR &= (~DACC_MR_WORD_WORD);
   82ffc:	687b      	ldr	r3, [r7, #4]
   82ffe:	685b      	ldr	r3, [r3, #4]
   83000:	f023 0210 	bic.w	r2, r3, #16
   83004:	687b      	ldr	r3, [r7, #4]
   83006:	605a      	str	r2, [r3, #4]
#endif
	}
	return DACC_RC_OK;
   83008:	2300      	movs	r3, #0
}
   8300a:	4618      	mov	r0, r3
   8300c:	370c      	adds	r7, #12
   8300e:	46bd      	mov	sp, r7
   83010:	bc80      	pop	{r7}
   83012:	4770      	bx	lr

00083014 <dacc_get_interrupt_status>:
 * \param p_dacc Pointer to a DACC instance.
 *
 * \return The interrupt status.
 */
uint32_t dacc_get_interrupt_status(Dacc *p_dacc)
{
   83014:	b480      	push	{r7}
   83016:	b083      	sub	sp, #12
   83018:	af00      	add	r7, sp, #0
   8301a:	6078      	str	r0, [r7, #4]
	return p_dacc->DACC_ISR;
   8301c:	687b      	ldr	r3, [r7, #4]
   8301e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
}
   83020:	4618      	mov	r0, r3
   83022:	370c      	adds	r7, #12
   83024:	46bd      	mov	sp, r7
   83026:	bc80      	pop	{r7}
   83028:	4770      	bx	lr

0008302a <dacc_write_conversion_data>:
 *
 * \param p_dacc Pointer to a DACC instance.
 * \param ul_data The data to be transferred to analog value.
 */
void dacc_write_conversion_data(Dacc *p_dacc, uint32_t ul_data)
{
   8302a:	b480      	push	{r7}
   8302c:	b083      	sub	sp, #12
   8302e:	af00      	add	r7, sp, #0
   83030:	6078      	str	r0, [r7, #4]
   83032:	6039      	str	r1, [r7, #0]
	p_dacc->DACC_CDR = ul_data;
   83034:	687b      	ldr	r3, [r7, #4]
   83036:	683a      	ldr	r2, [r7, #0]
   83038:	621a      	str	r2, [r3, #32]
}
   8303a:	bf00      	nop
   8303c:	370c      	adds	r7, #12
   8303e:	46bd      	mov	sp, r7
   83040:	bc80      	pop	{r7}
   83042:	4770      	bx	lr

00083044 <dacc_set_channel_selection>:
 * \param ul_channel Channel to select.
 *
 * \return \ref DACC_RC_OK if successful.
 */
uint32_t dacc_set_channel_selection(Dacc *p_dacc, uint32_t ul_channel)
{
   83044:	b480      	push	{r7}
   83046:	b085      	sub	sp, #20
   83048:	af00      	add	r7, sp, #0
   8304a:	6078      	str	r0, [r7, #4]
   8304c:	6039      	str	r1, [r7, #0]
	uint32_t mr = p_dacc->DACC_MR & (~DACC_MR_USER_SEL_Msk);
   8304e:	687b      	ldr	r3, [r7, #4]
   83050:	685b      	ldr	r3, [r3, #4]
   83052:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
   83056:	60fb      	str	r3, [r7, #12]
	if (ul_channel > MAX_CH_NB) {
   83058:	683b      	ldr	r3, [r7, #0]
   8305a:	2b01      	cmp	r3, #1
   8305c:	d901      	bls.n	83062 <dacc_set_channel_selection+0x1e>
		return DACC_RC_INVALID_PARAM;
   8305e:	2301      	movs	r3, #1
   83060:	e00c      	b.n	8307c <dacc_set_channel_selection+0x38>
	}
	mr &= ~(DACC_MR_TAG);
   83062:	68fb      	ldr	r3, [r7, #12]
   83064:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
   83068:	60fb      	str	r3, [r7, #12]
	mr |= ul_channel << DACC_MR_USER_SEL_Pos;
   8306a:	683b      	ldr	r3, [r7, #0]
   8306c:	041b      	lsls	r3, r3, #16
   8306e:	68fa      	ldr	r2, [r7, #12]
   83070:	4313      	orrs	r3, r2
   83072:	60fb      	str	r3, [r7, #12]
	p_dacc->DACC_MR = mr;
   83074:	687b      	ldr	r3, [r7, #4]
   83076:	68fa      	ldr	r2, [r7, #12]
   83078:	605a      	str	r2, [r3, #4]

	return DACC_RC_OK;
   8307a:	2300      	movs	r3, #0
}
   8307c:	4618      	mov	r0, r3
   8307e:	3714      	adds	r7, #20
   83080:	46bd      	mov	sp, r7
   83082:	bc80      	pop	{r7}
   83084:	4770      	bx	lr

00083086 <dacc_set_timing>:
 *
 * \return \ref DACC_RC_OK for OK.
 */
uint32_t dacc_set_timing(Dacc *p_dacc,
		uint32_t ul_refresh, uint32_t ul_maxs, uint32_t ul_startup)
{
   83086:	b480      	push	{r7}
   83088:	b087      	sub	sp, #28
   8308a:	af00      	add	r7, sp, #0
   8308c:	60f8      	str	r0, [r7, #12]
   8308e:	60b9      	str	r1, [r7, #8]
   83090:	607a      	str	r2, [r7, #4]
   83092:	603b      	str	r3, [r7, #0]
	uint32_t mr = p_dacc->DACC_MR
   83094:	68fb      	ldr	r3, [r7, #12]
   83096:	685b      	ldr	r3, [r3, #4]
   83098:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
   8309c:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
   830a0:	617b      	str	r3, [r7, #20]
	& (~(DACC_MR_REFRESH_Msk | DACC_MR_STARTUP_Msk));
	mr |= DACC_MR_REFRESH(ul_refresh);
   830a2:	68bb      	ldr	r3, [r7, #8]
   830a4:	021b      	lsls	r3, r3, #8
   830a6:	b29b      	uxth	r3, r3
   830a8:	697a      	ldr	r2, [r7, #20]
   830aa:	4313      	orrs	r3, r2
   830ac:	617b      	str	r3, [r7, #20]
	if (ul_maxs) {
   830ae:	687b      	ldr	r3, [r7, #4]
   830b0:	2b00      	cmp	r3, #0
   830b2:	d004      	beq.n	830be <dacc_set_timing+0x38>
		mr |= DACC_MR_MAXS;
   830b4:	697b      	ldr	r3, [r7, #20]
   830b6:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
   830ba:	617b      	str	r3, [r7, #20]
   830bc:	e003      	b.n	830c6 <dacc_set_timing+0x40>
		} else {
		mr &= ~DACC_MR_MAXS;
   830be:	697b      	ldr	r3, [r7, #20]
   830c0:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
   830c4:	617b      	str	r3, [r7, #20]
	}
	mr |= (DACC_MR_STARTUP_Msk & ((ul_startup) << DACC_MR_STARTUP_Pos));
   830c6:	683b      	ldr	r3, [r7, #0]
   830c8:	061b      	lsls	r3, r3, #24
   830ca:	f003 537c 	and.w	r3, r3, #1056964608	; 0x3f000000
   830ce:	697a      	ldr	r2, [r7, #20]
   830d0:	4313      	orrs	r3, r2
   830d2:	617b      	str	r3, [r7, #20]

	p_dacc->DACC_MR = mr;
   830d4:	68fb      	ldr	r3, [r7, #12]
   830d6:	697a      	ldr	r2, [r7, #20]
   830d8:	605a      	str	r2, [r3, #4]
	return DACC_RC_OK;
   830da:	2300      	movs	r3, #0
}
   830dc:	4618      	mov	r0, r3
   830de:	371c      	adds	r7, #28
   830e0:	46bd      	mov	sp, r7
   830e2:	bc80      	pop	{r7}
   830e4:	4770      	bx	lr

000830e6 <dacc_enable_channel>:
 * \param ul_channel The output channel to enable.
 *
 * \return \ref DACC_RC_OK for OK.
 */
uint32_t dacc_enable_channel(Dacc *p_dacc, uint32_t ul_channel)
{
   830e6:	b480      	push	{r7}
   830e8:	b083      	sub	sp, #12
   830ea:	af00      	add	r7, sp, #0
   830ec:	6078      	str	r0, [r7, #4]
   830ee:	6039      	str	r1, [r7, #0]
	if (ul_channel > MAX_CH_NB)
   830f0:	683b      	ldr	r3, [r7, #0]
   830f2:	2b01      	cmp	r3, #1
   830f4:	d901      	bls.n	830fa <dacc_enable_channel+0x14>
		return DACC_RC_INVALID_PARAM;
   830f6:	2301      	movs	r3, #1
   830f8:	e005      	b.n	83106 <dacc_enable_channel+0x20>

	p_dacc->DACC_CHER = DACC_CHER_CH0 << ul_channel;
   830fa:	2201      	movs	r2, #1
   830fc:	683b      	ldr	r3, [r7, #0]
   830fe:	409a      	lsls	r2, r3
   83100:	687b      	ldr	r3, [r7, #4]
   83102:	611a      	str	r2, [r3, #16]
	return DACC_RC_OK;
   83104:	2300      	movs	r3, #0
}
   83106:	4618      	mov	r0, r3
   83108:	370c      	adds	r7, #12
   8310a:	46bd      	mov	sp, r7
   8310c:	bc80      	pop	{r7}
   8310e:	4770      	bx	lr

00083110 <sin>:
   83110:	b530      	push	{r4, r5, lr}
   83112:	4a21      	ldr	r2, [pc, #132]	; (83198 <sin+0x88>)
   83114:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   83118:	4293      	cmp	r3, r2
   8311a:	b087      	sub	sp, #28
   8311c:	dd1b      	ble.n	83156 <sin+0x46>
   8311e:	4a1f      	ldr	r2, [pc, #124]	; (8319c <sin+0x8c>)
   83120:	4293      	cmp	r3, r2
   83122:	dd05      	ble.n	83130 <sin+0x20>
   83124:	4602      	mov	r2, r0
   83126:	460b      	mov	r3, r1
   83128:	f001 f964 	bl	843f4 <__aeabi_dsub>
   8312c:	b007      	add	sp, #28
   8312e:	bd30      	pop	{r4, r5, pc}
   83130:	aa02      	add	r2, sp, #8
   83132:	f000 f835 	bl	831a0 <__ieee754_rem_pio2>
   83136:	f000 0003 	and.w	r0, r0, #3
   8313a:	2801      	cmp	r0, #1
   8313c:	d013      	beq.n	83166 <sin+0x56>
   8313e:	2802      	cmp	r0, #2
   83140:	d01f      	beq.n	83182 <sin+0x72>
   83142:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   83146:	b1a8      	cbz	r0, 83174 <sin+0x64>
   83148:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   8314c:	f000 fa48 	bl	835e0 <__kernel_cos>
   83150:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
   83154:	e7ea      	b.n	8312c <sin+0x1c>
   83156:	2400      	movs	r4, #0
   83158:	2200      	movs	r2, #0
   8315a:	2300      	movs	r3, #0
   8315c:	9400      	str	r4, [sp, #0]
   8315e:	f000 ff8b 	bl	84078 <__kernel_sin>
   83162:	b007      	add	sp, #28
   83164:	bd30      	pop	{r4, r5, pc}
   83166:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   8316a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   8316e:	f000 fa37 	bl	835e0 <__kernel_cos>
   83172:	e7db      	b.n	8312c <sin+0x1c>
   83174:	2401      	movs	r4, #1
   83176:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   8317a:	9400      	str	r4, [sp, #0]
   8317c:	f000 ff7c 	bl	84078 <__kernel_sin>
   83180:	e7d4      	b.n	8312c <sin+0x1c>
   83182:	2401      	movs	r4, #1
   83184:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   83188:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   8318c:	9400      	str	r4, [sp, #0]
   8318e:	f000 ff73 	bl	84078 <__kernel_sin>
   83192:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
   83196:	e7c9      	b.n	8312c <sin+0x1c>
   83198:	3fe921fb 	.word	0x3fe921fb
   8319c:	7fefffff 	.word	0x7fefffff

000831a0 <__ieee754_rem_pio2>:
   831a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   831a4:	4cc8      	ldr	r4, [pc, #800]	; (834c8 <__ieee754_rem_pio2+0x328>)
   831a6:	f021 4500 	bic.w	r5, r1, #2147483648	; 0x80000000
   831aa:	42a5      	cmp	r5, r4
   831ac:	b08f      	sub	sp, #60	; 0x3c
   831ae:	f340 808a 	ble.w	832c6 <__ieee754_rem_pio2+0x126>
   831b2:	4614      	mov	r4, r2
   831b4:	4ac5      	ldr	r2, [pc, #788]	; (834cc <__ieee754_rem_pio2+0x32c>)
   831b6:	460e      	mov	r6, r1
   831b8:	4295      	cmp	r5, r2
   831ba:	dc26      	bgt.n	8320a <__ieee754_rem_pio2+0x6a>
   831bc:	a3b8      	add	r3, pc, #736	; (adr r3, 834a0 <__ieee754_rem_pio2+0x300>)
   831be:	e9d3 2300 	ldrd	r2, r3, [r3]
   831c2:	2900      	cmp	r1, #0
   831c4:	f340 808a 	ble.w	832dc <__ieee754_rem_pio2+0x13c>
   831c8:	f001 f914 	bl	843f4 <__aeabi_dsub>
   831cc:	4bc0      	ldr	r3, [pc, #768]	; (834d0 <__ieee754_rem_pio2+0x330>)
   831ce:	4606      	mov	r6, r0
   831d0:	429d      	cmp	r5, r3
   831d2:	460f      	mov	r7, r1
   831d4:	f000 8146 	beq.w	83464 <__ieee754_rem_pio2+0x2c4>
   831d8:	a3b3      	add	r3, pc, #716	; (adr r3, 834a8 <__ieee754_rem_pio2+0x308>)
   831da:	e9d3 2300 	ldrd	r2, r3, [r3]
   831de:	f001 f909 	bl	843f4 <__aeabi_dsub>
   831e2:	4602      	mov	r2, r0
   831e4:	460b      	mov	r3, r1
   831e6:	4630      	mov	r0, r6
   831e8:	e9c4 2300 	strd	r2, r3, [r4]
   831ec:	4639      	mov	r1, r7
   831ee:	f001 f901 	bl	843f4 <__aeabi_dsub>
   831f2:	a3ad      	add	r3, pc, #692	; (adr r3, 834a8 <__ieee754_rem_pio2+0x308>)
   831f4:	e9d3 2300 	ldrd	r2, r3, [r3]
   831f8:	f001 f8fc 	bl	843f4 <__aeabi_dsub>
   831fc:	2701      	movs	r7, #1
   831fe:	e9c4 0102 	strd	r0, r1, [r4, #8]
   83202:	4638      	mov	r0, r7
   83204:	b00f      	add	sp, #60	; 0x3c
   83206:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8320a:	4ab2      	ldr	r2, [pc, #712]	; (834d4 <__ieee754_rem_pio2+0x334>)
   8320c:	4295      	cmp	r5, r2
   8320e:	f340 8084 	ble.w	8331a <__ieee754_rem_pio2+0x17a>
   83212:	4ab1      	ldr	r2, [pc, #708]	; (834d8 <__ieee754_rem_pio2+0x338>)
   83214:	4295      	cmp	r5, r2
   83216:	f300 811b 	bgt.w	83450 <__ieee754_rem_pio2+0x2b0>
   8321a:	152f      	asrs	r7, r5, #20
   8321c:	f2a7 4716 	subw	r7, r7, #1046	; 0x416
   83220:	eba5 5107 	sub.w	r1, r5, r7, lsl #20
   83224:	468b      	mov	fp, r1
   83226:	4682      	mov	sl, r0
   83228:	f001 fd36 	bl	84c98 <__aeabi_d2iz>
   8322c:	f001 fa30 	bl	84690 <__aeabi_i2d>
   83230:	4680      	mov	r8, r0
   83232:	4689      	mov	r9, r1
   83234:	4642      	mov	r2, r8
   83236:	464b      	mov	r3, r9
   83238:	4650      	mov	r0, sl
   8323a:	4659      	mov	r1, fp
   8323c:	e9cd 8908 	strd	r8, r9, [sp, #32]
   83240:	f001 f8d8 	bl	843f4 <__aeabi_dsub>
   83244:	2200      	movs	r2, #0
   83246:	4ba5      	ldr	r3, [pc, #660]	; (834dc <__ieee754_rem_pio2+0x33c>)
   83248:	f001 fa8c 	bl	84764 <__aeabi_dmul>
   8324c:	468b      	mov	fp, r1
   8324e:	4682      	mov	sl, r0
   83250:	f001 fd22 	bl	84c98 <__aeabi_d2iz>
   83254:	f001 fa1c 	bl	84690 <__aeabi_i2d>
   83258:	4680      	mov	r8, r0
   8325a:	4689      	mov	r9, r1
   8325c:	4642      	mov	r2, r8
   8325e:	464b      	mov	r3, r9
   83260:	4650      	mov	r0, sl
   83262:	4659      	mov	r1, fp
   83264:	e9cd 890a 	strd	r8, r9, [sp, #40]	; 0x28
   83268:	f001 f8c4 	bl	843f4 <__aeabi_dsub>
   8326c:	2200      	movs	r2, #0
   8326e:	4b9b      	ldr	r3, [pc, #620]	; (834dc <__ieee754_rem_pio2+0x33c>)
   83270:	f001 fa78 	bl	84764 <__aeabi_dmul>
   83274:	2200      	movs	r2, #0
   83276:	2300      	movs	r3, #0
   83278:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
   8327c:	f001 fcda 	bl	84c34 <__aeabi_dcmpeq>
   83280:	2800      	cmp	r0, #0
   83282:	f000 815f 	beq.w	83544 <__ieee754_rem_pio2+0x3a4>
   83286:	2300      	movs	r3, #0
   83288:	4640      	mov	r0, r8
   8328a:	4649      	mov	r1, r9
   8328c:	2200      	movs	r2, #0
   8328e:	f001 fcd1 	bl	84c34 <__aeabi_dcmpeq>
   83292:	2800      	cmp	r0, #0
   83294:	bf14      	ite	ne
   83296:	2301      	movne	r3, #1
   83298:	2302      	moveq	r3, #2
   8329a:	2002      	movs	r0, #2
   8329c:	4990      	ldr	r1, [pc, #576]	; (834e0 <__ieee754_rem_pio2+0x340>)
   8329e:	463a      	mov	r2, r7
   832a0:	e9cd 0100 	strd	r0, r1, [sp]
   832a4:	4621      	mov	r1, r4
   832a6:	a808      	add	r0, sp, #32
   832a8:	f000 fabe 	bl	83828 <__kernel_rem_pio2>
   832ac:	2e00      	cmp	r6, #0
   832ae:	4607      	mov	r7, r0
   832b0:	da10      	bge.n	832d4 <__ieee754_rem_pio2+0x134>
   832b2:	6862      	ldr	r2, [r4, #4]
   832b4:	68e3      	ldr	r3, [r4, #12]
   832b6:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
   832ba:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
   832be:	4247      	negs	r7, r0
   832c0:	6062      	str	r2, [r4, #4]
   832c2:	60e3      	str	r3, [r4, #12]
   832c4:	e006      	b.n	832d4 <__ieee754_rem_pio2+0x134>
   832c6:	2400      	movs	r4, #0
   832c8:	2500      	movs	r5, #0
   832ca:	2700      	movs	r7, #0
   832cc:	e9c2 4502 	strd	r4, r5, [r2, #8]
   832d0:	e9c2 0100 	strd	r0, r1, [r2]
   832d4:	4638      	mov	r0, r7
   832d6:	b00f      	add	sp, #60	; 0x3c
   832d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   832dc:	f001 f88c 	bl	843f8 <__adddf3>
   832e0:	4b7b      	ldr	r3, [pc, #492]	; (834d0 <__ieee754_rem_pio2+0x330>)
   832e2:	4606      	mov	r6, r0
   832e4:	429d      	cmp	r5, r3
   832e6:	460f      	mov	r7, r1
   832e8:	f000 810e 	beq.w	83508 <__ieee754_rem_pio2+0x368>
   832ec:	a36e      	add	r3, pc, #440	; (adr r3, 834a8 <__ieee754_rem_pio2+0x308>)
   832ee:	e9d3 2300 	ldrd	r2, r3, [r3]
   832f2:	f001 f881 	bl	843f8 <__adddf3>
   832f6:	4602      	mov	r2, r0
   832f8:	460b      	mov	r3, r1
   832fa:	4630      	mov	r0, r6
   832fc:	4639      	mov	r1, r7
   832fe:	e9c4 2300 	strd	r2, r3, [r4]
   83302:	f001 f877 	bl	843f4 <__aeabi_dsub>
   83306:	a368      	add	r3, pc, #416	; (adr r3, 834a8 <__ieee754_rem_pio2+0x308>)
   83308:	e9d3 2300 	ldrd	r2, r3, [r3]
   8330c:	f001 f874 	bl	843f8 <__adddf3>
   83310:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   83314:	e9c4 0102 	strd	r0, r1, [r4, #8]
   83318:	e7dc      	b.n	832d4 <__ieee754_rem_pio2+0x134>
   8331a:	f000 ff63 	bl	841e4 <fabs>
   8331e:	a364      	add	r3, pc, #400	; (adr r3, 834b0 <__ieee754_rem_pio2+0x310>)
   83320:	e9d3 2300 	ldrd	r2, r3, [r3]
   83324:	4680      	mov	r8, r0
   83326:	4689      	mov	r9, r1
   83328:	f001 fa1c 	bl	84764 <__aeabi_dmul>
   8332c:	2200      	movs	r2, #0
   8332e:	4b6d      	ldr	r3, [pc, #436]	; (834e4 <__ieee754_rem_pio2+0x344>)
   83330:	f001 f862 	bl	843f8 <__adddf3>
   83334:	f001 fcb0 	bl	84c98 <__aeabi_d2iz>
   83338:	4607      	mov	r7, r0
   8333a:	f001 f9a9 	bl	84690 <__aeabi_i2d>
   8333e:	a358      	add	r3, pc, #352	; (adr r3, 834a0 <__ieee754_rem_pio2+0x300>)
   83340:	e9d3 2300 	ldrd	r2, r3, [r3]
   83344:	4682      	mov	sl, r0
   83346:	468b      	mov	fp, r1
   83348:	e9cd ab04 	strd	sl, fp, [sp, #16]
   8334c:	f001 fa0a 	bl	84764 <__aeabi_dmul>
   83350:	4602      	mov	r2, r0
   83352:	460b      	mov	r3, r1
   83354:	4640      	mov	r0, r8
   83356:	4649      	mov	r1, r9
   83358:	f001 f84c 	bl	843f4 <__aeabi_dsub>
   8335c:	a352      	add	r3, pc, #328	; (adr r3, 834a8 <__ieee754_rem_pio2+0x308>)
   8335e:	e9d3 2300 	ldrd	r2, r3, [r3]
   83362:	e9cd 0102 	strd	r0, r1, [sp, #8]
   83366:	4650      	mov	r0, sl
   83368:	4659      	mov	r1, fp
   8336a:	f001 f9fb 	bl	84764 <__aeabi_dmul>
   8336e:	2f1f      	cmp	r7, #31
   83370:	4680      	mov	r8, r0
   83372:	4689      	mov	r9, r1
   83374:	4602      	mov	r2, r0
   83376:	460b      	mov	r3, r1
   83378:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   8337c:	f340 80b4 	ble.w	834e8 <__ieee754_rem_pio2+0x348>
   83380:	f001 f838 	bl	843f4 <__aeabi_dsub>
   83384:	4683      	mov	fp, r0
   83386:	468a      	mov	sl, r1
   83388:	152d      	asrs	r5, r5, #20
   8338a:	f3ca 530a 	ubfx	r3, sl, #20, #11
   8338e:	1aeb      	subs	r3, r5, r3
   83390:	2b10      	cmp	r3, #16
   83392:	f340 80b4 	ble.w	834fe <__ieee754_rem_pio2+0x35e>
   83396:	a348      	add	r3, pc, #288	; (adr r3, 834b8 <__ieee754_rem_pio2+0x318>)
   83398:	e9d3 2300 	ldrd	r2, r3, [r3]
   8339c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   833a0:	f001 f9e0 	bl	84764 <__aeabi_dmul>
   833a4:	4680      	mov	r8, r0
   833a6:	4689      	mov	r9, r1
   833a8:	4602      	mov	r2, r0
   833aa:	460b      	mov	r3, r1
   833ac:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   833b0:	f001 f820 	bl	843f4 <__aeabi_dsub>
   833b4:	4682      	mov	sl, r0
   833b6:	468b      	mov	fp, r1
   833b8:	4602      	mov	r2, r0
   833ba:	460b      	mov	r3, r1
   833bc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   833c0:	f001 f818 	bl	843f4 <__aeabi_dsub>
   833c4:	4642      	mov	r2, r8
   833c6:	464b      	mov	r3, r9
   833c8:	f001 f814 	bl	843f4 <__aeabi_dsub>
   833cc:	a33c      	add	r3, pc, #240	; (adr r3, 834c0 <__ieee754_rem_pio2+0x320>)
   833ce:	e9d3 2300 	ldrd	r2, r3, [r3]
   833d2:	4680      	mov	r8, r0
   833d4:	4689      	mov	r9, r1
   833d6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   833da:	f001 f9c3 	bl	84764 <__aeabi_dmul>
   833de:	4642      	mov	r2, r8
   833e0:	464b      	mov	r3, r9
   833e2:	f001 f807 	bl	843f4 <__aeabi_dsub>
   833e6:	460b      	mov	r3, r1
   833e8:	4602      	mov	r2, r0
   833ea:	4680      	mov	r8, r0
   833ec:	4689      	mov	r9, r1
   833ee:	4650      	mov	r0, sl
   833f0:	4659      	mov	r1, fp
   833f2:	e9cd ab06 	strd	sl, fp, [sp, #24]
   833f6:	f000 fffd 	bl	843f4 <__aeabi_dsub>
   833fa:	f3c1 530a 	ubfx	r3, r1, #20, #11
   833fe:	1aed      	subs	r5, r5, r3
   83400:	2d31      	cmp	r5, #49	; 0x31
   83402:	4683      	mov	fp, r0
   83404:	468a      	mov	sl, r1
   83406:	f300 809f 	bgt.w	83548 <__ieee754_rem_pio2+0x3a8>
   8340a:	4602      	mov	r2, r0
   8340c:	460b      	mov	r3, r1
   8340e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
   83412:	e9c4 2300 	strd	r2, r3, [r4]
   83416:	e9cd 0102 	strd	r0, r1, [sp, #8]
   8341a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   8341e:	465a      	mov	r2, fp
   83420:	4653      	mov	r3, sl
   83422:	f000 ffe7 	bl	843f4 <__aeabi_dsub>
   83426:	4642      	mov	r2, r8
   83428:	464b      	mov	r3, r9
   8342a:	f000 ffe3 	bl	843f4 <__aeabi_dsub>
   8342e:	4602      	mov	r2, r0
   83430:	460b      	mov	r3, r1
   83432:	2e00      	cmp	r6, #0
   83434:	e9c4 2302 	strd	r2, r3, [r4, #8]
   83438:	f6bf af4c 	bge.w	832d4 <__ieee754_rem_pio2+0x134>
   8343c:	f10a 4300 	add.w	r3, sl, #2147483648	; 0x80000000
   83440:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
   83444:	e9c4 b300 	strd	fp, r3, [r4]
   83448:	e9c4 0102 	strd	r0, r1, [r4, #8]
   8344c:	427f      	negs	r7, r7
   8344e:	e741      	b.n	832d4 <__ieee754_rem_pio2+0x134>
   83450:	4602      	mov	r2, r0
   83452:	460b      	mov	r3, r1
   83454:	f000 ffce 	bl	843f4 <__aeabi_dsub>
   83458:	2700      	movs	r7, #0
   8345a:	e9c4 0102 	strd	r0, r1, [r4, #8]
   8345e:	e9c4 0100 	strd	r0, r1, [r4]
   83462:	e737      	b.n	832d4 <__ieee754_rem_pio2+0x134>
   83464:	a314      	add	r3, pc, #80	; (adr r3, 834b8 <__ieee754_rem_pio2+0x318>)
   83466:	e9d3 2300 	ldrd	r2, r3, [r3]
   8346a:	f000 ffc3 	bl	843f4 <__aeabi_dsub>
   8346e:	a314      	add	r3, pc, #80	; (adr r3, 834c0 <__ieee754_rem_pio2+0x320>)
   83470:	e9d3 2300 	ldrd	r2, r3, [r3]
   83474:	460f      	mov	r7, r1
   83476:	4606      	mov	r6, r0
   83478:	f000 ffbc 	bl	843f4 <__aeabi_dsub>
   8347c:	4602      	mov	r2, r0
   8347e:	460b      	mov	r3, r1
   83480:	4630      	mov	r0, r6
   83482:	4639      	mov	r1, r7
   83484:	e9c4 2300 	strd	r2, r3, [r4]
   83488:	f000 ffb4 	bl	843f4 <__aeabi_dsub>
   8348c:	a30c      	add	r3, pc, #48	; (adr r3, 834c0 <__ieee754_rem_pio2+0x320>)
   8348e:	e9d3 2300 	ldrd	r2, r3, [r3]
   83492:	f000 ffaf 	bl	843f4 <__aeabi_dsub>
   83496:	2701      	movs	r7, #1
   83498:	e9c4 0102 	strd	r0, r1, [r4, #8]
   8349c:	e71a      	b.n	832d4 <__ieee754_rem_pio2+0x134>
   8349e:	bf00      	nop
   834a0:	54400000 	.word	0x54400000
   834a4:	3ff921fb 	.word	0x3ff921fb
   834a8:	1a626331 	.word	0x1a626331
   834ac:	3dd0b461 	.word	0x3dd0b461
   834b0:	6dc9c883 	.word	0x6dc9c883
   834b4:	3fe45f30 	.word	0x3fe45f30
   834b8:	1a600000 	.word	0x1a600000
   834bc:	3dd0b461 	.word	0x3dd0b461
   834c0:	2e037073 	.word	0x2e037073
   834c4:	3ba3198a 	.word	0x3ba3198a
   834c8:	3fe921fb 	.word	0x3fe921fb
   834cc:	4002d97b 	.word	0x4002d97b
   834d0:	3ff921fb 	.word	0x3ff921fb
   834d4:	413921fb 	.word	0x413921fb
   834d8:	7fefffff 	.word	0x7fefffff
   834dc:	41700000 	.word	0x41700000
   834e0:	0008a00c 	.word	0x0008a00c
   834e4:	3fe00000 	.word	0x3fe00000
   834e8:	f000 ff84 	bl	843f4 <__aeabi_dsub>
   834ec:	4b3a      	ldr	r3, [pc, #232]	; (835d8 <__ieee754_rem_pio2+0x438>)
   834ee:	1e7a      	subs	r2, r7, #1
   834f0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
   834f4:	4683      	mov	fp, r0
   834f6:	42ab      	cmp	r3, r5
   834f8:	468a      	mov	sl, r1
   834fa:	f43f af45 	beq.w	83388 <__ieee754_rem_pio2+0x1e8>
   834fe:	465a      	mov	r2, fp
   83500:	4653      	mov	r3, sl
   83502:	e9c4 2300 	strd	r2, r3, [r4]
   83506:	e788      	b.n	8341a <__ieee754_rem_pio2+0x27a>
   83508:	a32b      	add	r3, pc, #172	; (adr r3, 835b8 <__ieee754_rem_pio2+0x418>)
   8350a:	e9d3 2300 	ldrd	r2, r3, [r3]
   8350e:	f000 ff73 	bl	843f8 <__adddf3>
   83512:	a32b      	add	r3, pc, #172	; (adr r3, 835c0 <__ieee754_rem_pio2+0x420>)
   83514:	e9d3 2300 	ldrd	r2, r3, [r3]
   83518:	460f      	mov	r7, r1
   8351a:	4606      	mov	r6, r0
   8351c:	f000 ff6c 	bl	843f8 <__adddf3>
   83520:	4602      	mov	r2, r0
   83522:	460b      	mov	r3, r1
   83524:	4630      	mov	r0, r6
   83526:	4639      	mov	r1, r7
   83528:	e9c4 2300 	strd	r2, r3, [r4]
   8352c:	f000 ff62 	bl	843f4 <__aeabi_dsub>
   83530:	a323      	add	r3, pc, #140	; (adr r3, 835c0 <__ieee754_rem_pio2+0x420>)
   83532:	e9d3 2300 	ldrd	r2, r3, [r3]
   83536:	f000 ff5f 	bl	843f8 <__adddf3>
   8353a:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
   8353e:	e9c4 0102 	strd	r0, r1, [r4, #8]
   83542:	e6c7      	b.n	832d4 <__ieee754_rem_pio2+0x134>
   83544:	2303      	movs	r3, #3
   83546:	e6a8      	b.n	8329a <__ieee754_rem_pio2+0xfa>
   83548:	a31f      	add	r3, pc, #124	; (adr r3, 835c8 <__ieee754_rem_pio2+0x428>)
   8354a:	e9d3 2300 	ldrd	r2, r3, [r3]
   8354e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   83552:	f001 f907 	bl	84764 <__aeabi_dmul>
   83556:	4680      	mov	r8, r0
   83558:	4689      	mov	r9, r1
   8355a:	4602      	mov	r2, r0
   8355c:	460b      	mov	r3, r1
   8355e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
   83562:	f000 ff47 	bl	843f4 <__aeabi_dsub>
   83566:	4682      	mov	sl, r0
   83568:	468b      	mov	fp, r1
   8356a:	4602      	mov	r2, r0
   8356c:	460b      	mov	r3, r1
   8356e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
   83572:	e9cd ab02 	strd	sl, fp, [sp, #8]
   83576:	f000 ff3d 	bl	843f4 <__aeabi_dsub>
   8357a:	4642      	mov	r2, r8
   8357c:	464b      	mov	r3, r9
   8357e:	f000 ff39 	bl	843f4 <__aeabi_dsub>
   83582:	a313      	add	r3, pc, #76	; (adr r3, 835d0 <__ieee754_rem_pio2+0x430>)
   83584:	e9d3 2300 	ldrd	r2, r3, [r3]
   83588:	4680      	mov	r8, r0
   8358a:	4689      	mov	r9, r1
   8358c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   83590:	f001 f8e8 	bl	84764 <__aeabi_dmul>
   83594:	4642      	mov	r2, r8
   83596:	464b      	mov	r3, r9
   83598:	f000 ff2c 	bl	843f4 <__aeabi_dsub>
   8359c:	4602      	mov	r2, r0
   8359e:	460b      	mov	r3, r1
   835a0:	4680      	mov	r8, r0
   835a2:	4689      	mov	r9, r1
   835a4:	4650      	mov	r0, sl
   835a6:	4659      	mov	r1, fp
   835a8:	f000 ff24 	bl	843f4 <__aeabi_dsub>
   835ac:	4683      	mov	fp, r0
   835ae:	468a      	mov	sl, r1
   835b0:	e7a5      	b.n	834fe <__ieee754_rem_pio2+0x35e>
   835b2:	bf00      	nop
   835b4:	f3af 8000 	nop.w
   835b8:	1a600000 	.word	0x1a600000
   835bc:	3dd0b461 	.word	0x3dd0b461
   835c0:	2e037073 	.word	0x2e037073
   835c4:	3ba3198a 	.word	0x3ba3198a
   835c8:	2e000000 	.word	0x2e000000
   835cc:	3ba3198a 	.word	0x3ba3198a
   835d0:	252049c1 	.word	0x252049c1
   835d4:	397b839a 	.word	0x397b839a
   835d8:	00089f8c 	.word	0x00089f8c
   835dc:	00000000 	.word	0x00000000

000835e0 <__kernel_cos>:
   835e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   835e4:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
   835e8:	f1b6 5f79 	cmp.w	r6, #1044381696	; 0x3e400000
   835ec:	b085      	sub	sp, #20
   835ee:	460c      	mov	r4, r1
   835f0:	4692      	mov	sl, r2
   835f2:	469b      	mov	fp, r3
   835f4:	4605      	mov	r5, r0
   835f6:	da6b      	bge.n	836d0 <__kernel_cos+0xf0>
   835f8:	f001 fb4e 	bl	84c98 <__aeabi_d2iz>
   835fc:	2800      	cmp	r0, #0
   835fe:	f000 80e1 	beq.w	837c4 <__kernel_cos+0x1e4>
   83602:	462a      	mov	r2, r5
   83604:	4623      	mov	r3, r4
   83606:	4628      	mov	r0, r5
   83608:	4621      	mov	r1, r4
   8360a:	f001 f8ab 	bl	84764 <__aeabi_dmul>
   8360e:	a374      	add	r3, pc, #464	; (adr r3, 837e0 <__kernel_cos+0x200>)
   83610:	e9d3 2300 	ldrd	r2, r3, [r3]
   83614:	4680      	mov	r8, r0
   83616:	4689      	mov	r9, r1
   83618:	f001 f8a4 	bl	84764 <__aeabi_dmul>
   8361c:	a372      	add	r3, pc, #456	; (adr r3, 837e8 <__kernel_cos+0x208>)
   8361e:	e9d3 2300 	ldrd	r2, r3, [r3]
   83622:	f000 fee9 	bl	843f8 <__adddf3>
   83626:	4642      	mov	r2, r8
   83628:	464b      	mov	r3, r9
   8362a:	f001 f89b 	bl	84764 <__aeabi_dmul>
   8362e:	a370      	add	r3, pc, #448	; (adr r3, 837f0 <__kernel_cos+0x210>)
   83630:	e9d3 2300 	ldrd	r2, r3, [r3]
   83634:	f000 fede 	bl	843f4 <__aeabi_dsub>
   83638:	4642      	mov	r2, r8
   8363a:	464b      	mov	r3, r9
   8363c:	f001 f892 	bl	84764 <__aeabi_dmul>
   83640:	a36d      	add	r3, pc, #436	; (adr r3, 837f8 <__kernel_cos+0x218>)
   83642:	e9d3 2300 	ldrd	r2, r3, [r3]
   83646:	f000 fed7 	bl	843f8 <__adddf3>
   8364a:	4642      	mov	r2, r8
   8364c:	464b      	mov	r3, r9
   8364e:	f001 f889 	bl	84764 <__aeabi_dmul>
   83652:	a36b      	add	r3, pc, #428	; (adr r3, 83800 <__kernel_cos+0x220>)
   83654:	e9d3 2300 	ldrd	r2, r3, [r3]
   83658:	f000 fecc 	bl	843f4 <__aeabi_dsub>
   8365c:	4642      	mov	r2, r8
   8365e:	464b      	mov	r3, r9
   83660:	f001 f880 	bl	84764 <__aeabi_dmul>
   83664:	a368      	add	r3, pc, #416	; (adr r3, 83808 <__kernel_cos+0x228>)
   83666:	e9d3 2300 	ldrd	r2, r3, [r3]
   8366a:	f000 fec5 	bl	843f8 <__adddf3>
   8366e:	4642      	mov	r2, r8
   83670:	464b      	mov	r3, r9
   83672:	f001 f877 	bl	84764 <__aeabi_dmul>
   83676:	e9cd 0100 	strd	r0, r1, [sp]
   8367a:	2200      	movs	r2, #0
   8367c:	4b64      	ldr	r3, [pc, #400]	; (83810 <__kernel_cos+0x230>)
   8367e:	4640      	mov	r0, r8
   83680:	4649      	mov	r1, r9
   83682:	f001 f86f 	bl	84764 <__aeabi_dmul>
   83686:	e9dd 2300 	ldrd	r2, r3, [sp]
   8368a:	4606      	mov	r6, r0
   8368c:	460f      	mov	r7, r1
   8368e:	4640      	mov	r0, r8
   83690:	4649      	mov	r1, r9
   83692:	f001 f867 	bl	84764 <__aeabi_dmul>
   83696:	4652      	mov	r2, sl
   83698:	4680      	mov	r8, r0
   8369a:	4689      	mov	r9, r1
   8369c:	465b      	mov	r3, fp
   8369e:	4628      	mov	r0, r5
   836a0:	4621      	mov	r1, r4
   836a2:	f001 f85f 	bl	84764 <__aeabi_dmul>
   836a6:	4602      	mov	r2, r0
   836a8:	460b      	mov	r3, r1
   836aa:	4640      	mov	r0, r8
   836ac:	4649      	mov	r1, r9
   836ae:	f000 fea1 	bl	843f4 <__aeabi_dsub>
   836b2:	4602      	mov	r2, r0
   836b4:	460b      	mov	r3, r1
   836b6:	4630      	mov	r0, r6
   836b8:	4639      	mov	r1, r7
   836ba:	f000 fe9b 	bl	843f4 <__aeabi_dsub>
   836be:	4602      	mov	r2, r0
   836c0:	460b      	mov	r3, r1
   836c2:	2000      	movs	r0, #0
   836c4:	4953      	ldr	r1, [pc, #332]	; (83814 <__kernel_cos+0x234>)
   836c6:	f000 fe95 	bl	843f4 <__aeabi_dsub>
   836ca:	b005      	add	sp, #20
   836cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   836d0:	4602      	mov	r2, r0
   836d2:	460b      	mov	r3, r1
   836d4:	f001 f846 	bl	84764 <__aeabi_dmul>
   836d8:	a341      	add	r3, pc, #260	; (adr r3, 837e0 <__kernel_cos+0x200>)
   836da:	e9d3 2300 	ldrd	r2, r3, [r3]
   836de:	4680      	mov	r8, r0
   836e0:	4689      	mov	r9, r1
   836e2:	f001 f83f 	bl	84764 <__aeabi_dmul>
   836e6:	a340      	add	r3, pc, #256	; (adr r3, 837e8 <__kernel_cos+0x208>)
   836e8:	e9d3 2300 	ldrd	r2, r3, [r3]
   836ec:	f000 fe84 	bl	843f8 <__adddf3>
   836f0:	4642      	mov	r2, r8
   836f2:	464b      	mov	r3, r9
   836f4:	f001 f836 	bl	84764 <__aeabi_dmul>
   836f8:	a33d      	add	r3, pc, #244	; (adr r3, 837f0 <__kernel_cos+0x210>)
   836fa:	e9d3 2300 	ldrd	r2, r3, [r3]
   836fe:	f000 fe79 	bl	843f4 <__aeabi_dsub>
   83702:	4642      	mov	r2, r8
   83704:	464b      	mov	r3, r9
   83706:	f001 f82d 	bl	84764 <__aeabi_dmul>
   8370a:	a33b      	add	r3, pc, #236	; (adr r3, 837f8 <__kernel_cos+0x218>)
   8370c:	e9d3 2300 	ldrd	r2, r3, [r3]
   83710:	f000 fe72 	bl	843f8 <__adddf3>
   83714:	4642      	mov	r2, r8
   83716:	464b      	mov	r3, r9
   83718:	f001 f824 	bl	84764 <__aeabi_dmul>
   8371c:	a338      	add	r3, pc, #224	; (adr r3, 83800 <__kernel_cos+0x220>)
   8371e:	e9d3 2300 	ldrd	r2, r3, [r3]
   83722:	f000 fe67 	bl	843f4 <__aeabi_dsub>
   83726:	4642      	mov	r2, r8
   83728:	464b      	mov	r3, r9
   8372a:	f001 f81b 	bl	84764 <__aeabi_dmul>
   8372e:	a336      	add	r3, pc, #216	; (adr r3, 83808 <__kernel_cos+0x228>)
   83730:	e9d3 2300 	ldrd	r2, r3, [r3]
   83734:	f000 fe60 	bl	843f8 <__adddf3>
   83738:	464b      	mov	r3, r9
   8373a:	4642      	mov	r2, r8
   8373c:	f001 f812 	bl	84764 <__aeabi_dmul>
   83740:	4b35      	ldr	r3, [pc, #212]	; (83818 <__kernel_cos+0x238>)
   83742:	e9cd 0100 	strd	r0, r1, [sp]
   83746:	429e      	cmp	r6, r3
   83748:	dd97      	ble.n	8367a <__kernel_cos+0x9a>
   8374a:	4b34      	ldr	r3, [pc, #208]	; (8381c <__kernel_cos+0x23c>)
   8374c:	2200      	movs	r2, #0
   8374e:	429e      	cmp	r6, r3
   83750:	dc3d      	bgt.n	837ce <__kernel_cos+0x1ee>
   83752:	f5a6 1300 	sub.w	r3, r6, #2097152	; 0x200000
   83756:	2000      	movs	r0, #0
   83758:	492e      	ldr	r1, [pc, #184]	; (83814 <__kernel_cos+0x234>)
   8375a:	4616      	mov	r6, r2
   8375c:	461f      	mov	r7, r3
   8375e:	f000 fe49 	bl	843f4 <__aeabi_dsub>
   83762:	e9cd 0102 	strd	r0, r1, [sp, #8]
   83766:	2200      	movs	r2, #0
   83768:	4b29      	ldr	r3, [pc, #164]	; (83810 <__kernel_cos+0x230>)
   8376a:	4640      	mov	r0, r8
   8376c:	4649      	mov	r1, r9
   8376e:	f000 fff9 	bl	84764 <__aeabi_dmul>
   83772:	4632      	mov	r2, r6
   83774:	463b      	mov	r3, r7
   83776:	f000 fe3d 	bl	843f4 <__aeabi_dsub>
   8377a:	e9dd 2300 	ldrd	r2, r3, [sp]
   8377e:	4606      	mov	r6, r0
   83780:	460f      	mov	r7, r1
   83782:	4640      	mov	r0, r8
   83784:	4649      	mov	r1, r9
   83786:	f000 ffed 	bl	84764 <__aeabi_dmul>
   8378a:	4652      	mov	r2, sl
   8378c:	4680      	mov	r8, r0
   8378e:	4689      	mov	r9, r1
   83790:	465b      	mov	r3, fp
   83792:	4628      	mov	r0, r5
   83794:	4621      	mov	r1, r4
   83796:	f000 ffe5 	bl	84764 <__aeabi_dmul>
   8379a:	4602      	mov	r2, r0
   8379c:	460b      	mov	r3, r1
   8379e:	4640      	mov	r0, r8
   837a0:	4649      	mov	r1, r9
   837a2:	f000 fe27 	bl	843f4 <__aeabi_dsub>
   837a6:	4602      	mov	r2, r0
   837a8:	460b      	mov	r3, r1
   837aa:	4630      	mov	r0, r6
   837ac:	4639      	mov	r1, r7
   837ae:	f000 fe21 	bl	843f4 <__aeabi_dsub>
   837b2:	4602      	mov	r2, r0
   837b4:	460b      	mov	r3, r1
   837b6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   837ba:	f000 fe1b 	bl	843f4 <__aeabi_dsub>
   837be:	b005      	add	sp, #20
   837c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   837c4:	2000      	movs	r0, #0
   837c6:	4913      	ldr	r1, [pc, #76]	; (83814 <__kernel_cos+0x234>)
   837c8:	b005      	add	sp, #20
   837ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   837ce:	4b14      	ldr	r3, [pc, #80]	; (83820 <__kernel_cos+0x240>)
   837d0:	2600      	movs	r6, #0
   837d2:	e9cd 2302 	strd	r2, r3, [sp, #8]
   837d6:	4f13      	ldr	r7, [pc, #76]	; (83824 <__kernel_cos+0x244>)
   837d8:	e7c5      	b.n	83766 <__kernel_cos+0x186>
   837da:	bf00      	nop
   837dc:	f3af 8000 	nop.w
   837e0:	be8838d4 	.word	0xbe8838d4
   837e4:	bda8fae9 	.word	0xbda8fae9
   837e8:	bdb4b1c4 	.word	0xbdb4b1c4
   837ec:	3e21ee9e 	.word	0x3e21ee9e
   837f0:	809c52ad 	.word	0x809c52ad
   837f4:	3e927e4f 	.word	0x3e927e4f
   837f8:	19cb1590 	.word	0x19cb1590
   837fc:	3efa01a0 	.word	0x3efa01a0
   83800:	16c15177 	.word	0x16c15177
   83804:	3f56c16c 	.word	0x3f56c16c
   83808:	5555554c 	.word	0x5555554c
   8380c:	3fa55555 	.word	0x3fa55555
   83810:	3fe00000 	.word	0x3fe00000
   83814:	3ff00000 	.word	0x3ff00000
   83818:	3fd33332 	.word	0x3fd33332
   8381c:	3fe90000 	.word	0x3fe90000
   83820:	3fe70000 	.word	0x3fe70000
   83824:	3fd20000 	.word	0x3fd20000

00083828 <__kernel_rem_pio2>:
   83828:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8382c:	461f      	mov	r7, r3
   8382e:	f5ad 7d19 	sub.w	sp, sp, #612	; 0x264
   83832:	4cbf      	ldr	r4, [pc, #764]	; (83b30 <__kernel_rem_pio2+0x308>)
   83834:	9307      	str	r3, [sp, #28]
   83836:	1ed3      	subs	r3, r2, #3
   83838:	fb84 5403 	smull	r5, r4, r4, r3
   8383c:	17db      	asrs	r3, r3, #31
   8383e:	ebc3 03a4 	rsb	r3, r3, r4, asr #2
   83842:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
   83846:	4cbb      	ldr	r4, [pc, #748]	; (83b34 <__kernel_rem_pio2+0x30c>)
   83848:	9ea2      	ldr	r6, [sp, #648]	; 0x288
   8384a:	1c6b      	adds	r3, r5, #1
   8384c:	f854 6026 	ldr.w	r6, [r4, r6, lsl #2]
   83850:	eba3 0383 	sub.w	r3, r3, r3, lsl #2
   83854:	1e7c      	subs	r4, r7, #1
   83856:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
   8385a:	9305      	str	r3, [sp, #20]
   8385c:	1933      	adds	r3, r6, r4
   8385e:	9509      	str	r5, [sp, #36]	; 0x24
   83860:	9604      	str	r6, [sp, #16]
   83862:	9401      	str	r4, [sp, #4]
   83864:	4607      	mov	r7, r0
   83866:	910b      	str	r1, [sp, #44]	; 0x2c
   83868:	eba5 0804 	sub.w	r8, r5, r4
   8386c:	d41d      	bmi.n	838aa <__kernel_rem_pio2+0x82>
   8386e:	4443      	add	r3, r8
   83870:	2400      	movs	r4, #0
   83872:	2500      	movs	r5, #0
   83874:	1c5e      	adds	r6, r3, #1
   83876:	f10d 0980 	add.w	r9, sp, #128	; 0x80
   8387a:	f8dd a28c 	ldr.w	sl, [sp, #652]	; 0x28c
   8387e:	e009      	b.n	83894 <__kernel_rem_pio2+0x6c>
   83880:	f85a 0028 	ldr.w	r0, [sl, r8, lsl #2]
   83884:	f000 ff04 	bl	84690 <__aeabi_i2d>
   83888:	f108 0801 	add.w	r8, r8, #1
   8388c:	45b0      	cmp	r8, r6
   8388e:	e8e9 0102 	strd	r0, r1, [r9], #8
   83892:	d00a      	beq.n	838aa <__kernel_rem_pio2+0x82>
   83894:	f1b8 0f00 	cmp.w	r8, #0
   83898:	daf2      	bge.n	83880 <__kernel_rem_pio2+0x58>
   8389a:	4620      	mov	r0, r4
   8389c:	4629      	mov	r1, r5
   8389e:	f108 0801 	add.w	r8, r8, #1
   838a2:	45b0      	cmp	r8, r6
   838a4:	e8e9 0102 	strd	r0, r1, [r9], #8
   838a8:	d1f4      	bne.n	83894 <__kernel_rem_pio2+0x6c>
   838aa:	9b04      	ldr	r3, [sp, #16]
   838ac:	2b00      	cmp	r3, #0
   838ae:	f2c0 83b7 	blt.w	84020 <__kernel_rem_pio2+0x7f8>
   838b2:	f1a7 0208 	sub.w	r2, r7, #8
   838b6:	4611      	mov	r1, r2
   838b8:	9b07      	ldr	r3, [sp, #28]
   838ba:	9203      	str	r2, [sp, #12]
   838bc:	00db      	lsls	r3, r3, #3
   838be:	aa20      	add	r2, sp, #128	; 0x80
   838c0:	eb02 0903 	add.w	r9, r2, r3
   838c4:	9302      	str	r3, [sp, #8]
   838c6:	eb01 0803 	add.w	r8, r1, r3
   838ca:	9b04      	ldr	r3, [sp, #16]
   838cc:	aa72      	add	r2, sp, #456	; 0x1c8
   838ce:	eb02 0bc3 	add.w	fp, r2, r3, lsl #3
   838d2:	f50d 7ae0 	add.w	sl, sp, #448	; 0x1c0
   838d6:	9b01      	ldr	r3, [sp, #4]
   838d8:	2b00      	cmp	r3, #0
   838da:	f2c0 8195 	blt.w	83c08 <__kernel_rem_pio2+0x3e0>
   838de:	464d      	mov	r5, r9
   838e0:	2600      	movs	r6, #0
   838e2:	2700      	movs	r7, #0
   838e4:	9c03      	ldr	r4, [sp, #12]
   838e6:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
   838ea:	e9f4 0102 	ldrd	r0, r1, [r4, #8]!
   838ee:	f000 ff39 	bl	84764 <__aeabi_dmul>
   838f2:	4602      	mov	r2, r0
   838f4:	460b      	mov	r3, r1
   838f6:	4630      	mov	r0, r6
   838f8:	4639      	mov	r1, r7
   838fa:	f000 fd7d 	bl	843f8 <__adddf3>
   838fe:	4544      	cmp	r4, r8
   83900:	4606      	mov	r6, r0
   83902:	460f      	mov	r7, r1
   83904:	d1ef      	bne.n	838e6 <__kernel_rem_pio2+0xbe>
   83906:	e8ea 6702 	strd	r6, r7, [sl], #8
   8390a:	45da      	cmp	sl, fp
   8390c:	f109 0908 	add.w	r9, r9, #8
   83910:	d1e1      	bne.n	838d6 <__kernel_rem_pio2+0xae>
   83912:	e9dd 1002 	ldrd	r1, r0, [sp, #8]
   83916:	9b04      	ldr	r3, [sp, #16]
   83918:	4401      	add	r1, r0
   8391a:	469b      	mov	fp, r3
   8391c:	468a      	mov	sl, r1
   8391e:	009b      	lsls	r3, r3, #2
   83920:	a90b      	add	r1, sp, #44	; 0x2c
   83922:	f1a3 0208 	sub.w	r2, r3, #8
   83926:	18cb      	adds	r3, r1, r3
   83928:	9308      	str	r3, [sp, #32]
   8392a:	ab0c      	add	r3, sp, #48	; 0x30
   8392c:	4413      	add	r3, r2
   8392e:	930a      	str	r3, [sp, #40]	; 0x28
   83930:	ab98      	add	r3, sp, #608	; 0x260
   83932:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
   83936:	f1bb 0f00 	cmp.w	fp, #0
   8393a:	e953 4528 	ldrd	r4, r5, [r3, #-160]	; 0xa0
   8393e:	dd29      	ble.n	83994 <__kernel_rem_pio2+0x16c>
   83940:	ab70      	add	r3, sp, #448	; 0x1c0
   83942:	f10d 0930 	add.w	r9, sp, #48	; 0x30
   83946:	eb03 08cb 	add.w	r8, r3, fp, lsl #3
   8394a:	2200      	movs	r2, #0
   8394c:	4b7a      	ldr	r3, [pc, #488]	; (83b38 <__kernel_rem_pio2+0x310>)
   8394e:	4620      	mov	r0, r4
   83950:	4629      	mov	r1, r5
   83952:	f000 ff07 	bl	84764 <__aeabi_dmul>
   83956:	f001 f99f 	bl	84c98 <__aeabi_d2iz>
   8395a:	f000 fe99 	bl	84690 <__aeabi_i2d>
   8395e:	2200      	movs	r2, #0
   83960:	4b76      	ldr	r3, [pc, #472]	; (83b3c <__kernel_rem_pio2+0x314>)
   83962:	4606      	mov	r6, r0
   83964:	460f      	mov	r7, r1
   83966:	f000 fefd 	bl	84764 <__aeabi_dmul>
   8396a:	4602      	mov	r2, r0
   8396c:	460b      	mov	r3, r1
   8396e:	4620      	mov	r0, r4
   83970:	4629      	mov	r1, r5
   83972:	f000 fd3f 	bl	843f4 <__aeabi_dsub>
   83976:	f001 f98f 	bl	84c98 <__aeabi_d2iz>
   8397a:	e978 2302 	ldrd	r2, r3, [r8, #-8]!
   8397e:	f849 0b04 	str.w	r0, [r9], #4
   83982:	4639      	mov	r1, r7
   83984:	4630      	mov	r0, r6
   83986:	f000 fd37 	bl	843f8 <__adddf3>
   8398a:	ab70      	add	r3, sp, #448	; 0x1c0
   8398c:	4598      	cmp	r8, r3
   8398e:	4604      	mov	r4, r0
   83990:	460d      	mov	r5, r1
   83992:	d1da      	bne.n	8394a <__kernel_rem_pio2+0x122>
   83994:	f8dd 9014 	ldr.w	r9, [sp, #20]
   83998:	4620      	mov	r0, r4
   8399a:	4629      	mov	r1, r5
   8399c:	464a      	mov	r2, r9
   8399e:	f000 fcab 	bl	842f8 <scalbn>
   839a2:	2200      	movs	r2, #0
   839a4:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
   839a8:	4604      	mov	r4, r0
   839aa:	460d      	mov	r5, r1
   839ac:	f000 feda 	bl	84764 <__aeabi_dmul>
   839b0:	f000 fc1e 	bl	841f0 <floor>
   839b4:	2200      	movs	r2, #0
   839b6:	4b62      	ldr	r3, [pc, #392]	; (83b40 <__kernel_rem_pio2+0x318>)
   839b8:	f000 fed4 	bl	84764 <__aeabi_dmul>
   839bc:	4602      	mov	r2, r0
   839be:	460b      	mov	r3, r1
   839c0:	4620      	mov	r0, r4
   839c2:	4629      	mov	r1, r5
   839c4:	f000 fd16 	bl	843f4 <__aeabi_dsub>
   839c8:	460d      	mov	r5, r1
   839ca:	4604      	mov	r4, r0
   839cc:	f001 f964 	bl	84c98 <__aeabi_d2iz>
   839d0:	4680      	mov	r8, r0
   839d2:	f000 fe5d 	bl	84690 <__aeabi_i2d>
   839d6:	460b      	mov	r3, r1
   839d8:	4602      	mov	r2, r0
   839da:	4629      	mov	r1, r5
   839dc:	4620      	mov	r0, r4
   839de:	f000 fd09 	bl	843f4 <__aeabi_dsub>
   839e2:	464b      	mov	r3, r9
   839e4:	2b00      	cmp	r3, #0
   839e6:	4606      	mov	r6, r0
   839e8:	460f      	mov	r7, r1
   839ea:	f340 80e1 	ble.w	83bb0 <__kernel_rem_pio2+0x388>
   839ee:	f10b 31ff 	add.w	r1, fp, #4294967295	; 0xffffffff
   839f2:	aa0c      	add	r2, sp, #48	; 0x30
   839f4:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
   839f8:	f1c9 0318 	rsb	r3, r9, #24
   839fc:	fa45 f203 	asr.w	r2, r5, r3
   83a00:	fa02 f303 	lsl.w	r3, r2, r3
   83a04:	1aeb      	subs	r3, r5, r3
   83a06:	a80c      	add	r0, sp, #48	; 0x30
   83a08:	f1c9 0517 	rsb	r5, r9, #23
   83a0c:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
   83a10:	4490      	add	r8, r2
   83a12:	fa43 f505 	asr.w	r5, r3, r5
   83a16:	2d00      	cmp	r5, #0
   83a18:	dd2c      	ble.n	83a74 <__kernel_rem_pio2+0x24c>
   83a1a:	f1bb 0f00 	cmp.w	fp, #0
   83a1e:	f108 0801 	add.w	r8, r8, #1
   83a22:	f340 8299 	ble.w	83f58 <__kernel_rem_pio2+0x730>
   83a26:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   83a28:	2c00      	cmp	r4, #0
   83a2a:	f040 80a7 	bne.w	83b7c <__kernel_rem_pio2+0x354>
   83a2e:	f1bb 0f01 	cmp.w	fp, #1
   83a32:	d00a      	beq.n	83a4a <__kernel_rem_pio2+0x222>
   83a34:	2201      	movs	r2, #1
   83a36:	a90c      	add	r1, sp, #48	; 0x30
   83a38:	f851 4f04 	ldr.w	r4, [r1, #4]!
   83a3c:	1c53      	adds	r3, r2, #1
   83a3e:	2c00      	cmp	r4, #0
   83a40:	f040 809e 	bne.w	83b80 <__kernel_rem_pio2+0x358>
   83a44:	459b      	cmp	fp, r3
   83a46:	461a      	mov	r2, r3
   83a48:	d1f6      	bne.n	83a38 <__kernel_rem_pio2+0x210>
   83a4a:	9b05      	ldr	r3, [sp, #20]
   83a4c:	2b00      	cmp	r3, #0
   83a4e:	dd0e      	ble.n	83a6e <__kernel_rem_pio2+0x246>
   83a50:	2b01      	cmp	r3, #1
   83a52:	f000 81b5 	beq.w	83dc0 <__kernel_rem_pio2+0x598>
   83a56:	2b02      	cmp	r3, #2
   83a58:	d109      	bne.n	83a6e <__kernel_rem_pio2+0x246>
   83a5a:	f10b 32ff 	add.w	r2, fp, #4294967295	; 0xffffffff
   83a5e:	ab0c      	add	r3, sp, #48	; 0x30
   83a60:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
   83a64:	a90c      	add	r1, sp, #48	; 0x30
   83a66:	f3c3 0315 	ubfx	r3, r3, #0, #22
   83a6a:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
   83a6e:	2d02      	cmp	r5, #2
   83a70:	f000 80af 	beq.w	83bd2 <__kernel_rem_pio2+0x3aa>
   83a74:	2200      	movs	r2, #0
   83a76:	2300      	movs	r3, #0
   83a78:	4630      	mov	r0, r6
   83a7a:	4639      	mov	r1, r7
   83a7c:	f001 f8da 	bl	84c34 <__aeabi_dcmpeq>
   83a80:	2800      	cmp	r0, #0
   83a82:	f000 826b 	beq.w	83f5c <__kernel_rem_pio2+0x734>
   83a86:	9b04      	ldr	r3, [sp, #16]
   83a88:	f10b 39ff 	add.w	r9, fp, #4294967295	; 0xffffffff
   83a8c:	454b      	cmp	r3, r9
   83a8e:	dc10      	bgt.n	83ab2 <__kernel_rem_pio2+0x28a>
   83a90:	2200      	movs	r2, #0
   83a92:	f10b 4380 	add.w	r3, fp, #1073741824	; 0x40000000
   83a96:	3b01      	subs	r3, #1
   83a98:	a90c      	add	r1, sp, #48	; 0x30
   83a9a:	9808      	ldr	r0, [sp, #32]
   83a9c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
   83aa0:	f853 1904 	ldr.w	r1, [r3], #-4
   83aa4:	4283      	cmp	r3, r0
   83aa6:	ea42 0201 	orr.w	r2, r2, r1
   83aaa:	d1f9      	bne.n	83aa0 <__kernel_rem_pio2+0x278>
   83aac:	2a00      	cmp	r2, #0
   83aae:	f040 80b5 	bne.w	83c1c <__kernel_rem_pio2+0x3f4>
   83ab2:	9b04      	ldr	r3, [sp, #16]
   83ab4:	aa0c      	add	r2, sp, #48	; 0x30
   83ab6:	3b01      	subs	r3, #1
   83ab8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
   83abc:	2b00      	cmp	r3, #0
   83abe:	f040 80a1 	bne.w	83c04 <__kernel_rem_pio2+0x3dc>
   83ac2:	2301      	movs	r3, #1
   83ac4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   83ac6:	f852 1904 	ldr.w	r1, [r2], #-4
   83aca:	3301      	adds	r3, #1
   83acc:	2900      	cmp	r1, #0
   83ace:	d0fa      	beq.n	83ac6 <__kernel_rem_pio2+0x29e>
   83ad0:	445b      	add	r3, fp
   83ad2:	f10b 0901 	add.w	r9, fp, #1
   83ad6:	4599      	cmp	r9, r3
   83ad8:	9306      	str	r3, [sp, #24]
   83ada:	dc49      	bgt.n	83b70 <__kernel_rem_pio2+0x348>
   83adc:	9a09      	ldr	r2, [sp, #36]	; 0x24
   83ade:	9907      	ldr	r1, [sp, #28]
   83ae0:	eb09 0802 	add.w	r8, r9, r2
   83ae4:	eb01 050b 	add.w	r5, r1, fp
   83ae8:	f108 4880 	add.w	r8, r8, #1073741824	; 0x40000000
   83aec:	eb02 0b03 	add.w	fp, r2, r3
   83af0:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   83af2:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
   83af6:	eb03 0888 	add.w	r8, r3, r8, lsl #2
   83afa:	ab70      	add	r3, sp, #448	; 0x1c0
   83afc:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
   83b00:	9ba3      	ldr	r3, [sp, #652]	; 0x28c
   83b02:	a920      	add	r1, sp, #128	; 0x80
   83b04:	eb03 038b 	add.w	r3, r3, fp, lsl #2
   83b08:	eb01 05c5 	add.w	r5, r1, r5, lsl #3
   83b0c:	9302      	str	r3, [sp, #8]
   83b0e:	f858 0f04 	ldr.w	r0, [r8, #4]!
   83b12:	f000 fdbd 	bl	84690 <__aeabi_i2d>
   83b16:	9b01      	ldr	r3, [sp, #4]
   83b18:	f105 0b08 	add.w	fp, r5, #8
   83b1c:	2b00      	cmp	r3, #0
   83b1e:	e9c5 0100 	strd	r0, r1, [r5]
   83b22:	db28      	blt.n	83b76 <__kernel_rem_pio2+0x34e>
   83b24:	9c03      	ldr	r4, [sp, #12]
   83b26:	2600      	movs	r6, #0
   83b28:	2700      	movs	r7, #0
   83b2a:	3d08      	subs	r5, #8
   83b2c:	e00c      	b.n	83b48 <__kernel_rem_pio2+0x320>
   83b2e:	bf00      	nop
   83b30:	2aaaaaab 	.word	0x2aaaaaab
   83b34:	0008a118 	.word	0x0008a118
   83b38:	3e700000 	.word	0x3e700000
   83b3c:	41700000 	.word	0x41700000
   83b40:	40200000 	.word	0x40200000
   83b44:	e875 0102 	ldrd	r0, r1, [r5], #-8
   83b48:	e9f4 2302 	ldrd	r2, r3, [r4, #8]!
   83b4c:	f000 fe0a 	bl	84764 <__aeabi_dmul>
   83b50:	4602      	mov	r2, r0
   83b52:	460b      	mov	r3, r1
   83b54:	4630      	mov	r0, r6
   83b56:	4639      	mov	r1, r7
   83b58:	f000 fc4e 	bl	843f8 <__adddf3>
   83b5c:	4554      	cmp	r4, sl
   83b5e:	4606      	mov	r6, r0
   83b60:	460f      	mov	r7, r1
   83b62:	d1ef      	bne.n	83b44 <__kernel_rem_pio2+0x31c>
   83b64:	9b02      	ldr	r3, [sp, #8]
   83b66:	e8e9 6702 	strd	r6, r7, [r9], #8
   83b6a:	4598      	cmp	r8, r3
   83b6c:	465d      	mov	r5, fp
   83b6e:	d1ce      	bne.n	83b0e <__kernel_rem_pio2+0x2e6>
   83b70:	f8dd b018 	ldr.w	fp, [sp, #24]
   83b74:	e6dc      	b.n	83930 <__kernel_rem_pio2+0x108>
   83b76:	2600      	movs	r6, #0
   83b78:	2700      	movs	r7, #0
   83b7a:	e7f3      	b.n	83b64 <__kernel_rem_pio2+0x33c>
   83b7c:	2301      	movs	r3, #1
   83b7e:	2200      	movs	r2, #0
   83b80:	f1c4 7480 	rsb	r4, r4, #16777216	; 0x1000000
   83b84:	a90c      	add	r1, sp, #48	; 0x30
   83b86:	459b      	cmp	fp, r3
   83b88:	f841 4022 	str.w	r4, [r1, r2, lsl #2]
   83b8c:	dd0e      	ble.n	83bac <__kernel_rem_pio2+0x384>
   83b8e:	f851 2023 	ldr.w	r2, [r1, r3, lsl #2]
   83b92:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
   83b96:	eb01 0383 	add.w	r3, r1, r3, lsl #2
   83b9a:	eb01 018b 	add.w	r1, r1, fp, lsl #2
   83b9e:	e000      	b.n	83ba2 <__kernel_rem_pio2+0x37a>
   83ba0:	681a      	ldr	r2, [r3, #0]
   83ba2:	1a82      	subs	r2, r0, r2
   83ba4:	f843 2b04 	str.w	r2, [r3], #4
   83ba8:	428b      	cmp	r3, r1
   83baa:	d1f9      	bne.n	83ba0 <__kernel_rem_pio2+0x378>
   83bac:	2401      	movs	r4, #1
   83bae:	e74c      	b.n	83a4a <__kernel_rem_pio2+0x222>
   83bb0:	d106      	bne.n	83bc0 <__kernel_rem_pio2+0x398>
   83bb2:	f10b 33ff 	add.w	r3, fp, #4294967295	; 0xffffffff
   83bb6:	aa0c      	add	r2, sp, #48	; 0x30
   83bb8:	f852 5023 	ldr.w	r5, [r2, r3, lsl #2]
   83bbc:	15ed      	asrs	r5, r5, #23
   83bbe:	e72a      	b.n	83a16 <__kernel_rem_pio2+0x1ee>
   83bc0:	2200      	movs	r2, #0
   83bc2:	4b87      	ldr	r3, [pc, #540]	; (83de0 <__kernel_rem_pio2+0x5b8>)
   83bc4:	f001 f854 	bl	84c70 <__aeabi_dcmpge>
   83bc8:	2800      	cmp	r0, #0
   83bca:	f040 81be 	bne.w	83f4a <__kernel_rem_pio2+0x722>
   83bce:	4605      	mov	r5, r0
   83bd0:	e750      	b.n	83a74 <__kernel_rem_pio2+0x24c>
   83bd2:	4632      	mov	r2, r6
   83bd4:	463b      	mov	r3, r7
   83bd6:	2000      	movs	r0, #0
   83bd8:	4982      	ldr	r1, [pc, #520]	; (83de4 <__kernel_rem_pio2+0x5bc>)
   83bda:	f000 fc0b 	bl	843f4 <__aeabi_dsub>
   83bde:	4606      	mov	r6, r0
   83be0:	460f      	mov	r7, r1
   83be2:	2c00      	cmp	r4, #0
   83be4:	f43f af46 	beq.w	83a74 <__kernel_rem_pio2+0x24c>
   83be8:	9a05      	ldr	r2, [sp, #20]
   83bea:	2000      	movs	r0, #0
   83bec:	497d      	ldr	r1, [pc, #500]	; (83de4 <__kernel_rem_pio2+0x5bc>)
   83bee:	f000 fb83 	bl	842f8 <scalbn>
   83bf2:	4602      	mov	r2, r0
   83bf4:	460b      	mov	r3, r1
   83bf6:	4630      	mov	r0, r6
   83bf8:	4639      	mov	r1, r7
   83bfa:	f000 fbfb 	bl	843f4 <__aeabi_dsub>
   83bfe:	4606      	mov	r6, r0
   83c00:	460f      	mov	r7, r1
   83c02:	e737      	b.n	83a74 <__kernel_rem_pio2+0x24c>
   83c04:	2301      	movs	r3, #1
   83c06:	e763      	b.n	83ad0 <__kernel_rem_pio2+0x2a8>
   83c08:	2600      	movs	r6, #0
   83c0a:	2700      	movs	r7, #0
   83c0c:	e8ea 6702 	strd	r6, r7, [sl], #8
   83c10:	45da      	cmp	sl, fp
   83c12:	f109 0908 	add.w	r9, r9, #8
   83c16:	f47f ae5e 	bne.w	838d6 <__kernel_rem_pio2+0xae>
   83c1a:	e67a      	b.n	83912 <__kernel_rem_pio2+0xea>
   83c1c:	9a05      	ldr	r2, [sp, #20]
   83c1e:	ab0c      	add	r3, sp, #48	; 0x30
   83c20:	f853 3029 	ldr.w	r3, [r3, r9, lsl #2]
   83c24:	3a18      	subs	r2, #24
   83c26:	e9cd 8506 	strd	r8, r5, [sp, #24]
   83c2a:	9205      	str	r2, [sp, #20]
   83c2c:	b96b      	cbnz	r3, 83c4a <__kernel_rem_pio2+0x422>
   83c2e:	f109 4380 	add.w	r3, r9, #1073741824	; 0x40000000
   83c32:	3b01      	subs	r3, #1
   83c34:	a90c      	add	r1, sp, #48	; 0x30
   83c36:	eb01 0383 	add.w	r3, r1, r3, lsl #2
   83c3a:	f853 1904 	ldr.w	r1, [r3], #-4
   83c3e:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
   83c42:	3a18      	subs	r2, #24
   83c44:	2900      	cmp	r1, #0
   83c46:	d0f8      	beq.n	83c3a <__kernel_rem_pio2+0x412>
   83c48:	9205      	str	r2, [sp, #20]
   83c4a:	9a05      	ldr	r2, [sp, #20]
   83c4c:	2000      	movs	r0, #0
   83c4e:	4965      	ldr	r1, [pc, #404]	; (83de4 <__kernel_rem_pio2+0x5bc>)
   83c50:	f000 fb52 	bl	842f8 <scalbn>
   83c54:	f1b9 0f00 	cmp.w	r9, #0
   83c58:	4604      	mov	r4, r0
   83c5a:	460d      	mov	r5, r1
   83c5c:	f2c0 81e7 	blt.w	8402e <__kernel_rem_pio2+0x806>
   83c60:	f04f 0a00 	mov.w	sl, #0
   83c64:	ea4f 03c9 	mov.w	r3, r9, lsl #3
   83c68:	aa70      	add	r2, sp, #448	; 0x1c0
   83c6a:	eb02 0803 	add.w	r8, r2, r3
   83c6e:	9308      	str	r3, [sp, #32]
   83c70:	ab0c      	add	r3, sp, #48	; 0x30
   83c72:	eb03 0689 	add.w	r6, r3, r9, lsl #2
   83c76:	f8df b170 	ldr.w	fp, [pc, #368]	; 83de8 <__kernel_rem_pio2+0x5c0>
   83c7a:	f108 0708 	add.w	r7, r8, #8
   83c7e:	3604      	adds	r6, #4
   83c80:	f856 0d04 	ldr.w	r0, [r6, #-4]!
   83c84:	f000 fd04 	bl	84690 <__aeabi_i2d>
   83c88:	4622      	mov	r2, r4
   83c8a:	462b      	mov	r3, r5
   83c8c:	f000 fd6a 	bl	84764 <__aeabi_dmul>
   83c90:	465b      	mov	r3, fp
   83c92:	e967 0102 	strd	r0, r1, [r7, #-8]!
   83c96:	4652      	mov	r2, sl
   83c98:	4620      	mov	r0, r4
   83c9a:	4629      	mov	r1, r5
   83c9c:	f000 fd62 	bl	84764 <__aeabi_dmul>
   83ca0:	ab0c      	add	r3, sp, #48	; 0x30
   83ca2:	429e      	cmp	r6, r3
   83ca4:	4604      	mov	r4, r0
   83ca6:	460d      	mov	r5, r1
   83ca8:	d1ea      	bne.n	83c80 <__kernel_rem_pio2+0x458>
   83caa:	46c3      	mov	fp, r8
   83cac:	f04f 0a00 	mov.w	sl, #0
   83cb0:	ab48      	add	r3, sp, #288	; 0x120
   83cb2:	9303      	str	r3, [sp, #12]
   83cb4:	9301      	str	r3, [sp, #4]
   83cb6:	f8cd 9014 	str.w	r9, [sp, #20]
   83cba:	f109 0301 	add.w	r3, r9, #1
   83cbe:	f8dd 9010 	ldr.w	r9, [sp, #16]
   83cc2:	9302      	str	r3, [sp, #8]
   83cc4:	f1b9 0f00 	cmp.w	r9, #0
   83cc8:	f2c0 813c 	blt.w	83f44 <__kernel_rem_pio2+0x71c>
   83ccc:	a342      	add	r3, pc, #264	; (adr r3, 83dd8 <__kernel_rem_pio2+0x5b0>)
   83cce:	e9d3 2300 	ldrd	r2, r3, [r3]
   83cd2:	f8df 8118 	ldr.w	r8, [pc, #280]	; 83dec <__kernel_rem_pio2+0x5c4>
   83cd6:	465d      	mov	r5, fp
   83cd8:	2600      	movs	r6, #0
   83cda:	2700      	movs	r7, #0
   83cdc:	2400      	movs	r4, #0
   83cde:	e003      	b.n	83ce8 <__kernel_rem_pio2+0x4c0>
   83ce0:	4554      	cmp	r4, sl
   83ce2:	dc10      	bgt.n	83d06 <__kernel_rem_pio2+0x4de>
   83ce4:	e8f8 2302 	ldrd	r2, r3, [r8], #8
   83ce8:	e8f5 0102 	ldrd	r0, r1, [r5], #8
   83cec:	f000 fd3a 	bl	84764 <__aeabi_dmul>
   83cf0:	4602      	mov	r2, r0
   83cf2:	460b      	mov	r3, r1
   83cf4:	4630      	mov	r0, r6
   83cf6:	4639      	mov	r1, r7
   83cf8:	f000 fb7e 	bl	843f8 <__adddf3>
   83cfc:	3401      	adds	r4, #1
   83cfe:	45a1      	cmp	r9, r4
   83d00:	4606      	mov	r6, r0
   83d02:	460f      	mov	r7, r1
   83d04:	daec      	bge.n	83ce0 <__kernel_rem_pio2+0x4b8>
   83d06:	9b01      	ldr	r3, [sp, #4]
   83d08:	f10a 0a01 	add.w	sl, sl, #1
   83d0c:	e8e3 6702 	strd	r6, r7, [r3], #8
   83d10:	9301      	str	r3, [sp, #4]
   83d12:	9b02      	ldr	r3, [sp, #8]
   83d14:	f1ab 0b08 	sub.w	fp, fp, #8
   83d18:	459a      	cmp	sl, r3
   83d1a:	d1d3      	bne.n	83cc4 <__kernel_rem_pio2+0x49c>
   83d1c:	9ba2      	ldr	r3, [sp, #648]	; 0x288
   83d1e:	f8dd 9014 	ldr.w	r9, [sp, #20]
   83d22:	2b03      	cmp	r3, #3
   83d24:	d845      	bhi.n	83db2 <__kernel_rem_pio2+0x58a>
   83d26:	e8df f013 	tbh	[pc, r3, lsl #1]
   83d2a:	00ec      	.short	0x00ec
   83d2c:	00060006 	.word	0x00060006
   83d30:	0065      	.short	0x0065
   83d32:	ab48      	add	r3, sp, #288	; 0x120
   83d34:	9303      	str	r3, [sp, #12]
   83d36:	2400      	movs	r4, #0
   83d38:	f1b9 0f00 	cmp.w	r9, #0
   83d3c:	4621      	mov	r1, r4
   83d3e:	db0c      	blt.n	83d5a <__kernel_rem_pio2+0x532>
   83d40:	9b03      	ldr	r3, [sp, #12]
   83d42:	4698      	mov	r8, r3
   83d44:	eb03 05c9 	add.w	r5, r3, r9, lsl #3
   83d48:	3508      	adds	r5, #8
   83d4a:	e975 2302 	ldrd	r2, r3, [r5, #-8]!
   83d4e:	4620      	mov	r0, r4
   83d50:	f000 fb52 	bl	843f8 <__adddf3>
   83d54:	45a8      	cmp	r8, r5
   83d56:	4604      	mov	r4, r0
   83d58:	d1f7      	bne.n	83d4a <__kernel_rem_pio2+0x522>
   83d5a:	9b07      	ldr	r3, [sp, #28]
   83d5c:	2b00      	cmp	r3, #0
   83d5e:	f040 8136 	bne.w	83fce <__kernel_rem_pio2+0x7a6>
   83d62:	4626      	mov	r6, r4
   83d64:	460f      	mov	r7, r1
   83d66:	4622      	mov	r2, r4
   83d68:	460b      	mov	r3, r1
   83d6a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   83d6c:	9903      	ldr	r1, [sp, #12]
   83d6e:	e9c4 6700 	strd	r6, r7, [r4]
   83d72:	e9d1 0100 	ldrd	r0, r1, [r1]
   83d76:	f000 fb3d 	bl	843f4 <__aeabi_dsub>
   83d7a:	f1b9 0f00 	cmp.w	r9, #0
   83d7e:	4607      	mov	r7, r0
   83d80:	460e      	mov	r6, r1
   83d82:	dd11      	ble.n	83da8 <__kernel_rem_pio2+0x580>
   83d84:	4631      	mov	r1, r6
   83d86:	2401      	movs	r4, #1
   83d88:	464e      	mov	r6, r9
   83d8a:	9d03      	ldr	r5, [sp, #12]
   83d8c:	4638      	mov	r0, r7
   83d8e:	e9f5 2302 	ldrd	r2, r3, [r5, #8]!
   83d92:	f000 fb31 	bl	843f8 <__adddf3>
   83d96:	3401      	adds	r4, #1
   83d98:	42a6      	cmp	r6, r4
   83d9a:	4607      	mov	r7, r0
   83d9c:	daf6      	bge.n	83d8c <__kernel_rem_pio2+0x564>
   83d9e:	9b07      	ldr	r3, [sp, #28]
   83da0:	460e      	mov	r6, r1
   83da2:	2b00      	cmp	r3, #0
   83da4:	f040 8125 	bne.w	83ff2 <__kernel_rem_pio2+0x7ca>
   83da8:	463a      	mov	r2, r7
   83daa:	4633      	mov	r3, r6
   83dac:	990b      	ldr	r1, [sp, #44]	; 0x2c
   83dae:	e9c1 2302 	strd	r2, r3, [r1, #8]
   83db2:	9b06      	ldr	r3, [sp, #24]
   83db4:	f003 0007 	and.w	r0, r3, #7
   83db8:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
   83dbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83dc0:	f10b 32ff 	add.w	r2, fp, #4294967295	; 0xffffffff
   83dc4:	ab0c      	add	r3, sp, #48	; 0x30
   83dc6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
   83dca:	a90c      	add	r1, sp, #48	; 0x30
   83dcc:	f3c3 0316 	ubfx	r3, r3, #0, #23
   83dd0:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
   83dd4:	e64b      	b.n	83a6e <__kernel_rem_pio2+0x246>
   83dd6:	bf00      	nop
   83dd8:	40000000 	.word	0x40000000
   83ddc:	3ff921fb 	.word	0x3ff921fb
   83de0:	3fe00000 	.word	0x3fe00000
   83de4:	3ff00000 	.word	0x3ff00000
   83de8:	3e700000 	.word	0x3e700000
   83dec:	0008a130 	.word	0x0008a130
   83df0:	ab48      	add	r3, sp, #288	; 0x120
   83df2:	9303      	str	r3, [sp, #12]
   83df4:	f1b9 0f00 	cmp.w	r9, #0
   83df8:	f340 8135 	ble.w	84066 <__kernel_rem_pio2+0x83e>
   83dfc:	9a03      	ldr	r2, [sp, #12]
   83dfe:	ea4f 03c9 	mov.w	r3, r9, lsl #3
   83e02:	9301      	str	r3, [sp, #4]
   83e04:	18d3      	adds	r3, r2, r3
   83e06:	f8cd 9008 	str.w	r9, [sp, #8]
   83e0a:	4698      	mov	r8, r3
   83e0c:	e9d3 ab00 	ldrd	sl, fp, [r3]
   83e10:	4691      	mov	r9, r2
   83e12:	e958 6702 	ldrd	r6, r7, [r8, #-8]
   83e16:	4652      	mov	r2, sl
   83e18:	465b      	mov	r3, fp
   83e1a:	4630      	mov	r0, r6
   83e1c:	4639      	mov	r1, r7
   83e1e:	f000 faeb 	bl	843f8 <__adddf3>
   83e22:	4604      	mov	r4, r0
   83e24:	460d      	mov	r5, r1
   83e26:	4602      	mov	r2, r0
   83e28:	460b      	mov	r3, r1
   83e2a:	4630      	mov	r0, r6
   83e2c:	4639      	mov	r1, r7
   83e2e:	f000 fae1 	bl	843f4 <__aeabi_dsub>
   83e32:	4652      	mov	r2, sl
   83e34:	465b      	mov	r3, fp
   83e36:	f000 fadf 	bl	843f8 <__adddf3>
   83e3a:	e9c8 0100 	strd	r0, r1, [r8]
   83e3e:	e968 4502 	strd	r4, r5, [r8, #-8]!
   83e42:	45c1      	cmp	r9, r8
   83e44:	46a2      	mov	sl, r4
   83e46:	46ab      	mov	fp, r5
   83e48:	d1e3      	bne.n	83e12 <__kernel_rem_pio2+0x5ea>
   83e4a:	f8dd 9008 	ldr.w	r9, [sp, #8]
   83e4e:	f1b9 0f01 	cmp.w	r9, #1
   83e52:	f340 8108 	ble.w	84066 <__kernel_rem_pio2+0x83e>
   83e56:	9b01      	ldr	r3, [sp, #4]
   83e58:	9a03      	ldr	r2, [sp, #12]
   83e5a:	f50d 7b94 	add.w	fp, sp, #296	; 0x128
   83e5e:	4413      	add	r3, r2
   83e60:	469a      	mov	sl, r3
   83e62:	e9d3 6700 	ldrd	r6, r7, [r3]
   83e66:	9301      	str	r3, [sp, #4]
   83e68:	e95a 8902 	ldrd	r8, r9, [sl, #-8]
   83e6c:	4632      	mov	r2, r6
   83e6e:	463b      	mov	r3, r7
   83e70:	4640      	mov	r0, r8
   83e72:	4649      	mov	r1, r9
   83e74:	f000 fac0 	bl	843f8 <__adddf3>
   83e78:	4604      	mov	r4, r0
   83e7a:	460d      	mov	r5, r1
   83e7c:	4602      	mov	r2, r0
   83e7e:	460b      	mov	r3, r1
   83e80:	4640      	mov	r0, r8
   83e82:	4649      	mov	r1, r9
   83e84:	f000 fab6 	bl	843f4 <__aeabi_dsub>
   83e88:	4632      	mov	r2, r6
   83e8a:	463b      	mov	r3, r7
   83e8c:	f000 fab4 	bl	843f8 <__adddf3>
   83e90:	e9ca 0100 	strd	r0, r1, [sl]
   83e94:	e96a 4502 	strd	r4, r5, [sl, #-8]!
   83e98:	45d3      	cmp	fp, sl
   83e9a:	4626      	mov	r6, r4
   83e9c:	462f      	mov	r7, r5
   83e9e:	d1e3      	bne.n	83e68 <__kernel_rem_pio2+0x640>
   83ea0:	2300      	movs	r3, #0
   83ea2:	4619      	mov	r1, r3
   83ea4:	9c01      	ldr	r4, [sp, #4]
   83ea6:	9a03      	ldr	r2, [sp, #12]
   83ea8:	3408      	adds	r4, #8
   83eaa:	f102 0510 	add.w	r5, r2, #16
   83eae:	461e      	mov	r6, r3
   83eb0:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
   83eb4:	4630      	mov	r0, r6
   83eb6:	f000 fa9f 	bl	843f8 <__adddf3>
   83eba:	42a5      	cmp	r5, r4
   83ebc:	4603      	mov	r3, r0
   83ebe:	d1f6      	bne.n	83eae <__kernel_rem_pio2+0x686>
   83ec0:	468c      	mov	ip, r1
   83ec2:	9a03      	ldr	r2, [sp, #12]
   83ec4:	4611      	mov	r1, r2
   83ec6:	e9d2 8200 	ldrd	r8, r2, [r2]
   83eca:	e9d1 e902 	ldrd	lr, r9, [r1, #8]
   83ece:	9907      	ldr	r1, [sp, #28]
   83ed0:	2900      	cmp	r1, #0
   83ed2:	f000 8091 	beq.w	83ff8 <__kernel_rem_pio2+0x7d0>
   83ed6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
   83ed8:	f109 4000 	add.w	r0, r9, #2147483648	; 0x80000000
   83edc:	6123      	str	r3, [r4, #16]
   83ede:	9b06      	ldr	r3, [sp, #24]
   83ee0:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
   83ee4:	f10c 4100 	add.w	r1, ip, #2147483648	; 0x80000000
   83ee8:	60e0      	str	r0, [r4, #12]
   83eea:	f003 0007 	and.w	r0, r3, #7
   83eee:	6062      	str	r2, [r4, #4]
   83ef0:	6161      	str	r1, [r4, #20]
   83ef2:	f8c4 8000 	str.w	r8, [r4]
   83ef6:	f8c4 e008 	str.w	lr, [r4, #8]
   83efa:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
   83efe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83f02:	2300      	movs	r3, #0
   83f04:	9d08      	ldr	r5, [sp, #32]
   83f06:	9f03      	ldr	r7, [sp, #12]
   83f08:	3508      	adds	r5, #8
   83f0a:	443d      	add	r5, r7
   83f0c:	462e      	mov	r6, r5
   83f0e:	4619      	mov	r1, r3
   83f10:	461c      	mov	r4, r3
   83f12:	e976 2302 	ldrd	r2, r3, [r6, #-8]!
   83f16:	4620      	mov	r0, r4
   83f18:	f000 fa6e 	bl	843f8 <__adddf3>
   83f1c:	42b7      	cmp	r7, r6
   83f1e:	4603      	mov	r3, r0
   83f20:	d1f6      	bne.n	83f10 <__kernel_rem_pio2+0x6e8>
   83f22:	460c      	mov	r4, r1
   83f24:	9a07      	ldr	r2, [sp, #28]
   83f26:	b10a      	cbz	r2, 83f2c <__kernel_rem_pio2+0x704>
   83f28:	f104 4400 	add.w	r4, r4, #2147483648	; 0x80000000
   83f2c:	4618      	mov	r0, r3
   83f2e:	4621      	mov	r1, r4
   83f30:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   83f32:	e9c3 0100 	strd	r0, r1, [r3]
   83f36:	9b06      	ldr	r3, [sp, #24]
   83f38:	f003 0007 	and.w	r0, r3, #7
   83f3c:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
   83f40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83f44:	2600      	movs	r6, #0
   83f46:	2700      	movs	r7, #0
   83f48:	e6dd      	b.n	83d06 <__kernel_rem_pio2+0x4de>
   83f4a:	f1bb 0f00 	cmp.w	fp, #0
   83f4e:	f108 0801 	add.w	r8, r8, #1
   83f52:	dd7e      	ble.n	84052 <__kernel_rem_pio2+0x82a>
   83f54:	2502      	movs	r5, #2
   83f56:	e566      	b.n	83a26 <__kernel_rem_pio2+0x1fe>
   83f58:	2400      	movs	r4, #0
   83f5a:	e576      	b.n	83a4a <__kernel_rem_pio2+0x222>
   83f5c:	e9cd 8506 	strd	r8, r5, [sp, #24]
   83f60:	9d05      	ldr	r5, [sp, #20]
   83f62:	4630      	mov	r0, r6
   83f64:	4639      	mov	r1, r7
   83f66:	426a      	negs	r2, r5
   83f68:	f000 f9c6 	bl	842f8 <scalbn>
   83f6c:	2200      	movs	r2, #0
   83f6e:	4b3f      	ldr	r3, [pc, #252]	; (8406c <__kernel_rem_pio2+0x844>)
   83f70:	4606      	mov	r6, r0
   83f72:	460f      	mov	r7, r1
   83f74:	f000 fe7c 	bl	84c70 <__aeabi_dcmpge>
   83f78:	b300      	cbz	r0, 83fbc <__kernel_rem_pio2+0x794>
   83f7a:	2200      	movs	r2, #0
   83f7c:	4b3c      	ldr	r3, [pc, #240]	; (84070 <__kernel_rem_pio2+0x848>)
   83f7e:	4630      	mov	r0, r6
   83f80:	4639      	mov	r1, r7
   83f82:	f000 fbef 	bl	84764 <__aeabi_dmul>
   83f86:	f000 fe87 	bl	84c98 <__aeabi_d2iz>
   83f8a:	4604      	mov	r4, r0
   83f8c:	f000 fb80 	bl	84690 <__aeabi_i2d>
   83f90:	2200      	movs	r2, #0
   83f92:	4b36      	ldr	r3, [pc, #216]	; (8406c <__kernel_rem_pio2+0x844>)
   83f94:	f000 fbe6 	bl	84764 <__aeabi_dmul>
   83f98:	460b      	mov	r3, r1
   83f9a:	4602      	mov	r2, r0
   83f9c:	4639      	mov	r1, r7
   83f9e:	4630      	mov	r0, r6
   83fa0:	f000 fa28 	bl	843f4 <__aeabi_dsub>
   83fa4:	f000 fe78 	bl	84c98 <__aeabi_d2iz>
   83fa8:	f10b 0901 	add.w	r9, fp, #1
   83fac:	ab0c      	add	r3, sp, #48	; 0x30
   83fae:	3518      	adds	r5, #24
   83fb0:	f843 002b 	str.w	r0, [r3, fp, lsl #2]
   83fb4:	9505      	str	r5, [sp, #20]
   83fb6:	f843 4029 	str.w	r4, [r3, r9, lsl #2]
   83fba:	e646      	b.n	83c4a <__kernel_rem_pio2+0x422>
   83fbc:	4630      	mov	r0, r6
   83fbe:	4639      	mov	r1, r7
   83fc0:	f000 fe6a 	bl	84c98 <__aeabi_d2iz>
   83fc4:	ab0c      	add	r3, sp, #48	; 0x30
   83fc6:	46d9      	mov	r9, fp
   83fc8:	f843 002b 	str.w	r0, [r3, fp, lsl #2]
   83fcc:	e63d      	b.n	83c4a <__kernel_rem_pio2+0x422>
   83fce:	460b      	mov	r3, r1
   83fd0:	f101 4500 	add.w	r5, r1, #2147483648	; 0x80000000
   83fd4:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
   83fd6:	9903      	ldr	r1, [sp, #12]
   83fd8:	e9c6 4500 	strd	r4, r5, [r6]
   83fdc:	e9d1 0100 	ldrd	r0, r1, [r1]
   83fe0:	4622      	mov	r2, r4
   83fe2:	f000 fa07 	bl	843f4 <__aeabi_dsub>
   83fe6:	f1b9 0f00 	cmp.w	r9, #0
   83fea:	4607      	mov	r7, r0
   83fec:	460e      	mov	r6, r1
   83fee:	f73f aec9 	bgt.w	83d84 <__kernel_rem_pio2+0x55c>
   83ff2:	f106 4600 	add.w	r6, r6, #2147483648	; 0x80000000
   83ff6:	e6d7      	b.n	83da8 <__kernel_rem_pio2+0x580>
   83ff8:	4618      	mov	r0, r3
   83ffa:	4646      	mov	r6, r8
   83ffc:	4674      	mov	r4, lr
   83ffe:	4617      	mov	r7, r2
   84000:	464d      	mov	r5, r9
   84002:	4661      	mov	r1, ip
   84004:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   84006:	e9c3 0104 	strd	r0, r1, [r3, #16]
   8400a:	e9c3 6700 	strd	r6, r7, [r3]
   8400e:	e9c3 4502 	strd	r4, r5, [r3, #8]
   84012:	9b06      	ldr	r3, [sp, #24]
   84014:	f003 0007 	and.w	r0, r3, #7
   84018:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
   8401c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84020:	f1a7 0308 	sub.w	r3, r7, #8
   84024:	9303      	str	r3, [sp, #12]
   84026:	9b07      	ldr	r3, [sp, #28]
   84028:	00db      	lsls	r3, r3, #3
   8402a:	9302      	str	r3, [sp, #8]
   8402c:	e471      	b.n	83912 <__kernel_rem_pio2+0xea>
   8402e:	9ba2      	ldr	r3, [sp, #648]	; 0x288
   84030:	2b03      	cmp	r3, #3
   84032:	f63f aebe 	bhi.w	83db2 <__kernel_rem_pio2+0x58a>
   84036:	a201      	add	r2, pc, #4	; (adr r2, 8403c <__kernel_rem_pio2+0x814>)
   84038:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
   8403c:	0008404d 	.word	0x0008404d
   84040:	00083d33 	.word	0x00083d33
   84044:	00083d33 	.word	0x00083d33
   84048:	00083df1 	.word	0x00083df1
   8404c:	2300      	movs	r3, #0
   8404e:	461c      	mov	r4, r3
   84050:	e768      	b.n	83f24 <__kernel_rem_pio2+0x6fc>
   84052:	4632      	mov	r2, r6
   84054:	463b      	mov	r3, r7
   84056:	2000      	movs	r0, #0
   84058:	4906      	ldr	r1, [pc, #24]	; (84074 <__kernel_rem_pio2+0x84c>)
   8405a:	f000 f9cb 	bl	843f4 <__aeabi_dsub>
   8405e:	2502      	movs	r5, #2
   84060:	4606      	mov	r6, r0
   84062:	460f      	mov	r7, r1
   84064:	e506      	b.n	83a74 <__kernel_rem_pio2+0x24c>
   84066:	2300      	movs	r3, #0
   84068:	469c      	mov	ip, r3
   8406a:	e72a      	b.n	83ec2 <__kernel_rem_pio2+0x69a>
   8406c:	41700000 	.word	0x41700000
   84070:	3e700000 	.word	0x3e700000
   84074:	3ff00000 	.word	0x3ff00000

00084078 <__kernel_sin>:
   84078:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8407c:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
   84080:	f1b6 5f79 	cmp.w	r6, #1044381696	; 0x3e400000
   84084:	b085      	sub	sp, #20
   84086:	460c      	mov	r4, r1
   84088:	4690      	mov	r8, r2
   8408a:	4699      	mov	r9, r3
   8408c:	4605      	mov	r5, r0
   8408e:	da04      	bge.n	8409a <__kernel_sin+0x22>
   84090:	f000 fe02 	bl	84c98 <__aeabi_d2iz>
   84094:	2800      	cmp	r0, #0
   84096:	f000 8085 	beq.w	841a4 <__kernel_sin+0x12c>
   8409a:	462a      	mov	r2, r5
   8409c:	4623      	mov	r3, r4
   8409e:	4628      	mov	r0, r5
   840a0:	4621      	mov	r1, r4
   840a2:	f000 fb5f 	bl	84764 <__aeabi_dmul>
   840a6:	4606      	mov	r6, r0
   840a8:	460f      	mov	r7, r1
   840aa:	4602      	mov	r2, r0
   840ac:	460b      	mov	r3, r1
   840ae:	4628      	mov	r0, r5
   840b0:	4621      	mov	r1, r4
   840b2:	f000 fb57 	bl	84764 <__aeabi_dmul>
   840b6:	a33e      	add	r3, pc, #248	; (adr r3, 841b0 <__kernel_sin+0x138>)
   840b8:	e9d3 2300 	ldrd	r2, r3, [r3]
   840bc:	4682      	mov	sl, r0
   840be:	468b      	mov	fp, r1
   840c0:	4630      	mov	r0, r6
   840c2:	4639      	mov	r1, r7
   840c4:	f000 fb4e 	bl	84764 <__aeabi_dmul>
   840c8:	a33b      	add	r3, pc, #236	; (adr r3, 841b8 <__kernel_sin+0x140>)
   840ca:	e9d3 2300 	ldrd	r2, r3, [r3]
   840ce:	f000 f991 	bl	843f4 <__aeabi_dsub>
   840d2:	4632      	mov	r2, r6
   840d4:	463b      	mov	r3, r7
   840d6:	f000 fb45 	bl	84764 <__aeabi_dmul>
   840da:	a339      	add	r3, pc, #228	; (adr r3, 841c0 <__kernel_sin+0x148>)
   840dc:	e9d3 2300 	ldrd	r2, r3, [r3]
   840e0:	f000 f98a 	bl	843f8 <__adddf3>
   840e4:	4632      	mov	r2, r6
   840e6:	463b      	mov	r3, r7
   840e8:	f000 fb3c 	bl	84764 <__aeabi_dmul>
   840ec:	a336      	add	r3, pc, #216	; (adr r3, 841c8 <__kernel_sin+0x150>)
   840ee:	e9d3 2300 	ldrd	r2, r3, [r3]
   840f2:	f000 f97f 	bl	843f4 <__aeabi_dsub>
   840f6:	4632      	mov	r2, r6
   840f8:	463b      	mov	r3, r7
   840fa:	f000 fb33 	bl	84764 <__aeabi_dmul>
   840fe:	a334      	add	r3, pc, #208	; (adr r3, 841d0 <__kernel_sin+0x158>)
   84100:	e9d3 2300 	ldrd	r2, r3, [r3]
   84104:	f000 f978 	bl	843f8 <__adddf3>
   84108:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   8410a:	e9cd 0100 	strd	r0, r1, [sp]
   8410e:	b39b      	cbz	r3, 84178 <__kernel_sin+0x100>
   84110:	2200      	movs	r2, #0
   84112:	4b33      	ldr	r3, [pc, #204]	; (841e0 <__kernel_sin+0x168>)
   84114:	4640      	mov	r0, r8
   84116:	4649      	mov	r1, r9
   84118:	f000 fb24 	bl	84764 <__aeabi_dmul>
   8411c:	e9dd 2300 	ldrd	r2, r3, [sp]
   84120:	e9cd 0102 	strd	r0, r1, [sp, #8]
   84124:	4650      	mov	r0, sl
   84126:	4659      	mov	r1, fp
   84128:	f000 fb1c 	bl	84764 <__aeabi_dmul>
   8412c:	4602      	mov	r2, r0
   8412e:	460b      	mov	r3, r1
   84130:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   84134:	f000 f95e 	bl	843f4 <__aeabi_dsub>
   84138:	4632      	mov	r2, r6
   8413a:	463b      	mov	r3, r7
   8413c:	f000 fb12 	bl	84764 <__aeabi_dmul>
   84140:	4642      	mov	r2, r8
   84142:	464b      	mov	r3, r9
   84144:	f000 f956 	bl	843f4 <__aeabi_dsub>
   84148:	a323      	add	r3, pc, #140	; (adr r3, 841d8 <__kernel_sin+0x160>)
   8414a:	e9d3 2300 	ldrd	r2, r3, [r3]
   8414e:	4606      	mov	r6, r0
   84150:	460f      	mov	r7, r1
   84152:	4650      	mov	r0, sl
   84154:	4659      	mov	r1, fp
   84156:	f000 fb05 	bl	84764 <__aeabi_dmul>
   8415a:	4602      	mov	r2, r0
   8415c:	460b      	mov	r3, r1
   8415e:	4630      	mov	r0, r6
   84160:	4639      	mov	r1, r7
   84162:	f000 f949 	bl	843f8 <__adddf3>
   84166:	4602      	mov	r2, r0
   84168:	460b      	mov	r3, r1
   8416a:	4628      	mov	r0, r5
   8416c:	4621      	mov	r1, r4
   8416e:	f000 f941 	bl	843f4 <__aeabi_dsub>
   84172:	b005      	add	sp, #20
   84174:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84178:	4602      	mov	r2, r0
   8417a:	460b      	mov	r3, r1
   8417c:	4630      	mov	r0, r6
   8417e:	4639      	mov	r1, r7
   84180:	f000 faf0 	bl	84764 <__aeabi_dmul>
   84184:	a314      	add	r3, pc, #80	; (adr r3, 841d8 <__kernel_sin+0x160>)
   84186:	e9d3 2300 	ldrd	r2, r3, [r3]
   8418a:	f000 f933 	bl	843f4 <__aeabi_dsub>
   8418e:	4652      	mov	r2, sl
   84190:	465b      	mov	r3, fp
   84192:	f000 fae7 	bl	84764 <__aeabi_dmul>
   84196:	462a      	mov	r2, r5
   84198:	4623      	mov	r3, r4
   8419a:	f000 f92d 	bl	843f8 <__adddf3>
   8419e:	b005      	add	sp, #20
   841a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   841a4:	4628      	mov	r0, r5
   841a6:	4621      	mov	r1, r4
   841a8:	b005      	add	sp, #20
   841aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   841ae:	bf00      	nop
   841b0:	5acfd57c 	.word	0x5acfd57c
   841b4:	3de5d93a 	.word	0x3de5d93a
   841b8:	8a2b9ceb 	.word	0x8a2b9ceb
   841bc:	3e5ae5e6 	.word	0x3e5ae5e6
   841c0:	57b1fe7d 	.word	0x57b1fe7d
   841c4:	3ec71de3 	.word	0x3ec71de3
   841c8:	19c161d5 	.word	0x19c161d5
   841cc:	3f2a01a0 	.word	0x3f2a01a0
   841d0:	1110f8a6 	.word	0x1110f8a6
   841d4:	3f811111 	.word	0x3f811111
   841d8:	55555549 	.word	0x55555549
   841dc:	3fc55555 	.word	0x3fc55555
   841e0:	3fe00000 	.word	0x3fe00000

000841e4 <fabs>:
   841e4:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
   841e8:	4619      	mov	r1, r3
   841ea:	4770      	bx	lr
   841ec:	0000      	movs	r0, r0
	...

000841f0 <floor>:
   841f0:	f3c1 520a 	ubfx	r2, r1, #20, #11
   841f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   841f8:	f2a2 36ff 	subw	r6, r2, #1023	; 0x3ff
   841fc:	2e13      	cmp	r6, #19
   841fe:	460b      	mov	r3, r1
   84200:	460d      	mov	r5, r1
   84202:	4604      	mov	r4, r0
   84204:	4688      	mov	r8, r1
   84206:	4607      	mov	r7, r0
   84208:	dc1d      	bgt.n	84246 <floor+0x56>
   8420a:	2e00      	cmp	r6, #0
   8420c:	db3d      	blt.n	8428a <floor+0x9a>
   8420e:	4a38      	ldr	r2, [pc, #224]	; (842f0 <floor+0x100>)
   84210:	fa42 f906 	asr.w	r9, r2, r6
   84214:	ea01 0209 	and.w	r2, r1, r9
   84218:	4302      	orrs	r2, r0
   8421a:	d019      	beq.n	84250 <floor+0x60>
   8421c:	a332      	add	r3, pc, #200	; (adr r3, 842e8 <floor+0xf8>)
   8421e:	e9d3 2300 	ldrd	r2, r3, [r3]
   84222:	f000 f8e9 	bl	843f8 <__adddf3>
   84226:	2200      	movs	r2, #0
   84228:	2300      	movs	r3, #0
   8422a:	f000 fd2b 	bl	84c84 <__aeabi_dcmpgt>
   8422e:	b3d0      	cbz	r0, 842a6 <floor+0xb6>
   84230:	2d00      	cmp	r5, #0
   84232:	da04      	bge.n	8423e <floor+0x4e>
   84234:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
   84238:	fa43 f606 	asr.w	r6, r3, r6
   8423c:	44b0      	add	r8, r6
   8423e:	ea28 0509 	bic.w	r5, r8, r9
   84242:	2700      	movs	r7, #0
   84244:	e02f      	b.n	842a6 <floor+0xb6>
   84246:	2e33      	cmp	r6, #51	; 0x33
   84248:	dd06      	ble.n	84258 <floor+0x68>
   8424a:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
   8424e:	d02f      	beq.n	842b0 <floor+0xc0>
   84250:	4619      	mov	r1, r3
   84252:	4620      	mov	r0, r4
   84254:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   84258:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
   8425c:	f2a2 4213 	subw	r2, r2, #1043	; 0x413
   84260:	fa29 f902 	lsr.w	r9, r9, r2
   84264:	ea19 0f00 	tst.w	r9, r0
   84268:	d0f2      	beq.n	84250 <floor+0x60>
   8426a:	a31f      	add	r3, pc, #124	; (adr r3, 842e8 <floor+0xf8>)
   8426c:	e9d3 2300 	ldrd	r2, r3, [r3]
   84270:	f000 f8c2 	bl	843f8 <__adddf3>
   84274:	2200      	movs	r2, #0
   84276:	2300      	movs	r3, #0
   84278:	f000 fd04 	bl	84c84 <__aeabi_dcmpgt>
   8427c:	b198      	cbz	r0, 842a6 <floor+0xb6>
   8427e:	2d00      	cmp	r5, #0
   84280:	db24      	blt.n	842cc <floor+0xdc>
   84282:	ea27 0709 	bic.w	r7, r7, r9
   84286:	4645      	mov	r5, r8
   84288:	e00d      	b.n	842a6 <floor+0xb6>
   8428a:	a317      	add	r3, pc, #92	; (adr r3, 842e8 <floor+0xf8>)
   8428c:	e9d3 2300 	ldrd	r2, r3, [r3]
   84290:	f000 f8b2 	bl	843f8 <__adddf3>
   84294:	2200      	movs	r2, #0
   84296:	2300      	movs	r3, #0
   84298:	f000 fcf4 	bl	84c84 <__aeabi_dcmpgt>
   8429c:	b118      	cbz	r0, 842a6 <floor+0xb6>
   8429e:	2d00      	cmp	r5, #0
   842a0:	db0b      	blt.n	842ba <floor+0xca>
   842a2:	2700      	movs	r7, #0
   842a4:	463d      	mov	r5, r7
   842a6:	463c      	mov	r4, r7
   842a8:	4629      	mov	r1, r5
   842aa:	4620      	mov	r0, r4
   842ac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   842b0:	4602      	mov	r2, r0
   842b2:	f000 f8a1 	bl	843f8 <__adddf3>
   842b6:	4604      	mov	r4, r0
   842b8:	e7cb      	b.n	84252 <floor+0x62>
   842ba:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
   842be:	4a0d      	ldr	r2, [pc, #52]	; (842f4 <floor+0x104>)
   842c0:	431f      	orrs	r7, r3
   842c2:	2f00      	cmp	r7, #0
   842c4:	bf18      	it	ne
   842c6:	4615      	movne	r5, r2
   842c8:	2700      	movs	r7, #0
   842ca:	e7ec      	b.n	842a6 <floor+0xb6>
   842cc:	2e14      	cmp	r6, #20
   842ce:	d008      	beq.n	842e2 <floor+0xf2>
   842d0:	2301      	movs	r3, #1
   842d2:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
   842d6:	fa03 f606 	lsl.w	r6, r3, r6
   842da:	1937      	adds	r7, r6, r4
   842dc:	bf28      	it	cs
   842de:	4498      	addcs	r8, r3
   842e0:	e7cf      	b.n	84282 <floor+0x92>
   842e2:	f105 0801 	add.w	r8, r5, #1
   842e6:	e7cc      	b.n	84282 <floor+0x92>
   842e8:	8800759c 	.word	0x8800759c
   842ec:	7e37e43c 	.word	0x7e37e43c
   842f0:	000fffff 	.word	0x000fffff
   842f4:	bff00000 	.word	0xbff00000

000842f8 <scalbn>:
   842f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   842fa:	f3c1 530a 	ubfx	r3, r1, #20, #11
   842fe:	4604      	mov	r4, r0
   84300:	460d      	mov	r5, r1
   84302:	460e      	mov	r6, r1
   84304:	4617      	mov	r7, r2
   84306:	bb0b      	cbnz	r3, 8434c <scalbn+0x54>
   84308:	4603      	mov	r3, r0
   8430a:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
   8430e:	4333      	orrs	r3, r6
   84310:	d01b      	beq.n	8434a <scalbn+0x52>
   84312:	4b31      	ldr	r3, [pc, #196]	; (843d8 <scalbn+0xe0>)
   84314:	2200      	movs	r2, #0
   84316:	f000 fa25 	bl	84764 <__aeabi_dmul>
   8431a:	4b30      	ldr	r3, [pc, #192]	; (843dc <scalbn+0xe4>)
   8431c:	4604      	mov	r4, r0
   8431e:	429f      	cmp	r7, r3
   84320:	460d      	mov	r5, r1
   84322:	db3d      	blt.n	843a0 <scalbn+0xa8>
   84324:	460e      	mov	r6, r1
   84326:	f3c1 530a 	ubfx	r3, r1, #20, #11
   8432a:	3b36      	subs	r3, #54	; 0x36
   8432c:	f240 72fe 	movw	r2, #2046	; 0x7fe
   84330:	443b      	add	r3, r7
   84332:	4293      	cmp	r3, r2
   84334:	dc13      	bgt.n	8435e <scalbn+0x66>
   84336:	2b00      	cmp	r3, #0
   84338:	dd22      	ble.n	84380 <scalbn+0x88>
   8433a:	f026 46ff 	bic.w	r6, r6, #2139095040	; 0x7f800000
   8433e:	f426 06e0 	bic.w	r6, r6, #7340032	; 0x700000
   84342:	ea46 5503 	orr.w	r5, r6, r3, lsl #20
   84346:	4620      	mov	r0, r4
   84348:	4629      	mov	r1, r5
   8434a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   8434c:	f240 72ff 	movw	r2, #2047	; 0x7ff
   84350:	4293      	cmp	r3, r2
   84352:	d1eb      	bne.n	8432c <scalbn+0x34>
   84354:	4602      	mov	r2, r0
   84356:	460b      	mov	r3, r1
   84358:	f000 f84e 	bl	843f8 <__adddf3>
   8435c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   8435e:	f005 4400 	and.w	r4, r5, #2147483648	; 0x80000000
   84362:	f044 41fc 	orr.w	r1, r4, #2113929216	; 0x7e000000
   84366:	f441 115f 	orr.w	r1, r1, #3653632	; 0x37c000
   8436a:	f441 5110 	orr.w	r1, r1, #9216	; 0x2400
   8436e:	a316      	add	r3, pc, #88	; (adr r3, 843c8 <scalbn+0xd0>)
   84370:	e9d3 2300 	ldrd	r2, r3, [r3]
   84374:	481a      	ldr	r0, [pc, #104]	; (843e0 <scalbn+0xe8>)
   84376:	f041 013c 	orr.w	r1, r1, #60	; 0x3c
   8437a:	f000 f9f3 	bl	84764 <__aeabi_dmul>
   8437e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   84380:	f113 0f35 	cmn.w	r3, #53	; 0x35
   84384:	da12      	bge.n	843ac <scalbn+0xb4>
   84386:	f24c 3350 	movw	r3, #50000	; 0xc350
   8438a:	429f      	cmp	r7, r3
   8438c:	dce7      	bgt.n	8435e <scalbn+0x66>
   8438e:	f005 4300 	and.w	r3, r5, #2147483648	; 0x80000000
   84392:	f043 71d2 	orr.w	r1, r3, #27525120	; 0x1a40000
   84396:	f441 31b7 	orr.w	r1, r1, #93696	; 0x16e00
   8439a:	4812      	ldr	r0, [pc, #72]	; (843e4 <scalbn+0xec>)
   8439c:	f041 011f 	orr.w	r1, r1, #31
   843a0:	a30b      	add	r3, pc, #44	; (adr r3, 843d0 <scalbn+0xd8>)
   843a2:	e9d3 2300 	ldrd	r2, r3, [r3]
   843a6:	f000 f9dd 	bl	84764 <__aeabi_dmul>
   843aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   843ac:	f026 46ff 	bic.w	r6, r6, #2139095040	; 0x7f800000
   843b0:	f426 06e0 	bic.w	r6, r6, #7340032	; 0x700000
   843b4:	3336      	adds	r3, #54	; 0x36
   843b6:	ea46 5503 	orr.w	r5, r6, r3, lsl #20
   843ba:	4620      	mov	r0, r4
   843bc:	4629      	mov	r1, r5
   843be:	2200      	movs	r2, #0
   843c0:	4b09      	ldr	r3, [pc, #36]	; (843e8 <scalbn+0xf0>)
   843c2:	f000 f9cf 	bl	84764 <__aeabi_dmul>
   843c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   843c8:	8800759c 	.word	0x8800759c
   843cc:	7e37e43c 	.word	0x7e37e43c
   843d0:	c2f8f359 	.word	0xc2f8f359
   843d4:	01a56e1f 	.word	0x01a56e1f
   843d8:	43500000 	.word	0x43500000
   843dc:	ffff3cb0 	.word	0xffff3cb0
   843e0:	8800759c 	.word	0x8800759c
   843e4:	c2f8f359 	.word	0xc2f8f359
   843e8:	3c900000 	.word	0x3c900000

000843ec <__aeabi_drsub>:
   843ec:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   843f0:	e002      	b.n	843f8 <__adddf3>
   843f2:	bf00      	nop

000843f4 <__aeabi_dsub>:
   843f4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

000843f8 <__adddf3>:
   843f8:	b530      	push	{r4, r5, lr}
   843fa:	ea4f 0441 	mov.w	r4, r1, lsl #1
   843fe:	ea4f 0543 	mov.w	r5, r3, lsl #1
   84402:	ea94 0f05 	teq	r4, r5
   84406:	bf08      	it	eq
   84408:	ea90 0f02 	teqeq	r0, r2
   8440c:	bf1f      	itttt	ne
   8440e:	ea54 0c00 	orrsne.w	ip, r4, r0
   84412:	ea55 0c02 	orrsne.w	ip, r5, r2
   84416:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   8441a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   8441e:	f000 80e2 	beq.w	845e6 <__adddf3+0x1ee>
   84422:	ea4f 5454 	mov.w	r4, r4, lsr #21
   84426:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   8442a:	bfb8      	it	lt
   8442c:	426d      	neglt	r5, r5
   8442e:	dd0c      	ble.n	8444a <__adddf3+0x52>
   84430:	442c      	add	r4, r5
   84432:	ea80 0202 	eor.w	r2, r0, r2
   84436:	ea81 0303 	eor.w	r3, r1, r3
   8443a:	ea82 0000 	eor.w	r0, r2, r0
   8443e:	ea83 0101 	eor.w	r1, r3, r1
   84442:	ea80 0202 	eor.w	r2, r0, r2
   84446:	ea81 0303 	eor.w	r3, r1, r3
   8444a:	2d36      	cmp	r5, #54	; 0x36
   8444c:	bf88      	it	hi
   8444e:	bd30      	pophi	{r4, r5, pc}
   84450:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   84454:	ea4f 3101 	mov.w	r1, r1, lsl #12
   84458:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   8445c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   84460:	d002      	beq.n	84468 <__adddf3+0x70>
   84462:	4240      	negs	r0, r0
   84464:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   84468:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   8446c:	ea4f 3303 	mov.w	r3, r3, lsl #12
   84470:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   84474:	d002      	beq.n	8447c <__adddf3+0x84>
   84476:	4252      	negs	r2, r2
   84478:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   8447c:	ea94 0f05 	teq	r4, r5
   84480:	f000 80a7 	beq.w	845d2 <__adddf3+0x1da>
   84484:	f1a4 0401 	sub.w	r4, r4, #1
   84488:	f1d5 0e20 	rsbs	lr, r5, #32
   8448c:	db0d      	blt.n	844aa <__adddf3+0xb2>
   8448e:	fa02 fc0e 	lsl.w	ip, r2, lr
   84492:	fa22 f205 	lsr.w	r2, r2, r5
   84496:	1880      	adds	r0, r0, r2
   84498:	f141 0100 	adc.w	r1, r1, #0
   8449c:	fa03 f20e 	lsl.w	r2, r3, lr
   844a0:	1880      	adds	r0, r0, r2
   844a2:	fa43 f305 	asr.w	r3, r3, r5
   844a6:	4159      	adcs	r1, r3
   844a8:	e00e      	b.n	844c8 <__adddf3+0xd0>
   844aa:	f1a5 0520 	sub.w	r5, r5, #32
   844ae:	f10e 0e20 	add.w	lr, lr, #32
   844b2:	2a01      	cmp	r2, #1
   844b4:	fa03 fc0e 	lsl.w	ip, r3, lr
   844b8:	bf28      	it	cs
   844ba:	f04c 0c02 	orrcs.w	ip, ip, #2
   844be:	fa43 f305 	asr.w	r3, r3, r5
   844c2:	18c0      	adds	r0, r0, r3
   844c4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   844c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   844cc:	d507      	bpl.n	844de <__adddf3+0xe6>
   844ce:	f04f 0e00 	mov.w	lr, #0
   844d2:	f1dc 0c00 	rsbs	ip, ip, #0
   844d6:	eb7e 0000 	sbcs.w	r0, lr, r0
   844da:	eb6e 0101 	sbc.w	r1, lr, r1
   844de:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   844e2:	d31b      	bcc.n	8451c <__adddf3+0x124>
   844e4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   844e8:	d30c      	bcc.n	84504 <__adddf3+0x10c>
   844ea:	0849      	lsrs	r1, r1, #1
   844ec:	ea5f 0030 	movs.w	r0, r0, rrx
   844f0:	ea4f 0c3c 	mov.w	ip, ip, rrx
   844f4:	f104 0401 	add.w	r4, r4, #1
   844f8:	ea4f 5244 	mov.w	r2, r4, lsl #21
   844fc:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   84500:	f080 809a 	bcs.w	84638 <__adddf3+0x240>
   84504:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   84508:	bf08      	it	eq
   8450a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   8450e:	f150 0000 	adcs.w	r0, r0, #0
   84512:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   84516:	ea41 0105 	orr.w	r1, r1, r5
   8451a:	bd30      	pop	{r4, r5, pc}
   8451c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   84520:	4140      	adcs	r0, r0
   84522:	eb41 0101 	adc.w	r1, r1, r1
   84526:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   8452a:	f1a4 0401 	sub.w	r4, r4, #1
   8452e:	d1e9      	bne.n	84504 <__adddf3+0x10c>
   84530:	f091 0f00 	teq	r1, #0
   84534:	bf04      	itt	eq
   84536:	4601      	moveq	r1, r0
   84538:	2000      	moveq	r0, #0
   8453a:	fab1 f381 	clz	r3, r1
   8453e:	bf08      	it	eq
   84540:	3320      	addeq	r3, #32
   84542:	f1a3 030b 	sub.w	r3, r3, #11
   84546:	f1b3 0220 	subs.w	r2, r3, #32
   8454a:	da0c      	bge.n	84566 <__adddf3+0x16e>
   8454c:	320c      	adds	r2, #12
   8454e:	dd08      	ble.n	84562 <__adddf3+0x16a>
   84550:	f102 0c14 	add.w	ip, r2, #20
   84554:	f1c2 020c 	rsb	r2, r2, #12
   84558:	fa01 f00c 	lsl.w	r0, r1, ip
   8455c:	fa21 f102 	lsr.w	r1, r1, r2
   84560:	e00c      	b.n	8457c <__adddf3+0x184>
   84562:	f102 0214 	add.w	r2, r2, #20
   84566:	bfd8      	it	le
   84568:	f1c2 0c20 	rsble	ip, r2, #32
   8456c:	fa01 f102 	lsl.w	r1, r1, r2
   84570:	fa20 fc0c 	lsr.w	ip, r0, ip
   84574:	bfdc      	itt	le
   84576:	ea41 010c 	orrle.w	r1, r1, ip
   8457a:	4090      	lslle	r0, r2
   8457c:	1ae4      	subs	r4, r4, r3
   8457e:	bfa2      	ittt	ge
   84580:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   84584:	4329      	orrge	r1, r5
   84586:	bd30      	popge	{r4, r5, pc}
   84588:	ea6f 0404 	mvn.w	r4, r4
   8458c:	3c1f      	subs	r4, #31
   8458e:	da1c      	bge.n	845ca <__adddf3+0x1d2>
   84590:	340c      	adds	r4, #12
   84592:	dc0e      	bgt.n	845b2 <__adddf3+0x1ba>
   84594:	f104 0414 	add.w	r4, r4, #20
   84598:	f1c4 0220 	rsb	r2, r4, #32
   8459c:	fa20 f004 	lsr.w	r0, r0, r4
   845a0:	fa01 f302 	lsl.w	r3, r1, r2
   845a4:	ea40 0003 	orr.w	r0, r0, r3
   845a8:	fa21 f304 	lsr.w	r3, r1, r4
   845ac:	ea45 0103 	orr.w	r1, r5, r3
   845b0:	bd30      	pop	{r4, r5, pc}
   845b2:	f1c4 040c 	rsb	r4, r4, #12
   845b6:	f1c4 0220 	rsb	r2, r4, #32
   845ba:	fa20 f002 	lsr.w	r0, r0, r2
   845be:	fa01 f304 	lsl.w	r3, r1, r4
   845c2:	ea40 0003 	orr.w	r0, r0, r3
   845c6:	4629      	mov	r1, r5
   845c8:	bd30      	pop	{r4, r5, pc}
   845ca:	fa21 f004 	lsr.w	r0, r1, r4
   845ce:	4629      	mov	r1, r5
   845d0:	bd30      	pop	{r4, r5, pc}
   845d2:	f094 0f00 	teq	r4, #0
   845d6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   845da:	bf06      	itte	eq
   845dc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   845e0:	3401      	addeq	r4, #1
   845e2:	3d01      	subne	r5, #1
   845e4:	e74e      	b.n	84484 <__adddf3+0x8c>
   845e6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   845ea:	bf18      	it	ne
   845ec:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   845f0:	d029      	beq.n	84646 <__adddf3+0x24e>
   845f2:	ea94 0f05 	teq	r4, r5
   845f6:	bf08      	it	eq
   845f8:	ea90 0f02 	teqeq	r0, r2
   845fc:	d005      	beq.n	8460a <__adddf3+0x212>
   845fe:	ea54 0c00 	orrs.w	ip, r4, r0
   84602:	bf04      	itt	eq
   84604:	4619      	moveq	r1, r3
   84606:	4610      	moveq	r0, r2
   84608:	bd30      	pop	{r4, r5, pc}
   8460a:	ea91 0f03 	teq	r1, r3
   8460e:	bf1e      	ittt	ne
   84610:	2100      	movne	r1, #0
   84612:	2000      	movne	r0, #0
   84614:	bd30      	popne	{r4, r5, pc}
   84616:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   8461a:	d105      	bne.n	84628 <__adddf3+0x230>
   8461c:	0040      	lsls	r0, r0, #1
   8461e:	4149      	adcs	r1, r1
   84620:	bf28      	it	cs
   84622:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   84626:	bd30      	pop	{r4, r5, pc}
   84628:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   8462c:	bf3c      	itt	cc
   8462e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   84632:	bd30      	popcc	{r4, r5, pc}
   84634:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   84638:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   8463c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   84640:	f04f 0000 	mov.w	r0, #0
   84644:	bd30      	pop	{r4, r5, pc}
   84646:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   8464a:	bf1a      	itte	ne
   8464c:	4619      	movne	r1, r3
   8464e:	4610      	movne	r0, r2
   84650:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   84654:	bf1c      	itt	ne
   84656:	460b      	movne	r3, r1
   84658:	4602      	movne	r2, r0
   8465a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   8465e:	bf06      	itte	eq
   84660:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   84664:	ea91 0f03 	teqeq	r1, r3
   84668:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   8466c:	bd30      	pop	{r4, r5, pc}
   8466e:	bf00      	nop

00084670 <__aeabi_ui2d>:
   84670:	f090 0f00 	teq	r0, #0
   84674:	bf04      	itt	eq
   84676:	2100      	moveq	r1, #0
   84678:	4770      	bxeq	lr
   8467a:	b530      	push	{r4, r5, lr}
   8467c:	f44f 6480 	mov.w	r4, #1024	; 0x400
   84680:	f104 0432 	add.w	r4, r4, #50	; 0x32
   84684:	f04f 0500 	mov.w	r5, #0
   84688:	f04f 0100 	mov.w	r1, #0
   8468c:	e750      	b.n	84530 <__adddf3+0x138>
   8468e:	bf00      	nop

00084690 <__aeabi_i2d>:
   84690:	f090 0f00 	teq	r0, #0
   84694:	bf04      	itt	eq
   84696:	2100      	moveq	r1, #0
   84698:	4770      	bxeq	lr
   8469a:	b530      	push	{r4, r5, lr}
   8469c:	f44f 6480 	mov.w	r4, #1024	; 0x400
   846a0:	f104 0432 	add.w	r4, r4, #50	; 0x32
   846a4:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   846a8:	bf48      	it	mi
   846aa:	4240      	negmi	r0, r0
   846ac:	f04f 0100 	mov.w	r1, #0
   846b0:	e73e      	b.n	84530 <__adddf3+0x138>
   846b2:	bf00      	nop

000846b4 <__aeabi_f2d>:
   846b4:	0042      	lsls	r2, r0, #1
   846b6:	ea4f 01e2 	mov.w	r1, r2, asr #3
   846ba:	ea4f 0131 	mov.w	r1, r1, rrx
   846be:	ea4f 7002 	mov.w	r0, r2, lsl #28
   846c2:	bf1f      	itttt	ne
   846c4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   846c8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   846cc:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   846d0:	4770      	bxne	lr
   846d2:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
   846d6:	bf08      	it	eq
   846d8:	4770      	bxeq	lr
   846da:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
   846de:	bf04      	itt	eq
   846e0:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
   846e4:	4770      	bxeq	lr
   846e6:	b530      	push	{r4, r5, lr}
   846e8:	f44f 7460 	mov.w	r4, #896	; 0x380
   846ec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   846f0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   846f4:	e71c      	b.n	84530 <__adddf3+0x138>
   846f6:	bf00      	nop

000846f8 <__aeabi_ul2d>:
   846f8:	ea50 0201 	orrs.w	r2, r0, r1
   846fc:	bf08      	it	eq
   846fe:	4770      	bxeq	lr
   84700:	b530      	push	{r4, r5, lr}
   84702:	f04f 0500 	mov.w	r5, #0
   84706:	e00a      	b.n	8471e <__aeabi_l2d+0x16>

00084708 <__aeabi_l2d>:
   84708:	ea50 0201 	orrs.w	r2, r0, r1
   8470c:	bf08      	it	eq
   8470e:	4770      	bxeq	lr
   84710:	b530      	push	{r4, r5, lr}
   84712:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   84716:	d502      	bpl.n	8471e <__aeabi_l2d+0x16>
   84718:	4240      	negs	r0, r0
   8471a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   8471e:	f44f 6480 	mov.w	r4, #1024	; 0x400
   84722:	f104 0432 	add.w	r4, r4, #50	; 0x32
   84726:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   8472a:	f43f aed8 	beq.w	844de <__adddf3+0xe6>
   8472e:	f04f 0203 	mov.w	r2, #3
   84732:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   84736:	bf18      	it	ne
   84738:	3203      	addne	r2, #3
   8473a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   8473e:	bf18      	it	ne
   84740:	3203      	addne	r2, #3
   84742:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   84746:	f1c2 0320 	rsb	r3, r2, #32
   8474a:	fa00 fc03 	lsl.w	ip, r0, r3
   8474e:	fa20 f002 	lsr.w	r0, r0, r2
   84752:	fa01 fe03 	lsl.w	lr, r1, r3
   84756:	ea40 000e 	orr.w	r0, r0, lr
   8475a:	fa21 f102 	lsr.w	r1, r1, r2
   8475e:	4414      	add	r4, r2
   84760:	e6bd      	b.n	844de <__adddf3+0xe6>
   84762:	bf00      	nop

00084764 <__aeabi_dmul>:
   84764:	b570      	push	{r4, r5, r6, lr}
   84766:	f04f 0cff 	mov.w	ip, #255	; 0xff
   8476a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   8476e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   84772:	bf1d      	ittte	ne
   84774:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   84778:	ea94 0f0c 	teqne	r4, ip
   8477c:	ea95 0f0c 	teqne	r5, ip
   84780:	f000 f8de 	bleq	84940 <__aeabi_dmul+0x1dc>
   84784:	442c      	add	r4, r5
   84786:	ea81 0603 	eor.w	r6, r1, r3
   8478a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   8478e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   84792:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   84796:	bf18      	it	ne
   84798:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   8479c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   847a0:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   847a4:	d038      	beq.n	84818 <__aeabi_dmul+0xb4>
   847a6:	fba0 ce02 	umull	ip, lr, r0, r2
   847aa:	f04f 0500 	mov.w	r5, #0
   847ae:	fbe1 e502 	umlal	lr, r5, r1, r2
   847b2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   847b6:	fbe0 e503 	umlal	lr, r5, r0, r3
   847ba:	f04f 0600 	mov.w	r6, #0
   847be:	fbe1 5603 	umlal	r5, r6, r1, r3
   847c2:	f09c 0f00 	teq	ip, #0
   847c6:	bf18      	it	ne
   847c8:	f04e 0e01 	orrne.w	lr, lr, #1
   847cc:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   847d0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   847d4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   847d8:	d204      	bcs.n	847e4 <__aeabi_dmul+0x80>
   847da:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   847de:	416d      	adcs	r5, r5
   847e0:	eb46 0606 	adc.w	r6, r6, r6
   847e4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   847e8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   847ec:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   847f0:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   847f4:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   847f8:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   847fc:	bf88      	it	hi
   847fe:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   84802:	d81e      	bhi.n	84842 <__aeabi_dmul+0xde>
   84804:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   84808:	bf08      	it	eq
   8480a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   8480e:	f150 0000 	adcs.w	r0, r0, #0
   84812:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   84816:	bd70      	pop	{r4, r5, r6, pc}
   84818:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   8481c:	ea46 0101 	orr.w	r1, r6, r1
   84820:	ea40 0002 	orr.w	r0, r0, r2
   84824:	ea81 0103 	eor.w	r1, r1, r3
   84828:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   8482c:	bfc2      	ittt	gt
   8482e:	ebd4 050c 	rsbsgt	r5, r4, ip
   84832:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   84836:	bd70      	popgt	{r4, r5, r6, pc}
   84838:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   8483c:	f04f 0e00 	mov.w	lr, #0
   84840:	3c01      	subs	r4, #1
   84842:	f300 80ab 	bgt.w	8499c <__aeabi_dmul+0x238>
   84846:	f114 0f36 	cmn.w	r4, #54	; 0x36
   8484a:	bfde      	ittt	le
   8484c:	2000      	movle	r0, #0
   8484e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   84852:	bd70      	pople	{r4, r5, r6, pc}
   84854:	f1c4 0400 	rsb	r4, r4, #0
   84858:	3c20      	subs	r4, #32
   8485a:	da35      	bge.n	848c8 <__aeabi_dmul+0x164>
   8485c:	340c      	adds	r4, #12
   8485e:	dc1b      	bgt.n	84898 <__aeabi_dmul+0x134>
   84860:	f104 0414 	add.w	r4, r4, #20
   84864:	f1c4 0520 	rsb	r5, r4, #32
   84868:	fa00 f305 	lsl.w	r3, r0, r5
   8486c:	fa20 f004 	lsr.w	r0, r0, r4
   84870:	fa01 f205 	lsl.w	r2, r1, r5
   84874:	ea40 0002 	orr.w	r0, r0, r2
   84878:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   8487c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   84880:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   84884:	fa21 f604 	lsr.w	r6, r1, r4
   84888:	eb42 0106 	adc.w	r1, r2, r6
   8488c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   84890:	bf08      	it	eq
   84892:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   84896:	bd70      	pop	{r4, r5, r6, pc}
   84898:	f1c4 040c 	rsb	r4, r4, #12
   8489c:	f1c4 0520 	rsb	r5, r4, #32
   848a0:	fa00 f304 	lsl.w	r3, r0, r4
   848a4:	fa20 f005 	lsr.w	r0, r0, r5
   848a8:	fa01 f204 	lsl.w	r2, r1, r4
   848ac:	ea40 0002 	orr.w	r0, r0, r2
   848b0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   848b4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   848b8:	f141 0100 	adc.w	r1, r1, #0
   848bc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   848c0:	bf08      	it	eq
   848c2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   848c6:	bd70      	pop	{r4, r5, r6, pc}
   848c8:	f1c4 0520 	rsb	r5, r4, #32
   848cc:	fa00 f205 	lsl.w	r2, r0, r5
   848d0:	ea4e 0e02 	orr.w	lr, lr, r2
   848d4:	fa20 f304 	lsr.w	r3, r0, r4
   848d8:	fa01 f205 	lsl.w	r2, r1, r5
   848dc:	ea43 0302 	orr.w	r3, r3, r2
   848e0:	fa21 f004 	lsr.w	r0, r1, r4
   848e4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   848e8:	fa21 f204 	lsr.w	r2, r1, r4
   848ec:	ea20 0002 	bic.w	r0, r0, r2
   848f0:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   848f4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   848f8:	bf08      	it	eq
   848fa:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   848fe:	bd70      	pop	{r4, r5, r6, pc}
   84900:	f094 0f00 	teq	r4, #0
   84904:	d10f      	bne.n	84926 <__aeabi_dmul+0x1c2>
   84906:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   8490a:	0040      	lsls	r0, r0, #1
   8490c:	eb41 0101 	adc.w	r1, r1, r1
   84910:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   84914:	bf08      	it	eq
   84916:	3c01      	subeq	r4, #1
   84918:	d0f7      	beq.n	8490a <__aeabi_dmul+0x1a6>
   8491a:	ea41 0106 	orr.w	r1, r1, r6
   8491e:	f095 0f00 	teq	r5, #0
   84922:	bf18      	it	ne
   84924:	4770      	bxne	lr
   84926:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   8492a:	0052      	lsls	r2, r2, #1
   8492c:	eb43 0303 	adc.w	r3, r3, r3
   84930:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   84934:	bf08      	it	eq
   84936:	3d01      	subeq	r5, #1
   84938:	d0f7      	beq.n	8492a <__aeabi_dmul+0x1c6>
   8493a:	ea43 0306 	orr.w	r3, r3, r6
   8493e:	4770      	bx	lr
   84940:	ea94 0f0c 	teq	r4, ip
   84944:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   84948:	bf18      	it	ne
   8494a:	ea95 0f0c 	teqne	r5, ip
   8494e:	d00c      	beq.n	8496a <__aeabi_dmul+0x206>
   84950:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   84954:	bf18      	it	ne
   84956:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   8495a:	d1d1      	bne.n	84900 <__aeabi_dmul+0x19c>
   8495c:	ea81 0103 	eor.w	r1, r1, r3
   84960:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   84964:	f04f 0000 	mov.w	r0, #0
   84968:	bd70      	pop	{r4, r5, r6, pc}
   8496a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   8496e:	bf06      	itte	eq
   84970:	4610      	moveq	r0, r2
   84972:	4619      	moveq	r1, r3
   84974:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   84978:	d019      	beq.n	849ae <__aeabi_dmul+0x24a>
   8497a:	ea94 0f0c 	teq	r4, ip
   8497e:	d102      	bne.n	84986 <__aeabi_dmul+0x222>
   84980:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   84984:	d113      	bne.n	849ae <__aeabi_dmul+0x24a>
   84986:	ea95 0f0c 	teq	r5, ip
   8498a:	d105      	bne.n	84998 <__aeabi_dmul+0x234>
   8498c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   84990:	bf1c      	itt	ne
   84992:	4610      	movne	r0, r2
   84994:	4619      	movne	r1, r3
   84996:	d10a      	bne.n	849ae <__aeabi_dmul+0x24a>
   84998:	ea81 0103 	eor.w	r1, r1, r3
   8499c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   849a0:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   849a4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   849a8:	f04f 0000 	mov.w	r0, #0
   849ac:	bd70      	pop	{r4, r5, r6, pc}
   849ae:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   849b2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   849b6:	bd70      	pop	{r4, r5, r6, pc}

000849b8 <__aeabi_ddiv>:
   849b8:	b570      	push	{r4, r5, r6, lr}
   849ba:	f04f 0cff 	mov.w	ip, #255	; 0xff
   849be:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   849c2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   849c6:	bf1d      	ittte	ne
   849c8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   849cc:	ea94 0f0c 	teqne	r4, ip
   849d0:	ea95 0f0c 	teqne	r5, ip
   849d4:	f000 f8a7 	bleq	84b26 <__aeabi_ddiv+0x16e>
   849d8:	eba4 0405 	sub.w	r4, r4, r5
   849dc:	ea81 0e03 	eor.w	lr, r1, r3
   849e0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   849e4:	ea4f 3101 	mov.w	r1, r1, lsl #12
   849e8:	f000 8088 	beq.w	84afc <__aeabi_ddiv+0x144>
   849ec:	ea4f 3303 	mov.w	r3, r3, lsl #12
   849f0:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   849f4:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   849f8:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   849fc:	ea4f 2202 	mov.w	r2, r2, lsl #8
   84a00:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   84a04:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   84a08:	ea4f 2600 	mov.w	r6, r0, lsl #8
   84a0c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   84a10:	429d      	cmp	r5, r3
   84a12:	bf08      	it	eq
   84a14:	4296      	cmpeq	r6, r2
   84a16:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   84a1a:	f504 7440 	add.w	r4, r4, #768	; 0x300
   84a1e:	d202      	bcs.n	84a26 <__aeabi_ddiv+0x6e>
   84a20:	085b      	lsrs	r3, r3, #1
   84a22:	ea4f 0232 	mov.w	r2, r2, rrx
   84a26:	1ab6      	subs	r6, r6, r2
   84a28:	eb65 0503 	sbc.w	r5, r5, r3
   84a2c:	085b      	lsrs	r3, r3, #1
   84a2e:	ea4f 0232 	mov.w	r2, r2, rrx
   84a32:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   84a36:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   84a3a:	ebb6 0e02 	subs.w	lr, r6, r2
   84a3e:	eb75 0e03 	sbcs.w	lr, r5, r3
   84a42:	bf22      	ittt	cs
   84a44:	1ab6      	subcs	r6, r6, r2
   84a46:	4675      	movcs	r5, lr
   84a48:	ea40 000c 	orrcs.w	r0, r0, ip
   84a4c:	085b      	lsrs	r3, r3, #1
   84a4e:	ea4f 0232 	mov.w	r2, r2, rrx
   84a52:	ebb6 0e02 	subs.w	lr, r6, r2
   84a56:	eb75 0e03 	sbcs.w	lr, r5, r3
   84a5a:	bf22      	ittt	cs
   84a5c:	1ab6      	subcs	r6, r6, r2
   84a5e:	4675      	movcs	r5, lr
   84a60:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   84a64:	085b      	lsrs	r3, r3, #1
   84a66:	ea4f 0232 	mov.w	r2, r2, rrx
   84a6a:	ebb6 0e02 	subs.w	lr, r6, r2
   84a6e:	eb75 0e03 	sbcs.w	lr, r5, r3
   84a72:	bf22      	ittt	cs
   84a74:	1ab6      	subcs	r6, r6, r2
   84a76:	4675      	movcs	r5, lr
   84a78:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   84a7c:	085b      	lsrs	r3, r3, #1
   84a7e:	ea4f 0232 	mov.w	r2, r2, rrx
   84a82:	ebb6 0e02 	subs.w	lr, r6, r2
   84a86:	eb75 0e03 	sbcs.w	lr, r5, r3
   84a8a:	bf22      	ittt	cs
   84a8c:	1ab6      	subcs	r6, r6, r2
   84a8e:	4675      	movcs	r5, lr
   84a90:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   84a94:	ea55 0e06 	orrs.w	lr, r5, r6
   84a98:	d018      	beq.n	84acc <__aeabi_ddiv+0x114>
   84a9a:	ea4f 1505 	mov.w	r5, r5, lsl #4
   84a9e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   84aa2:	ea4f 1606 	mov.w	r6, r6, lsl #4
   84aa6:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   84aaa:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   84aae:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   84ab2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   84ab6:	d1c0      	bne.n	84a3a <__aeabi_ddiv+0x82>
   84ab8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   84abc:	d10b      	bne.n	84ad6 <__aeabi_ddiv+0x11e>
   84abe:	ea41 0100 	orr.w	r1, r1, r0
   84ac2:	f04f 0000 	mov.w	r0, #0
   84ac6:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   84aca:	e7b6      	b.n	84a3a <__aeabi_ddiv+0x82>
   84acc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   84ad0:	bf04      	itt	eq
   84ad2:	4301      	orreq	r1, r0
   84ad4:	2000      	moveq	r0, #0
   84ad6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   84ada:	bf88      	it	hi
   84adc:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   84ae0:	f63f aeaf 	bhi.w	84842 <__aeabi_dmul+0xde>
   84ae4:	ebb5 0c03 	subs.w	ip, r5, r3
   84ae8:	bf04      	itt	eq
   84aea:	ebb6 0c02 	subseq.w	ip, r6, r2
   84aee:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   84af2:	f150 0000 	adcs.w	r0, r0, #0
   84af6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   84afa:	bd70      	pop	{r4, r5, r6, pc}
   84afc:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   84b00:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   84b04:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   84b08:	bfc2      	ittt	gt
   84b0a:	ebd4 050c 	rsbsgt	r5, r4, ip
   84b0e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   84b12:	bd70      	popgt	{r4, r5, r6, pc}
   84b14:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   84b18:	f04f 0e00 	mov.w	lr, #0
   84b1c:	3c01      	subs	r4, #1
   84b1e:	e690      	b.n	84842 <__aeabi_dmul+0xde>
   84b20:	ea45 0e06 	orr.w	lr, r5, r6
   84b24:	e68d      	b.n	84842 <__aeabi_dmul+0xde>
   84b26:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   84b2a:	ea94 0f0c 	teq	r4, ip
   84b2e:	bf08      	it	eq
   84b30:	ea95 0f0c 	teqeq	r5, ip
   84b34:	f43f af3b 	beq.w	849ae <__aeabi_dmul+0x24a>
   84b38:	ea94 0f0c 	teq	r4, ip
   84b3c:	d10a      	bne.n	84b54 <__aeabi_ddiv+0x19c>
   84b3e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   84b42:	f47f af34 	bne.w	849ae <__aeabi_dmul+0x24a>
   84b46:	ea95 0f0c 	teq	r5, ip
   84b4a:	f47f af25 	bne.w	84998 <__aeabi_dmul+0x234>
   84b4e:	4610      	mov	r0, r2
   84b50:	4619      	mov	r1, r3
   84b52:	e72c      	b.n	849ae <__aeabi_dmul+0x24a>
   84b54:	ea95 0f0c 	teq	r5, ip
   84b58:	d106      	bne.n	84b68 <__aeabi_ddiv+0x1b0>
   84b5a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   84b5e:	f43f aefd 	beq.w	8495c <__aeabi_dmul+0x1f8>
   84b62:	4610      	mov	r0, r2
   84b64:	4619      	mov	r1, r3
   84b66:	e722      	b.n	849ae <__aeabi_dmul+0x24a>
   84b68:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   84b6c:	bf18      	it	ne
   84b6e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   84b72:	f47f aec5 	bne.w	84900 <__aeabi_dmul+0x19c>
   84b76:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   84b7a:	f47f af0d 	bne.w	84998 <__aeabi_dmul+0x234>
   84b7e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   84b82:	f47f aeeb 	bne.w	8495c <__aeabi_dmul+0x1f8>
   84b86:	e712      	b.n	849ae <__aeabi_dmul+0x24a>

00084b88 <__gedf2>:
   84b88:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
   84b8c:	e006      	b.n	84b9c <__cmpdf2+0x4>
   84b8e:	bf00      	nop

00084b90 <__ledf2>:
   84b90:	f04f 0c01 	mov.w	ip, #1
   84b94:	e002      	b.n	84b9c <__cmpdf2+0x4>
   84b96:	bf00      	nop

00084b98 <__cmpdf2>:
   84b98:	f04f 0c01 	mov.w	ip, #1
   84b9c:	f84d cd04 	str.w	ip, [sp, #-4]!
   84ba0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   84ba4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   84ba8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   84bac:	bf18      	it	ne
   84bae:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   84bb2:	d01b      	beq.n	84bec <__cmpdf2+0x54>
   84bb4:	b001      	add	sp, #4
   84bb6:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   84bba:	bf0c      	ite	eq
   84bbc:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   84bc0:	ea91 0f03 	teqne	r1, r3
   84bc4:	bf02      	ittt	eq
   84bc6:	ea90 0f02 	teqeq	r0, r2
   84bca:	2000      	moveq	r0, #0
   84bcc:	4770      	bxeq	lr
   84bce:	f110 0f00 	cmn.w	r0, #0
   84bd2:	ea91 0f03 	teq	r1, r3
   84bd6:	bf58      	it	pl
   84bd8:	4299      	cmppl	r1, r3
   84bda:	bf08      	it	eq
   84bdc:	4290      	cmpeq	r0, r2
   84bde:	bf2c      	ite	cs
   84be0:	17d8      	asrcs	r0, r3, #31
   84be2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   84be6:	f040 0001 	orr.w	r0, r0, #1
   84bea:	4770      	bx	lr
   84bec:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   84bf0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   84bf4:	d102      	bne.n	84bfc <__cmpdf2+0x64>
   84bf6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   84bfa:	d107      	bne.n	84c0c <__cmpdf2+0x74>
   84bfc:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   84c00:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   84c04:	d1d6      	bne.n	84bb4 <__cmpdf2+0x1c>
   84c06:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   84c0a:	d0d3      	beq.n	84bb4 <__cmpdf2+0x1c>
   84c0c:	f85d 0b04 	ldr.w	r0, [sp], #4
   84c10:	4770      	bx	lr
   84c12:	bf00      	nop

00084c14 <__aeabi_cdrcmple>:
   84c14:	4684      	mov	ip, r0
   84c16:	4610      	mov	r0, r2
   84c18:	4662      	mov	r2, ip
   84c1a:	468c      	mov	ip, r1
   84c1c:	4619      	mov	r1, r3
   84c1e:	4663      	mov	r3, ip
   84c20:	e000      	b.n	84c24 <__aeabi_cdcmpeq>
   84c22:	bf00      	nop

00084c24 <__aeabi_cdcmpeq>:
   84c24:	b501      	push	{r0, lr}
   84c26:	f7ff ffb7 	bl	84b98 <__cmpdf2>
   84c2a:	2800      	cmp	r0, #0
   84c2c:	bf48      	it	mi
   84c2e:	f110 0f00 	cmnmi.w	r0, #0
   84c32:	bd01      	pop	{r0, pc}

00084c34 <__aeabi_dcmpeq>:
   84c34:	f84d ed08 	str.w	lr, [sp, #-8]!
   84c38:	f7ff fff4 	bl	84c24 <__aeabi_cdcmpeq>
   84c3c:	bf0c      	ite	eq
   84c3e:	2001      	moveq	r0, #1
   84c40:	2000      	movne	r0, #0
   84c42:	f85d fb08 	ldr.w	pc, [sp], #8
   84c46:	bf00      	nop

00084c48 <__aeabi_dcmplt>:
   84c48:	f84d ed08 	str.w	lr, [sp, #-8]!
   84c4c:	f7ff ffea 	bl	84c24 <__aeabi_cdcmpeq>
   84c50:	bf34      	ite	cc
   84c52:	2001      	movcc	r0, #1
   84c54:	2000      	movcs	r0, #0
   84c56:	f85d fb08 	ldr.w	pc, [sp], #8
   84c5a:	bf00      	nop

00084c5c <__aeabi_dcmple>:
   84c5c:	f84d ed08 	str.w	lr, [sp, #-8]!
   84c60:	f7ff ffe0 	bl	84c24 <__aeabi_cdcmpeq>
   84c64:	bf94      	ite	ls
   84c66:	2001      	movls	r0, #1
   84c68:	2000      	movhi	r0, #0
   84c6a:	f85d fb08 	ldr.w	pc, [sp], #8
   84c6e:	bf00      	nop

00084c70 <__aeabi_dcmpge>:
   84c70:	f84d ed08 	str.w	lr, [sp, #-8]!
   84c74:	f7ff ffce 	bl	84c14 <__aeabi_cdrcmple>
   84c78:	bf94      	ite	ls
   84c7a:	2001      	movls	r0, #1
   84c7c:	2000      	movhi	r0, #0
   84c7e:	f85d fb08 	ldr.w	pc, [sp], #8
   84c82:	bf00      	nop

00084c84 <__aeabi_dcmpgt>:
   84c84:	f84d ed08 	str.w	lr, [sp, #-8]!
   84c88:	f7ff ffc4 	bl	84c14 <__aeabi_cdrcmple>
   84c8c:	bf34      	ite	cc
   84c8e:	2001      	movcc	r0, #1
   84c90:	2000      	movcs	r0, #0
   84c92:	f85d fb08 	ldr.w	pc, [sp], #8
   84c96:	bf00      	nop

00084c98 <__aeabi_d2iz>:
   84c98:	ea4f 0241 	mov.w	r2, r1, lsl #1
   84c9c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   84ca0:	d215      	bcs.n	84cce <__aeabi_d2iz+0x36>
   84ca2:	d511      	bpl.n	84cc8 <__aeabi_d2iz+0x30>
   84ca4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   84ca8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   84cac:	d912      	bls.n	84cd4 <__aeabi_d2iz+0x3c>
   84cae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   84cb2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   84cb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   84cba:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   84cbe:	fa23 f002 	lsr.w	r0, r3, r2
   84cc2:	bf18      	it	ne
   84cc4:	4240      	negne	r0, r0
   84cc6:	4770      	bx	lr
   84cc8:	f04f 0000 	mov.w	r0, #0
   84ccc:	4770      	bx	lr
   84cce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   84cd2:	d105      	bne.n	84ce0 <__aeabi_d2iz+0x48>
   84cd4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   84cd8:	bf08      	it	eq
   84cda:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   84cde:	4770      	bx	lr
   84ce0:	f04f 0000 	mov.w	r0, #0
   84ce4:	4770      	bx	lr
   84ce6:	bf00      	nop

00084ce8 <__aeabi_d2uiz>:
   84ce8:	004a      	lsls	r2, r1, #1
   84cea:	d211      	bcs.n	84d10 <__aeabi_d2uiz+0x28>
   84cec:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   84cf0:	d211      	bcs.n	84d16 <__aeabi_d2uiz+0x2e>
   84cf2:	d50d      	bpl.n	84d10 <__aeabi_d2uiz+0x28>
   84cf4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   84cf8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   84cfc:	d40e      	bmi.n	84d1c <__aeabi_d2uiz+0x34>
   84cfe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   84d02:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   84d06:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   84d0a:	fa23 f002 	lsr.w	r0, r3, r2
   84d0e:	4770      	bx	lr
   84d10:	f04f 0000 	mov.w	r0, #0
   84d14:	4770      	bx	lr
   84d16:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   84d1a:	d102      	bne.n	84d22 <__aeabi_d2uiz+0x3a>
   84d1c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   84d20:	4770      	bx	lr
   84d22:	f04f 0000 	mov.w	r0, #0
   84d26:	4770      	bx	lr

00084d28 <__aeabi_frsub>:
   84d28:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
   84d2c:	e002      	b.n	84d34 <__addsf3>
   84d2e:	bf00      	nop

00084d30 <__aeabi_fsub>:
   84d30:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

00084d34 <__addsf3>:
   84d34:	0042      	lsls	r2, r0, #1
   84d36:	bf1f      	itttt	ne
   84d38:	ea5f 0341 	movsne.w	r3, r1, lsl #1
   84d3c:	ea92 0f03 	teqne	r2, r3
   84d40:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
   84d44:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   84d48:	d06a      	beq.n	84e20 <__addsf3+0xec>
   84d4a:	ea4f 6212 	mov.w	r2, r2, lsr #24
   84d4e:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
   84d52:	bfc1      	itttt	gt
   84d54:	18d2      	addgt	r2, r2, r3
   84d56:	4041      	eorgt	r1, r0
   84d58:	4048      	eorgt	r0, r1
   84d5a:	4041      	eorgt	r1, r0
   84d5c:	bfb8      	it	lt
   84d5e:	425b      	neglt	r3, r3
   84d60:	2b19      	cmp	r3, #25
   84d62:	bf88      	it	hi
   84d64:	4770      	bxhi	lr
   84d66:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
   84d6a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   84d6e:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
   84d72:	bf18      	it	ne
   84d74:	4240      	negne	r0, r0
   84d76:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   84d7a:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
   84d7e:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
   84d82:	bf18      	it	ne
   84d84:	4249      	negne	r1, r1
   84d86:	ea92 0f03 	teq	r2, r3
   84d8a:	d03f      	beq.n	84e0c <__addsf3+0xd8>
   84d8c:	f1a2 0201 	sub.w	r2, r2, #1
   84d90:	fa41 fc03 	asr.w	ip, r1, r3
   84d94:	eb10 000c 	adds.w	r0, r0, ip
   84d98:	f1c3 0320 	rsb	r3, r3, #32
   84d9c:	fa01 f103 	lsl.w	r1, r1, r3
   84da0:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   84da4:	d502      	bpl.n	84dac <__addsf3+0x78>
   84da6:	4249      	negs	r1, r1
   84da8:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
   84dac:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
   84db0:	d313      	bcc.n	84dda <__addsf3+0xa6>
   84db2:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
   84db6:	d306      	bcc.n	84dc6 <__addsf3+0x92>
   84db8:	0840      	lsrs	r0, r0, #1
   84dba:	ea4f 0131 	mov.w	r1, r1, rrx
   84dbe:	f102 0201 	add.w	r2, r2, #1
   84dc2:	2afe      	cmp	r2, #254	; 0xfe
   84dc4:	d251      	bcs.n	84e6a <__addsf3+0x136>
   84dc6:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
   84dca:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   84dce:	bf08      	it	eq
   84dd0:	f020 0001 	biceq.w	r0, r0, #1
   84dd4:	ea40 0003 	orr.w	r0, r0, r3
   84dd8:	4770      	bx	lr
   84dda:	0049      	lsls	r1, r1, #1
   84ddc:	eb40 0000 	adc.w	r0, r0, r0
   84de0:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
   84de4:	f1a2 0201 	sub.w	r2, r2, #1
   84de8:	d1ed      	bne.n	84dc6 <__addsf3+0x92>
   84dea:	fab0 fc80 	clz	ip, r0
   84dee:	f1ac 0c08 	sub.w	ip, ip, #8
   84df2:	ebb2 020c 	subs.w	r2, r2, ip
   84df6:	fa00 f00c 	lsl.w	r0, r0, ip
   84dfa:	bfaa      	itet	ge
   84dfc:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
   84e00:	4252      	neglt	r2, r2
   84e02:	4318      	orrge	r0, r3
   84e04:	bfbc      	itt	lt
   84e06:	40d0      	lsrlt	r0, r2
   84e08:	4318      	orrlt	r0, r3
   84e0a:	4770      	bx	lr
   84e0c:	f092 0f00 	teq	r2, #0
   84e10:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
   84e14:	bf06      	itte	eq
   84e16:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
   84e1a:	3201      	addeq	r2, #1
   84e1c:	3b01      	subne	r3, #1
   84e1e:	e7b5      	b.n	84d8c <__addsf3+0x58>
   84e20:	ea4f 0341 	mov.w	r3, r1, lsl #1
   84e24:	ea7f 6c22 	mvns.w	ip, r2, asr #24
   84e28:	bf18      	it	ne
   84e2a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
   84e2e:	d021      	beq.n	84e74 <__addsf3+0x140>
   84e30:	ea92 0f03 	teq	r2, r3
   84e34:	d004      	beq.n	84e40 <__addsf3+0x10c>
   84e36:	f092 0f00 	teq	r2, #0
   84e3a:	bf08      	it	eq
   84e3c:	4608      	moveq	r0, r1
   84e3e:	4770      	bx	lr
   84e40:	ea90 0f01 	teq	r0, r1
   84e44:	bf1c      	itt	ne
   84e46:	2000      	movne	r0, #0
   84e48:	4770      	bxne	lr
   84e4a:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
   84e4e:	d104      	bne.n	84e5a <__addsf3+0x126>
   84e50:	0040      	lsls	r0, r0, #1
   84e52:	bf28      	it	cs
   84e54:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
   84e58:	4770      	bx	lr
   84e5a:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
   84e5e:	bf3c      	itt	cc
   84e60:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
   84e64:	4770      	bxcc	lr
   84e66:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
   84e6a:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
   84e6e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   84e72:	4770      	bx	lr
   84e74:	ea7f 6222 	mvns.w	r2, r2, asr #24
   84e78:	bf16      	itet	ne
   84e7a:	4608      	movne	r0, r1
   84e7c:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
   84e80:	4601      	movne	r1, r0
   84e82:	0242      	lsls	r2, r0, #9
   84e84:	bf06      	itte	eq
   84e86:	ea5f 2341 	movseq.w	r3, r1, lsl #9
   84e8a:	ea90 0f01 	teqeq	r0, r1
   84e8e:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
   84e92:	4770      	bx	lr

00084e94 <__aeabi_ui2f>:
   84e94:	f04f 0300 	mov.w	r3, #0
   84e98:	e004      	b.n	84ea4 <__aeabi_i2f+0x8>
   84e9a:	bf00      	nop

00084e9c <__aeabi_i2f>:
   84e9c:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
   84ea0:	bf48      	it	mi
   84ea2:	4240      	negmi	r0, r0
   84ea4:	ea5f 0c00 	movs.w	ip, r0
   84ea8:	bf08      	it	eq
   84eaa:	4770      	bxeq	lr
   84eac:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
   84eb0:	4601      	mov	r1, r0
   84eb2:	f04f 0000 	mov.w	r0, #0
   84eb6:	e01c      	b.n	84ef2 <__aeabi_l2f+0x2a>

00084eb8 <__aeabi_ul2f>:
   84eb8:	ea50 0201 	orrs.w	r2, r0, r1
   84ebc:	bf08      	it	eq
   84ebe:	4770      	bxeq	lr
   84ec0:	f04f 0300 	mov.w	r3, #0
   84ec4:	e00a      	b.n	84edc <__aeabi_l2f+0x14>
   84ec6:	bf00      	nop

00084ec8 <__aeabi_l2f>:
   84ec8:	ea50 0201 	orrs.w	r2, r0, r1
   84ecc:	bf08      	it	eq
   84ece:	4770      	bxeq	lr
   84ed0:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
   84ed4:	d502      	bpl.n	84edc <__aeabi_l2f+0x14>
   84ed6:	4240      	negs	r0, r0
   84ed8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   84edc:	ea5f 0c01 	movs.w	ip, r1
   84ee0:	bf02      	ittt	eq
   84ee2:	4684      	moveq	ip, r0
   84ee4:	4601      	moveq	r1, r0
   84ee6:	2000      	moveq	r0, #0
   84ee8:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
   84eec:	bf08      	it	eq
   84eee:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
   84ef2:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
   84ef6:	fabc f28c 	clz	r2, ip
   84efa:	3a08      	subs	r2, #8
   84efc:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
   84f00:	db10      	blt.n	84f24 <__aeabi_l2f+0x5c>
   84f02:	fa01 fc02 	lsl.w	ip, r1, r2
   84f06:	4463      	add	r3, ip
   84f08:	fa00 fc02 	lsl.w	ip, r0, r2
   84f0c:	f1c2 0220 	rsb	r2, r2, #32
   84f10:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   84f14:	fa20 f202 	lsr.w	r2, r0, r2
   84f18:	eb43 0002 	adc.w	r0, r3, r2
   84f1c:	bf08      	it	eq
   84f1e:	f020 0001 	biceq.w	r0, r0, #1
   84f22:	4770      	bx	lr
   84f24:	f102 0220 	add.w	r2, r2, #32
   84f28:	fa01 fc02 	lsl.w	ip, r1, r2
   84f2c:	f1c2 0220 	rsb	r2, r2, #32
   84f30:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
   84f34:	fa21 f202 	lsr.w	r2, r1, r2
   84f38:	eb43 0002 	adc.w	r0, r3, r2
   84f3c:	bf08      	it	eq
   84f3e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   84f42:	4770      	bx	lr

00084f44 <__aeabi_fmul>:
   84f44:	f04f 0cff 	mov.w	ip, #255	; 0xff
   84f48:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   84f4c:	bf1e      	ittt	ne
   84f4e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   84f52:	ea92 0f0c 	teqne	r2, ip
   84f56:	ea93 0f0c 	teqne	r3, ip
   84f5a:	d06f      	beq.n	8503c <__aeabi_fmul+0xf8>
   84f5c:	441a      	add	r2, r3
   84f5e:	ea80 0c01 	eor.w	ip, r0, r1
   84f62:	0240      	lsls	r0, r0, #9
   84f64:	bf18      	it	ne
   84f66:	ea5f 2141 	movsne.w	r1, r1, lsl #9
   84f6a:	d01e      	beq.n	84faa <__aeabi_fmul+0x66>
   84f6c:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
   84f70:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
   84f74:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
   84f78:	fba0 3101 	umull	r3, r1, r0, r1
   84f7c:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   84f80:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
   84f84:	bf3e      	ittt	cc
   84f86:	0049      	lslcc	r1, r1, #1
   84f88:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
   84f8c:	005b      	lslcc	r3, r3, #1
   84f8e:	ea40 0001 	orr.w	r0, r0, r1
   84f92:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
   84f96:	2afd      	cmp	r2, #253	; 0xfd
   84f98:	d81d      	bhi.n	84fd6 <__aeabi_fmul+0x92>
   84f9a:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
   84f9e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   84fa2:	bf08      	it	eq
   84fa4:	f020 0001 	biceq.w	r0, r0, #1
   84fa8:	4770      	bx	lr
   84faa:	f090 0f00 	teq	r0, #0
   84fae:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   84fb2:	bf08      	it	eq
   84fb4:	0249      	lsleq	r1, r1, #9
   84fb6:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   84fba:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
   84fbe:	3a7f      	subs	r2, #127	; 0x7f
   84fc0:	bfc2      	ittt	gt
   84fc2:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   84fc6:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   84fca:	4770      	bxgt	lr
   84fcc:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   84fd0:	f04f 0300 	mov.w	r3, #0
   84fd4:	3a01      	subs	r2, #1
   84fd6:	dc5d      	bgt.n	85094 <__aeabi_fmul+0x150>
   84fd8:	f112 0f19 	cmn.w	r2, #25
   84fdc:	bfdc      	itt	le
   84fde:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
   84fe2:	4770      	bxle	lr
   84fe4:	f1c2 0200 	rsb	r2, r2, #0
   84fe8:	0041      	lsls	r1, r0, #1
   84fea:	fa21 f102 	lsr.w	r1, r1, r2
   84fee:	f1c2 0220 	rsb	r2, r2, #32
   84ff2:	fa00 fc02 	lsl.w	ip, r0, r2
   84ff6:	ea5f 0031 	movs.w	r0, r1, rrx
   84ffa:	f140 0000 	adc.w	r0, r0, #0
   84ffe:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
   85002:	bf08      	it	eq
   85004:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
   85008:	4770      	bx	lr
   8500a:	f092 0f00 	teq	r2, #0
   8500e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   85012:	bf02      	ittt	eq
   85014:	0040      	lsleq	r0, r0, #1
   85016:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   8501a:	3a01      	subeq	r2, #1
   8501c:	d0f9      	beq.n	85012 <__aeabi_fmul+0xce>
   8501e:	ea40 000c 	orr.w	r0, r0, ip
   85022:	f093 0f00 	teq	r3, #0
   85026:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   8502a:	bf02      	ittt	eq
   8502c:	0049      	lsleq	r1, r1, #1
   8502e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   85032:	3b01      	subeq	r3, #1
   85034:	d0f9      	beq.n	8502a <__aeabi_fmul+0xe6>
   85036:	ea41 010c 	orr.w	r1, r1, ip
   8503a:	e78f      	b.n	84f5c <__aeabi_fmul+0x18>
   8503c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   85040:	ea92 0f0c 	teq	r2, ip
   85044:	bf18      	it	ne
   85046:	ea93 0f0c 	teqne	r3, ip
   8504a:	d00a      	beq.n	85062 <__aeabi_fmul+0x11e>
   8504c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   85050:	bf18      	it	ne
   85052:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   85056:	d1d8      	bne.n	8500a <__aeabi_fmul+0xc6>
   85058:	ea80 0001 	eor.w	r0, r0, r1
   8505c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   85060:	4770      	bx	lr
   85062:	f090 0f00 	teq	r0, #0
   85066:	bf17      	itett	ne
   85068:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
   8506c:	4608      	moveq	r0, r1
   8506e:	f091 0f00 	teqne	r1, #0
   85072:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
   85076:	d014      	beq.n	850a2 <__aeabi_fmul+0x15e>
   85078:	ea92 0f0c 	teq	r2, ip
   8507c:	d101      	bne.n	85082 <__aeabi_fmul+0x13e>
   8507e:	0242      	lsls	r2, r0, #9
   85080:	d10f      	bne.n	850a2 <__aeabi_fmul+0x15e>
   85082:	ea93 0f0c 	teq	r3, ip
   85086:	d103      	bne.n	85090 <__aeabi_fmul+0x14c>
   85088:	024b      	lsls	r3, r1, #9
   8508a:	bf18      	it	ne
   8508c:	4608      	movne	r0, r1
   8508e:	d108      	bne.n	850a2 <__aeabi_fmul+0x15e>
   85090:	ea80 0001 	eor.w	r0, r0, r1
   85094:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
   85098:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   8509c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   850a0:	4770      	bx	lr
   850a2:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
   850a6:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
   850aa:	4770      	bx	lr

000850ac <__aeabi_fdiv>:
   850ac:	f04f 0cff 	mov.w	ip, #255	; 0xff
   850b0:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
   850b4:	bf1e      	ittt	ne
   850b6:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
   850ba:	ea92 0f0c 	teqne	r2, ip
   850be:	ea93 0f0c 	teqne	r3, ip
   850c2:	d069      	beq.n	85198 <__aeabi_fdiv+0xec>
   850c4:	eba2 0203 	sub.w	r2, r2, r3
   850c8:	ea80 0c01 	eor.w	ip, r0, r1
   850cc:	0249      	lsls	r1, r1, #9
   850ce:	ea4f 2040 	mov.w	r0, r0, lsl #9
   850d2:	d037      	beq.n	85144 <__aeabi_fdiv+0x98>
   850d4:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
   850d8:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
   850dc:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
   850e0:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
   850e4:	428b      	cmp	r3, r1
   850e6:	bf38      	it	cc
   850e8:	005b      	lslcc	r3, r3, #1
   850ea:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
   850ee:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
   850f2:	428b      	cmp	r3, r1
   850f4:	bf24      	itt	cs
   850f6:	1a5b      	subcs	r3, r3, r1
   850f8:	ea40 000c 	orrcs.w	r0, r0, ip
   850fc:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
   85100:	bf24      	itt	cs
   85102:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
   85106:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   8510a:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
   8510e:	bf24      	itt	cs
   85110:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
   85114:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   85118:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
   8511c:	bf24      	itt	cs
   8511e:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
   85122:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   85126:	011b      	lsls	r3, r3, #4
   85128:	bf18      	it	ne
   8512a:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
   8512e:	d1e0      	bne.n	850f2 <__aeabi_fdiv+0x46>
   85130:	2afd      	cmp	r2, #253	; 0xfd
   85132:	f63f af50 	bhi.w	84fd6 <__aeabi_fmul+0x92>
   85136:	428b      	cmp	r3, r1
   85138:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
   8513c:	bf08      	it	eq
   8513e:	f020 0001 	biceq.w	r0, r0, #1
   85142:	4770      	bx	lr
   85144:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
   85148:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
   8514c:	327f      	adds	r2, #127	; 0x7f
   8514e:	bfc2      	ittt	gt
   85150:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
   85154:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
   85158:	4770      	bxgt	lr
   8515a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
   8515e:	f04f 0300 	mov.w	r3, #0
   85162:	3a01      	subs	r2, #1
   85164:	e737      	b.n	84fd6 <__aeabi_fmul+0x92>
   85166:	f092 0f00 	teq	r2, #0
   8516a:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
   8516e:	bf02      	ittt	eq
   85170:	0040      	lsleq	r0, r0, #1
   85172:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
   85176:	3a01      	subeq	r2, #1
   85178:	d0f9      	beq.n	8516e <__aeabi_fdiv+0xc2>
   8517a:	ea40 000c 	orr.w	r0, r0, ip
   8517e:	f093 0f00 	teq	r3, #0
   85182:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
   85186:	bf02      	ittt	eq
   85188:	0049      	lsleq	r1, r1, #1
   8518a:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
   8518e:	3b01      	subeq	r3, #1
   85190:	d0f9      	beq.n	85186 <__aeabi_fdiv+0xda>
   85192:	ea41 010c 	orr.w	r1, r1, ip
   85196:	e795      	b.n	850c4 <__aeabi_fdiv+0x18>
   85198:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
   8519c:	ea92 0f0c 	teq	r2, ip
   851a0:	d108      	bne.n	851b4 <__aeabi_fdiv+0x108>
   851a2:	0242      	lsls	r2, r0, #9
   851a4:	f47f af7d 	bne.w	850a2 <__aeabi_fmul+0x15e>
   851a8:	ea93 0f0c 	teq	r3, ip
   851ac:	f47f af70 	bne.w	85090 <__aeabi_fmul+0x14c>
   851b0:	4608      	mov	r0, r1
   851b2:	e776      	b.n	850a2 <__aeabi_fmul+0x15e>
   851b4:	ea93 0f0c 	teq	r3, ip
   851b8:	d104      	bne.n	851c4 <__aeabi_fdiv+0x118>
   851ba:	024b      	lsls	r3, r1, #9
   851bc:	f43f af4c 	beq.w	85058 <__aeabi_fmul+0x114>
   851c0:	4608      	mov	r0, r1
   851c2:	e76e      	b.n	850a2 <__aeabi_fmul+0x15e>
   851c4:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
   851c8:	bf18      	it	ne
   851ca:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
   851ce:	d1ca      	bne.n	85166 <__aeabi_fdiv+0xba>
   851d0:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
   851d4:	f47f af5c 	bne.w	85090 <__aeabi_fmul+0x14c>
   851d8:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   851dc:	f47f af3c 	bne.w	85058 <__aeabi_fmul+0x114>
   851e0:	e75f      	b.n	850a2 <__aeabi_fmul+0x15e>
   851e2:	bf00      	nop

000851e4 <__aeabi_f2uiz>:
   851e4:	0042      	lsls	r2, r0, #1
   851e6:	d20e      	bcs.n	85206 <__aeabi_f2uiz+0x22>
   851e8:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
   851ec:	d30b      	bcc.n	85206 <__aeabi_f2uiz+0x22>
   851ee:	f04f 039e 	mov.w	r3, #158	; 0x9e
   851f2:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
   851f6:	d409      	bmi.n	8520c <__aeabi_f2uiz+0x28>
   851f8:	ea4f 2300 	mov.w	r3, r0, lsl #8
   851fc:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   85200:	fa23 f002 	lsr.w	r0, r3, r2
   85204:	4770      	bx	lr
   85206:	f04f 0000 	mov.w	r0, #0
   8520a:	4770      	bx	lr
   8520c:	f112 0f61 	cmn.w	r2, #97	; 0x61
   85210:	d101      	bne.n	85216 <__aeabi_f2uiz+0x32>
   85212:	0242      	lsls	r2, r0, #9
   85214:	d102      	bne.n	8521c <__aeabi_f2uiz+0x38>
   85216:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   8521a:	4770      	bx	lr
   8521c:	f04f 0000 	mov.w	r0, #0
   85220:	4770      	bx	lr
   85222:	bf00      	nop

00085224 <__aeabi_uldivmod>:
   85224:	b953      	cbnz	r3, 8523c <__aeabi_uldivmod+0x18>
   85226:	b94a      	cbnz	r2, 8523c <__aeabi_uldivmod+0x18>
   85228:	2900      	cmp	r1, #0
   8522a:	bf08      	it	eq
   8522c:	2800      	cmpeq	r0, #0
   8522e:	bf1c      	itt	ne
   85230:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
   85234:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
   85238:	f000 b974 	b.w	85524 <__aeabi_idiv0>
   8523c:	f1ad 0c08 	sub.w	ip, sp, #8
   85240:	e96d ce04 	strd	ip, lr, [sp, #-16]!
   85244:	f000 f806 	bl	85254 <__udivmoddi4>
   85248:	f8dd e004 	ldr.w	lr, [sp, #4]
   8524c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   85250:	b004      	add	sp, #16
   85252:	4770      	bx	lr

00085254 <__udivmoddi4>:
   85254:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   85258:	468c      	mov	ip, r1
   8525a:	4604      	mov	r4, r0
   8525c:	9e08      	ldr	r6, [sp, #32]
   8525e:	2b00      	cmp	r3, #0
   85260:	d14b      	bne.n	852fa <__udivmoddi4+0xa6>
   85262:	428a      	cmp	r2, r1
   85264:	4615      	mov	r5, r2
   85266:	d967      	bls.n	85338 <__udivmoddi4+0xe4>
   85268:	fab2 f282 	clz	r2, r2
   8526c:	b14a      	cbz	r2, 85282 <__udivmoddi4+0x2e>
   8526e:	f1c2 0720 	rsb	r7, r2, #32
   85272:	fa01 f302 	lsl.w	r3, r1, r2
   85276:	fa20 f707 	lsr.w	r7, r0, r7
   8527a:	4095      	lsls	r5, r2
   8527c:	ea47 0c03 	orr.w	ip, r7, r3
   85280:	4094      	lsls	r4, r2
   85282:	ea4f 4e15 	mov.w	lr, r5, lsr #16
   85286:	fbbc f7fe 	udiv	r7, ip, lr
   8528a:	fa1f f885 	uxth.w	r8, r5
   8528e:	fb0e c317 	mls	r3, lr, r7, ip
   85292:	fb07 f908 	mul.w	r9, r7, r8
   85296:	0c21      	lsrs	r1, r4, #16
   85298:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
   8529c:	4599      	cmp	r9, r3
   8529e:	d909      	bls.n	852b4 <__udivmoddi4+0x60>
   852a0:	18eb      	adds	r3, r5, r3
   852a2:	f107 31ff 	add.w	r1, r7, #4294967295	; 0xffffffff
   852a6:	f080 811c 	bcs.w	854e2 <__udivmoddi4+0x28e>
   852aa:	4599      	cmp	r9, r3
   852ac:	f240 8119 	bls.w	854e2 <__udivmoddi4+0x28e>
   852b0:	3f02      	subs	r7, #2
   852b2:	442b      	add	r3, r5
   852b4:	eba3 0309 	sub.w	r3, r3, r9
   852b8:	fbb3 f0fe 	udiv	r0, r3, lr
   852bc:	fb0e 3310 	mls	r3, lr, r0, r3
   852c0:	fb00 f108 	mul.w	r1, r0, r8
   852c4:	b2a4      	uxth	r4, r4
   852c6:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
   852ca:	42a1      	cmp	r1, r4
   852cc:	d909      	bls.n	852e2 <__udivmoddi4+0x8e>
   852ce:	192c      	adds	r4, r5, r4
   852d0:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
   852d4:	f080 8107 	bcs.w	854e6 <__udivmoddi4+0x292>
   852d8:	42a1      	cmp	r1, r4
   852da:	f240 8104 	bls.w	854e6 <__udivmoddi4+0x292>
   852de:	3802      	subs	r0, #2
   852e0:	442c      	add	r4, r5
   852e2:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
   852e6:	2700      	movs	r7, #0
   852e8:	1a64      	subs	r4, r4, r1
   852ea:	b11e      	cbz	r6, 852f4 <__udivmoddi4+0xa0>
   852ec:	2300      	movs	r3, #0
   852ee:	40d4      	lsrs	r4, r2
   852f0:	e9c6 4300 	strd	r4, r3, [r6]
   852f4:	4639      	mov	r1, r7
   852f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   852fa:	428b      	cmp	r3, r1
   852fc:	d909      	bls.n	85312 <__udivmoddi4+0xbe>
   852fe:	2e00      	cmp	r6, #0
   85300:	f000 80ec 	beq.w	854dc <__udivmoddi4+0x288>
   85304:	2700      	movs	r7, #0
   85306:	e9c6 0100 	strd	r0, r1, [r6]
   8530a:	4638      	mov	r0, r7
   8530c:	4639      	mov	r1, r7
   8530e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   85312:	fab3 f783 	clz	r7, r3
   85316:	2f00      	cmp	r7, #0
   85318:	d148      	bne.n	853ac <__udivmoddi4+0x158>
   8531a:	428b      	cmp	r3, r1
   8531c:	d302      	bcc.n	85324 <__udivmoddi4+0xd0>
   8531e:	4282      	cmp	r2, r0
   85320:	f200 80fb 	bhi.w	8551a <__udivmoddi4+0x2c6>
   85324:	1a84      	subs	r4, r0, r2
   85326:	eb61 0303 	sbc.w	r3, r1, r3
   8532a:	2001      	movs	r0, #1
   8532c:	469c      	mov	ip, r3
   8532e:	2e00      	cmp	r6, #0
   85330:	d0e0      	beq.n	852f4 <__udivmoddi4+0xa0>
   85332:	e9c6 4c00 	strd	r4, ip, [r6]
   85336:	e7dd      	b.n	852f4 <__udivmoddi4+0xa0>
   85338:	b902      	cbnz	r2, 8533c <__udivmoddi4+0xe8>
   8533a:	deff      	udf	#255	; 0xff
   8533c:	fab2 f282 	clz	r2, r2
   85340:	2a00      	cmp	r2, #0
   85342:	f040 808f 	bne.w	85464 <__udivmoddi4+0x210>
   85346:	2701      	movs	r7, #1
   85348:	1b49      	subs	r1, r1, r5
   8534a:	ea4f 4815 	mov.w	r8, r5, lsr #16
   8534e:	fa1f f985 	uxth.w	r9, r5
   85352:	fbb1 fef8 	udiv	lr, r1, r8
   85356:	fb08 111e 	mls	r1, r8, lr, r1
   8535a:	fb09 f00e 	mul.w	r0, r9, lr
   8535e:	ea4f 4c14 	mov.w	ip, r4, lsr #16
   85362:	ea4c 4301 	orr.w	r3, ip, r1, lsl #16
   85366:	4298      	cmp	r0, r3
   85368:	d907      	bls.n	8537a <__udivmoddi4+0x126>
   8536a:	18eb      	adds	r3, r5, r3
   8536c:	f10e 31ff 	add.w	r1, lr, #4294967295	; 0xffffffff
   85370:	d202      	bcs.n	85378 <__udivmoddi4+0x124>
   85372:	4298      	cmp	r0, r3
   85374:	f200 80cd 	bhi.w	85512 <__udivmoddi4+0x2be>
   85378:	468e      	mov	lr, r1
   8537a:	1a1b      	subs	r3, r3, r0
   8537c:	fbb3 f0f8 	udiv	r0, r3, r8
   85380:	fb08 3310 	mls	r3, r8, r0, r3
   85384:	fb09 f900 	mul.w	r9, r9, r0
   85388:	b2a4      	uxth	r4, r4
   8538a:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
   8538e:	45a1      	cmp	r9, r4
   85390:	d907      	bls.n	853a2 <__udivmoddi4+0x14e>
   85392:	192c      	adds	r4, r5, r4
   85394:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
   85398:	d202      	bcs.n	853a0 <__udivmoddi4+0x14c>
   8539a:	45a1      	cmp	r9, r4
   8539c:	f200 80b6 	bhi.w	8550c <__udivmoddi4+0x2b8>
   853a0:	4618      	mov	r0, r3
   853a2:	eba4 0409 	sub.w	r4, r4, r9
   853a6:	ea40 400e 	orr.w	r0, r0, lr, lsl #16
   853aa:	e79e      	b.n	852ea <__udivmoddi4+0x96>
   853ac:	f1c7 0520 	rsb	r5, r7, #32
   853b0:	40bb      	lsls	r3, r7
   853b2:	fa22 fc05 	lsr.w	ip, r2, r5
   853b6:	ea4c 0c03 	orr.w	ip, ip, r3
   853ba:	fa21 f405 	lsr.w	r4, r1, r5
   853be:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
   853c2:	fbb4 f9fe 	udiv	r9, r4, lr
   853c6:	fa1f f88c 	uxth.w	r8, ip
   853ca:	fb0e 4419 	mls	r4, lr, r9, r4
   853ce:	fa20 f305 	lsr.w	r3, r0, r5
   853d2:	40b9      	lsls	r1, r7
   853d4:	fb09 fa08 	mul.w	sl, r9, r8
   853d8:	4319      	orrs	r1, r3
   853da:	0c0b      	lsrs	r3, r1, #16
   853dc:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
   853e0:	45a2      	cmp	sl, r4
   853e2:	fa02 f207 	lsl.w	r2, r2, r7
   853e6:	fa00 f307 	lsl.w	r3, r0, r7
   853ea:	d90b      	bls.n	85404 <__udivmoddi4+0x1b0>
   853ec:	eb1c 0404 	adds.w	r4, ip, r4
   853f0:	f109 30ff 	add.w	r0, r9, #4294967295	; 0xffffffff
   853f4:	f080 8088 	bcs.w	85508 <__udivmoddi4+0x2b4>
   853f8:	45a2      	cmp	sl, r4
   853fa:	f240 8085 	bls.w	85508 <__udivmoddi4+0x2b4>
   853fe:	f1a9 0902 	sub.w	r9, r9, #2
   85402:	4464      	add	r4, ip
   85404:	eba4 040a 	sub.w	r4, r4, sl
   85408:	fbb4 f0fe 	udiv	r0, r4, lr
   8540c:	fb0e 4410 	mls	r4, lr, r0, r4
   85410:	fb00 fa08 	mul.w	sl, r0, r8
   85414:	b289      	uxth	r1, r1
   85416:	ea41 4404 	orr.w	r4, r1, r4, lsl #16
   8541a:	45a2      	cmp	sl, r4
   8541c:	d908      	bls.n	85430 <__udivmoddi4+0x1dc>
   8541e:	eb1c 0404 	adds.w	r4, ip, r4
   85422:	f100 31ff 	add.w	r1, r0, #4294967295	; 0xffffffff
   85426:	d26b      	bcs.n	85500 <__udivmoddi4+0x2ac>
   85428:	45a2      	cmp	sl, r4
   8542a:	d969      	bls.n	85500 <__udivmoddi4+0x2ac>
   8542c:	3802      	subs	r0, #2
   8542e:	4464      	add	r4, ip
   85430:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
   85434:	fba0 8902 	umull	r8, r9, r0, r2
   85438:	eba4 040a 	sub.w	r4, r4, sl
   8543c:	454c      	cmp	r4, r9
   8543e:	4641      	mov	r1, r8
   85440:	46ce      	mov	lr, r9
   85442:	d354      	bcc.n	854ee <__udivmoddi4+0x29a>
   85444:	d051      	beq.n	854ea <__udivmoddi4+0x296>
   85446:	2e00      	cmp	r6, #0
   85448:	d069      	beq.n	8551e <__udivmoddi4+0x2ca>
   8544a:	1a5a      	subs	r2, r3, r1
   8544c:	eb64 040e 	sbc.w	r4, r4, lr
   85450:	fa04 f505 	lsl.w	r5, r4, r5
   85454:	fa22 f307 	lsr.w	r3, r2, r7
   85458:	40fc      	lsrs	r4, r7
   8545a:	431d      	orrs	r5, r3
   8545c:	e9c6 5400 	strd	r5, r4, [r6]
   85460:	2700      	movs	r7, #0
   85462:	e747      	b.n	852f4 <__udivmoddi4+0xa0>
   85464:	4095      	lsls	r5, r2
   85466:	f1c2 0320 	rsb	r3, r2, #32
   8546a:	fa21 f003 	lsr.w	r0, r1, r3
   8546e:	ea4f 4815 	mov.w	r8, r5, lsr #16
   85472:	fbb0 f7f8 	udiv	r7, r0, r8
   85476:	fa1f f985 	uxth.w	r9, r5
   8547a:	fb08 0017 	mls	r0, r8, r7, r0
   8547e:	fa24 f303 	lsr.w	r3, r4, r3
   85482:	4091      	lsls	r1, r2
   85484:	fb07 fc09 	mul.w	ip, r7, r9
   85488:	430b      	orrs	r3, r1
   8548a:	0c19      	lsrs	r1, r3, #16
   8548c:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
   85490:	458c      	cmp	ip, r1
   85492:	fa04 f402 	lsl.w	r4, r4, r2
   85496:	d907      	bls.n	854a8 <__udivmoddi4+0x254>
   85498:	1869      	adds	r1, r5, r1
   8549a:	f107 30ff 	add.w	r0, r7, #4294967295	; 0xffffffff
   8549e:	d231      	bcs.n	85504 <__udivmoddi4+0x2b0>
   854a0:	458c      	cmp	ip, r1
   854a2:	d92f      	bls.n	85504 <__udivmoddi4+0x2b0>
   854a4:	3f02      	subs	r7, #2
   854a6:	4429      	add	r1, r5
   854a8:	eba1 010c 	sub.w	r1, r1, ip
   854ac:	fbb1 f0f8 	udiv	r0, r1, r8
   854b0:	fb08 1c10 	mls	ip, r8, r0, r1
   854b4:	fb00 fe09 	mul.w	lr, r0, r9
   854b8:	b299      	uxth	r1, r3
   854ba:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
   854be:	458e      	cmp	lr, r1
   854c0:	d907      	bls.n	854d2 <__udivmoddi4+0x27e>
   854c2:	1869      	adds	r1, r5, r1
   854c4:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
   854c8:	d218      	bcs.n	854fc <__udivmoddi4+0x2a8>
   854ca:	458e      	cmp	lr, r1
   854cc:	d916      	bls.n	854fc <__udivmoddi4+0x2a8>
   854ce:	3802      	subs	r0, #2
   854d0:	4429      	add	r1, r5
   854d2:	eba1 010e 	sub.w	r1, r1, lr
   854d6:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
   854da:	e73a      	b.n	85352 <__udivmoddi4+0xfe>
   854dc:	4637      	mov	r7, r6
   854de:	4630      	mov	r0, r6
   854e0:	e708      	b.n	852f4 <__udivmoddi4+0xa0>
   854e2:	460f      	mov	r7, r1
   854e4:	e6e6      	b.n	852b4 <__udivmoddi4+0x60>
   854e6:	4618      	mov	r0, r3
   854e8:	e6fb      	b.n	852e2 <__udivmoddi4+0x8e>
   854ea:	4543      	cmp	r3, r8
   854ec:	d2ab      	bcs.n	85446 <__udivmoddi4+0x1f2>
   854ee:	ebb8 0102 	subs.w	r1, r8, r2
   854f2:	eb69 020c 	sbc.w	r2, r9, ip
   854f6:	3801      	subs	r0, #1
   854f8:	4696      	mov	lr, r2
   854fa:	e7a4      	b.n	85446 <__udivmoddi4+0x1f2>
   854fc:	4618      	mov	r0, r3
   854fe:	e7e8      	b.n	854d2 <__udivmoddi4+0x27e>
   85500:	4608      	mov	r0, r1
   85502:	e795      	b.n	85430 <__udivmoddi4+0x1dc>
   85504:	4607      	mov	r7, r0
   85506:	e7cf      	b.n	854a8 <__udivmoddi4+0x254>
   85508:	4681      	mov	r9, r0
   8550a:	e77b      	b.n	85404 <__udivmoddi4+0x1b0>
   8550c:	3802      	subs	r0, #2
   8550e:	442c      	add	r4, r5
   85510:	e747      	b.n	853a2 <__udivmoddi4+0x14e>
   85512:	f1ae 0e02 	sub.w	lr, lr, #2
   85516:	442b      	add	r3, r5
   85518:	e72f      	b.n	8537a <__udivmoddi4+0x126>
   8551a:	4638      	mov	r0, r7
   8551c:	e707      	b.n	8532e <__udivmoddi4+0xda>
   8551e:	4637      	mov	r7, r6
   85520:	e6e8      	b.n	852f4 <__udivmoddi4+0xa0>
   85522:	bf00      	nop

00085524 <__aeabi_idiv0>:
   85524:	4770      	bx	lr
   85526:	bf00      	nop

00085528 <atexit>:
   85528:	2300      	movs	r3, #0
   8552a:	4601      	mov	r1, r0
   8552c:	461a      	mov	r2, r3
   8552e:	4618      	mov	r0, r3
   85530:	f001 bb6a 	b.w	86c08 <__register_exitproc>

00085534 <__libc_fini_array>:
   85534:	b538      	push	{r3, r4, r5, lr}
   85536:	4c0a      	ldr	r4, [pc, #40]	; (85560 <__libc_fini_array+0x2c>)
   85538:	4d0a      	ldr	r5, [pc, #40]	; (85564 <__libc_fini_array+0x30>)
   8553a:	1b64      	subs	r4, r4, r5
   8553c:	10a4      	asrs	r4, r4, #2
   8553e:	d00a      	beq.n	85556 <__libc_fini_array+0x22>
   85540:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
   85544:	3b01      	subs	r3, #1
   85546:	eb05 0583 	add.w	r5, r5, r3, lsl #2
   8554a:	3c01      	subs	r4, #1
   8554c:	f855 3904 	ldr.w	r3, [r5], #-4
   85550:	4798      	blx	r3
   85552:	2c00      	cmp	r4, #0
   85554:	d1f9      	bne.n	8554a <__libc_fini_array+0x16>
   85556:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   8555a:	f004 bf79 	b.w	8a450 <_fini>
   8555e:	bf00      	nop
   85560:	0008a474 	.word	0x0008a474
   85564:	0008a470 	.word	0x0008a470

00085568 <__libc_init_array>:
   85568:	b570      	push	{r4, r5, r6, lr}
   8556a:	4e0d      	ldr	r6, [pc, #52]	; (855a0 <__libc_init_array+0x38>)
   8556c:	4d0d      	ldr	r5, [pc, #52]	; (855a4 <__libc_init_array+0x3c>)
   8556e:	1b76      	subs	r6, r6, r5
   85570:	10b6      	asrs	r6, r6, #2
   85572:	d006      	beq.n	85582 <__libc_init_array+0x1a>
   85574:	2400      	movs	r4, #0
   85576:	3401      	adds	r4, #1
   85578:	f855 3b04 	ldr.w	r3, [r5], #4
   8557c:	4798      	blx	r3
   8557e:	42a6      	cmp	r6, r4
   85580:	d1f9      	bne.n	85576 <__libc_init_array+0xe>
   85582:	4e09      	ldr	r6, [pc, #36]	; (855a8 <__libc_init_array+0x40>)
   85584:	4d09      	ldr	r5, [pc, #36]	; (855ac <__libc_init_array+0x44>)
   85586:	f004 ff59 	bl	8a43c <_init>
   8558a:	1b76      	subs	r6, r6, r5
   8558c:	10b6      	asrs	r6, r6, #2
   8558e:	d006      	beq.n	8559e <__libc_init_array+0x36>
   85590:	2400      	movs	r4, #0
   85592:	3401      	adds	r4, #1
   85594:	f855 3b04 	ldr.w	r3, [r5], #4
   85598:	4798      	blx	r3
   8559a:	42a6      	cmp	r6, r4
   8559c:	d1f9      	bne.n	85592 <__libc_init_array+0x2a>
   8559e:	bd70      	pop	{r4, r5, r6, pc}
   855a0:	0008a448 	.word	0x0008a448
   855a4:	0008a448 	.word	0x0008a448
   855a8:	0008a450 	.word	0x0008a450
   855ac:	0008a448 	.word	0x0008a448

000855b0 <memset>:
   855b0:	b4f0      	push	{r4, r5, r6, r7}
   855b2:	0786      	lsls	r6, r0, #30
   855b4:	d043      	beq.n	8563e <memset+0x8e>
   855b6:	1e54      	subs	r4, r2, #1
   855b8:	2a00      	cmp	r2, #0
   855ba:	d03e      	beq.n	8563a <memset+0x8a>
   855bc:	b2ca      	uxtb	r2, r1
   855be:	4603      	mov	r3, r0
   855c0:	e002      	b.n	855c8 <memset+0x18>
   855c2:	f114 34ff 	adds.w	r4, r4, #4294967295	; 0xffffffff
   855c6:	d338      	bcc.n	8563a <memset+0x8a>
   855c8:	f803 2b01 	strb.w	r2, [r3], #1
   855cc:	079d      	lsls	r5, r3, #30
   855ce:	d1f8      	bne.n	855c2 <memset+0x12>
   855d0:	2c03      	cmp	r4, #3
   855d2:	d92b      	bls.n	8562c <memset+0x7c>
   855d4:	b2cd      	uxtb	r5, r1
   855d6:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   855da:	2c0f      	cmp	r4, #15
   855dc:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   855e0:	d916      	bls.n	85610 <memset+0x60>
   855e2:	f1a4 0710 	sub.w	r7, r4, #16
   855e6:	093f      	lsrs	r7, r7, #4
   855e8:	f103 0620 	add.w	r6, r3, #32
   855ec:	eb06 1607 	add.w	r6, r6, r7, lsl #4
   855f0:	f103 0210 	add.w	r2, r3, #16
   855f4:	e942 5504 	strd	r5, r5, [r2, #-16]
   855f8:	e942 5502 	strd	r5, r5, [r2, #-8]
   855fc:	3210      	adds	r2, #16
   855fe:	42b2      	cmp	r2, r6
   85600:	d1f8      	bne.n	855f4 <memset+0x44>
   85602:	f004 040f 	and.w	r4, r4, #15
   85606:	3701      	adds	r7, #1
   85608:	2c03      	cmp	r4, #3
   8560a:	eb03 1307 	add.w	r3, r3, r7, lsl #4
   8560e:	d90d      	bls.n	8562c <memset+0x7c>
   85610:	461e      	mov	r6, r3
   85612:	4622      	mov	r2, r4
   85614:	3a04      	subs	r2, #4
   85616:	2a03      	cmp	r2, #3
   85618:	f846 5b04 	str.w	r5, [r6], #4
   8561c:	d8fa      	bhi.n	85614 <memset+0x64>
   8561e:	1f22      	subs	r2, r4, #4
   85620:	f022 0203 	bic.w	r2, r2, #3
   85624:	3204      	adds	r2, #4
   85626:	4413      	add	r3, r2
   85628:	f004 0403 	and.w	r4, r4, #3
   8562c:	b12c      	cbz	r4, 8563a <memset+0x8a>
   8562e:	b2c9      	uxtb	r1, r1
   85630:	441c      	add	r4, r3
   85632:	f803 1b01 	strb.w	r1, [r3], #1
   85636:	429c      	cmp	r4, r3
   85638:	d1fb      	bne.n	85632 <memset+0x82>
   8563a:	bcf0      	pop	{r4, r5, r6, r7}
   8563c:	4770      	bx	lr
   8563e:	4614      	mov	r4, r2
   85640:	4603      	mov	r3, r0
   85642:	e7c5      	b.n	855d0 <memset+0x20>

00085644 <_sprintf_r>:
   85644:	b40c      	push	{r2, r3}
   85646:	b570      	push	{r4, r5, r6, lr}
   85648:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
   8564c:	b09c      	sub	sp, #112	; 0x70
   8564e:	ac20      	add	r4, sp, #128	; 0x80
   85650:	f854 2b04 	ldr.w	r2, [r4], #4
   85654:	4e09      	ldr	r6, [pc, #36]	; (8567c <_sprintf_r+0x38>)
   85656:	9102      	str	r1, [sp, #8]
   85658:	9106      	str	r1, [sp, #24]
   8565a:	4623      	mov	r3, r4
   8565c:	a902      	add	r1, sp, #8
   8565e:	9401      	str	r4, [sp, #4]
   85660:	9507      	str	r5, [sp, #28]
   85662:	e9cd 5604 	strd	r5, r6, [sp, #16]
   85666:	f000 f85b 	bl	85720 <_svfprintf_r>
   8566a:	2200      	movs	r2, #0
   8566c:	9b02      	ldr	r3, [sp, #8]
   8566e:	701a      	strb	r2, [r3, #0]
   85670:	b01c      	add	sp, #112	; 0x70
   85672:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
   85676:	b002      	add	sp, #8
   85678:	4770      	bx	lr
   8567a:	bf00      	nop
   8567c:	ffff0208 	.word	0xffff0208

00085680 <sprintf>:
   85680:	b40e      	push	{r1, r2, r3}
   85682:	4603      	mov	r3, r0
   85684:	b530      	push	{r4, r5, lr}
   85686:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
   8568a:	b09c      	sub	sp, #112	; 0x70
   8568c:	a91f      	add	r1, sp, #124	; 0x7c
   8568e:	f851 2b04 	ldr.w	r2, [r1], #4
   85692:	480a      	ldr	r0, [pc, #40]	; (856bc <sprintf+0x3c>)
   85694:	4d0a      	ldr	r5, [pc, #40]	; (856c0 <sprintf+0x40>)
   85696:	9302      	str	r3, [sp, #8]
   85698:	9306      	str	r3, [sp, #24]
   8569a:	9101      	str	r1, [sp, #4]
   8569c:	460b      	mov	r3, r1
   8569e:	6800      	ldr	r0, [r0, #0]
   856a0:	a902      	add	r1, sp, #8
   856a2:	9407      	str	r4, [sp, #28]
   856a4:	e9cd 4504 	strd	r4, r5, [sp, #16]
   856a8:	f000 f83a 	bl	85720 <_svfprintf_r>
   856ac:	2200      	movs	r2, #0
   856ae:	9b02      	ldr	r3, [sp, #8]
   856b0:	701a      	strb	r2, [r3, #0]
   856b2:	b01c      	add	sp, #112	; 0x70
   856b4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
   856b8:	b003      	add	sp, #12
   856ba:	4770      	bx	lr
   856bc:	200703f8 	.word	0x200703f8
   856c0:	ffff0208 	.word	0xffff0208

000856c4 <strlen>:
   856c4:	f020 0103 	bic.w	r1, r0, #3
   856c8:	f010 0003 	ands.w	r0, r0, #3
   856cc:	f1c0 0000 	rsb	r0, r0, #0
   856d0:	f851 3b04 	ldr.w	r3, [r1], #4
   856d4:	f100 0c04 	add.w	ip, r0, #4
   856d8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   856dc:	f06f 0200 	mvn.w	r2, #0
   856e0:	bf1c      	itt	ne
   856e2:	fa22 f20c 	lsrne.w	r2, r2, ip
   856e6:	4313      	orrne	r3, r2
   856e8:	f04f 0c01 	mov.w	ip, #1
   856ec:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   856f0:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   856f4:	eba3 020c 	sub.w	r2, r3, ip
   856f8:	ea22 0203 	bic.w	r2, r2, r3
   856fc:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   85700:	bf04      	itt	eq
   85702:	f851 3b04 	ldreq.w	r3, [r1], #4
   85706:	3004      	addeq	r0, #4
   85708:	d0f4      	beq.n	856f4 <strlen+0x30>
   8570a:	f1c2 0100 	rsb	r1, r2, #0
   8570e:	ea02 0201 	and.w	r2, r2, r1
   85712:	fab2 f282 	clz	r2, r2
   85716:	f1c2 021f 	rsb	r2, r2, #31
   8571a:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
   8571e:	4770      	bx	lr

00085720 <_svfprintf_r>:
   85720:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   85724:	b0c3      	sub	sp, #268	; 0x10c
   85726:	460c      	mov	r4, r1
   85728:	910c      	str	r1, [sp, #48]	; 0x30
   8572a:	4690      	mov	r8, r2
   8572c:	930f      	str	r3, [sp, #60]	; 0x3c
   8572e:	900d      	str	r0, [sp, #52]	; 0x34
   85730:	f002 fb94 	bl	87e5c <_localeconv_r>
   85734:	6803      	ldr	r3, [r0, #0]
   85736:	4618      	mov	r0, r3
   85738:	931a      	str	r3, [sp, #104]	; 0x68
   8573a:	f7ff ffc3 	bl	856c4 <strlen>
   8573e:	89a3      	ldrh	r3, [r4, #12]
   85740:	9019      	str	r0, [sp, #100]	; 0x64
   85742:	061d      	lsls	r5, r3, #24
   85744:	d503      	bpl.n	8574e <_svfprintf_r+0x2e>
   85746:	6923      	ldr	r3, [r4, #16]
   85748:	2b00      	cmp	r3, #0
   8574a:	f000 8736 	beq.w	865ba <_svfprintf_r+0xe9a>
   8574e:	2300      	movs	r3, #0
   85750:	f10d 0ac8 	add.w	sl, sp, #200	; 0xc8
   85754:	46d1      	mov	r9, sl
   85756:	46c3      	mov	fp, r8
   85758:	e9cd 3316 	strd	r3, r3, [sp, #88]	; 0x58
   8575c:	e9cd 3326 	strd	r3, r3, [sp, #152]	; 0x98
   85760:	9315      	str	r3, [sp, #84]	; 0x54
   85762:	9313      	str	r3, [sp, #76]	; 0x4c
   85764:	9314      	str	r3, [sp, #80]	; 0x50
   85766:	9318      	str	r3, [sp, #96]	; 0x60
   85768:	931b      	str	r3, [sp, #108]	; 0x6c
   8576a:	930a      	str	r3, [sp, #40]	; 0x28
   8576c:	f8cd a094 	str.w	sl, [sp, #148]	; 0x94
   85770:	f89b 3000 	ldrb.w	r3, [fp]
   85774:	2b00      	cmp	r3, #0
   85776:	f000 8097 	beq.w	858a8 <_svfprintf_r+0x188>
   8577a:	2b25      	cmp	r3, #37	; 0x25
   8577c:	465c      	mov	r4, fp
   8577e:	d102      	bne.n	85786 <_svfprintf_r+0x66>
   85780:	e01a      	b.n	857b8 <_svfprintf_r+0x98>
   85782:	2b25      	cmp	r3, #37	; 0x25
   85784:	d003      	beq.n	8578e <_svfprintf_r+0x6e>
   85786:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   8578a:	2b00      	cmp	r3, #0
   8578c:	d1f9      	bne.n	85782 <_svfprintf_r+0x62>
   8578e:	eba4 050b 	sub.w	r5, r4, fp
   85792:	b175      	cbz	r5, 857b2 <_svfprintf_r+0x92>
   85794:	e9dd 3226 	ldrd	r3, r2, [sp, #152]	; 0x98
   85798:	3301      	adds	r3, #1
   8579a:	442a      	add	r2, r5
   8579c:	2b07      	cmp	r3, #7
   8579e:	e9c9 b500 	strd	fp, r5, [r9]
   857a2:	e9cd 3226 	strd	r3, r2, [sp, #152]	; 0x98
   857a6:	dc77      	bgt.n	85898 <_svfprintf_r+0x178>
   857a8:	f109 0908 	add.w	r9, r9, #8
   857ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   857ae:	442b      	add	r3, r5
   857b0:	930a      	str	r3, [sp, #40]	; 0x28
   857b2:	7823      	ldrb	r3, [r4, #0]
   857b4:	2b00      	cmp	r3, #0
   857b6:	d077      	beq.n	858a8 <_svfprintf_r+0x188>
   857b8:	2300      	movs	r3, #0
   857ba:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   857be:	461a      	mov	r2, r3
   857c0:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   857c4:	4619      	mov	r1, r3
   857c6:	930b      	str	r3, [sp, #44]	; 0x2c
   857c8:	4698      	mov	r8, r3
   857ca:	7863      	ldrb	r3, [r4, #1]
   857cc:	f104 0b01 	add.w	fp, r4, #1
   857d0:	9009      	str	r0, [sp, #36]	; 0x24
   857d2:	461f      	mov	r7, r3
   857d4:	f10b 0b01 	add.w	fp, fp, #1
   857d8:	f1a7 0320 	sub.w	r3, r7, #32
   857dc:	2b58      	cmp	r3, #88	; 0x58
   857de:	f200 8374 	bhi.w	85eca <_svfprintf_r+0x7aa>
   857e2:	e8df f013 	tbh	[pc, r3, lsl #1]
   857e6:	02d1      	.short	0x02d1
   857e8:	03720372 	.word	0x03720372
   857ec:	037202cc 	.word	0x037202cc
   857f0:	03720372 	.word	0x03720372
   857f4:	03720372 	.word	0x03720372
   857f8:	02bf0372 	.word	0x02bf0372
   857fc:	037202ba 	.word	0x037202ba
   85800:	034c0366 	.word	0x034c0366
   85804:	036b0372 	.word	0x036b0372
   85808:	00b600b6 	.word	0x00b600b6
   8580c:	00b600b6 	.word	0x00b600b6
   85810:	00b600b6 	.word	0x00b600b6
   85814:	00b600b6 	.word	0x00b600b6
   85818:	037200b6 	.word	0x037200b6
   8581c:	03720372 	.word	0x03720372
   85820:	03720372 	.word	0x03720372
   85824:	03720372 	.word	0x03720372
   85828:	03720372 	.word	0x03720372
   8582c:	03340372 	.word	0x03340372
   85830:	037202f5 	.word	0x037202f5
   85834:	037202f5 	.word	0x037202f5
   85838:	03720372 	.word	0x03720372
   8583c:	02f00372 	.word	0x02f00372
   85840:	03720372 	.word	0x03720372
   85844:	037200a5 	.word	0x037200a5
   85848:	03720372 	.word	0x03720372
   8584c:	03720372 	.word	0x03720372
   85850:	03720075 	.word	0x03720075
   85854:	02980372 	.word	0x02980372
   85858:	03720372 	.word	0x03720372
   8585c:	03720372 	.word	0x03720372
   85860:	03720372 	.word	0x03720372
   85864:	03720372 	.word	0x03720372
   85868:	03720372 	.word	0x03720372
   8586c:	012b0179 	.word	0x012b0179
   85870:	02f502f5 	.word	0x02f502f5
   85874:	012602f5 	.word	0x012602f5
   85878:	0372012b 	.word	0x0372012b
   8587c:	01190372 	.word	0x01190372
   85880:	01030372 	.word	0x01030372
   85884:	00ca00a7 	.word	0x00ca00a7
   85888:	037200c5 	.word	0x037200c5
   8588c:	037200da 	.word	0x037200da
   85890:	03720077 	.word	0x03720077
   85894:	02d90372 	.word	0x02d90372
   85898:	aa25      	add	r2, sp, #148	; 0x94
   8589a:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   8589e:	f003 fd0b 	bl	892b8 <__ssprint_r>
   858a2:	b940      	cbnz	r0, 858b6 <_svfprintf_r+0x196>
   858a4:	46d1      	mov	r9, sl
   858a6:	e781      	b.n	857ac <_svfprintf_r+0x8c>
   858a8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
   858aa:	b123      	cbz	r3, 858b6 <_svfprintf_r+0x196>
   858ac:	980d      	ldr	r0, [sp, #52]	; 0x34
   858ae:	aa25      	add	r2, sp, #148	; 0x94
   858b0:	990c      	ldr	r1, [sp, #48]	; 0x30
   858b2:	f003 fd01 	bl	892b8 <__ssprint_r>
   858b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   858b8:	899b      	ldrh	r3, [r3, #12]
   858ba:	f013 0f40 	tst.w	r3, #64	; 0x40
   858be:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   858c0:	bf18      	it	ne
   858c2:	f04f 33ff 	movne.w	r3, #4294967295	; 0xffffffff
   858c6:	930a      	str	r3, [sp, #40]	; 0x28
   858c8:	980a      	ldr	r0, [sp, #40]	; 0x28
   858ca:	b043      	add	sp, #268	; 0x10c
   858cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   858d0:	f048 0810 	orr.w	r8, r8, #16
   858d4:	f018 0f20 	tst.w	r8, #32
   858d8:	f000 8548 	beq.w	8636c <_svfprintf_r+0xc4c>
   858dc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   858de:	3407      	adds	r4, #7
   858e0:	f024 0307 	bic.w	r3, r4, #7
   858e4:	f103 0208 	add.w	r2, r3, #8
   858e8:	e9d3 4500 	ldrd	r4, r5, [r3]
   858ec:	2301      	movs	r3, #1
   858ee:	920f      	str	r2, [sp, #60]	; 0x3c
   858f0:	2600      	movs	r6, #0
   858f2:	9a09      	ldr	r2, [sp, #36]	; 0x24
   858f4:	f88d 6077 	strb.w	r6, [sp, #119]	; 0x77
   858f8:	3201      	adds	r2, #1
   858fa:	f000 8409 	beq.w	86110 <_svfprintf_r+0x9f0>
   858fe:	f028 0280 	bic.w	r2, r8, #128	; 0x80
   85902:	9207      	str	r2, [sp, #28]
   85904:	ea54 0205 	orrs.w	r2, r4, r5
   85908:	f040 80bc 	bne.w	85a84 <_svfprintf_r+0x364>
   8590c:	9a09      	ldr	r2, [sp, #36]	; 0x24
   8590e:	2a00      	cmp	r2, #0
   85910:	f040 86cc 	bne.w	866ac <_svfprintf_r+0xf8c>
   85914:	2b00      	cmp	r3, #0
   85916:	f040 84ed 	bne.w	862f4 <_svfprintf_r+0xbd4>
   8591a:	f018 0301 	ands.w	r3, r8, #1
   8591e:	930e      	str	r3, [sp, #56]	; 0x38
   85920:	f000 8560 	beq.w	863e4 <_svfprintf_r+0xcc4>
   85924:	2330      	movs	r3, #48	; 0x30
   85926:	aa42      	add	r2, sp, #264	; 0x108
   85928:	f802 3d41 	strb.w	r3, [r2, #-65]!
   8592c:	9211      	str	r2, [sp, #68]	; 0x44
   8592e:	e0ca      	b.n	85ac6 <_svfprintf_r+0x3a6>
   85930:	f048 0810 	orr.w	r8, r8, #16
   85934:	f018 0320 	ands.w	r3, r8, #32
   85938:	f000 850d 	beq.w	86356 <_svfprintf_r+0xc36>
   8593c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   8593e:	3407      	adds	r4, #7
   85940:	f024 0307 	bic.w	r3, r4, #7
   85944:	f103 0208 	add.w	r2, r3, #8
   85948:	e9d3 4500 	ldrd	r4, r5, [r3]
   8594c:	920f      	str	r2, [sp, #60]	; 0x3c
   8594e:	2300      	movs	r3, #0
   85950:	e7ce      	b.n	858f0 <_svfprintf_r+0x1d0>
   85952:	2000      	movs	r0, #0
   85954:	f1a7 0330 	sub.w	r3, r7, #48	; 0x30
   85958:	f81b 7b01 	ldrb.w	r7, [fp], #1
   8595c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
   85960:	eb03 0040 	add.w	r0, r3, r0, lsl #1
   85964:	f1a7 0330 	sub.w	r3, r7, #48	; 0x30
   85968:	2b09      	cmp	r3, #9
   8596a:	d9f5      	bls.n	85958 <_svfprintf_r+0x238>
   8596c:	900b      	str	r0, [sp, #44]	; 0x2c
   8596e:	e733      	b.n	857d8 <_svfprintf_r+0xb8>
   85970:	f048 0820 	orr.w	r8, r8, #32
   85974:	f89b 3000 	ldrb.w	r3, [fp]
   85978:	e72b      	b.n	857d2 <_svfprintf_r+0xb2>
   8597a:	f647 0330 	movw	r3, #30768	; 0x7830
   8597e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   85980:	f8ad 3078 	strh.w	r3, [sp, #120]	; 0x78
   85984:	1d13      	adds	r3, r2, #4
   85986:	930f      	str	r3, [sp, #60]	; 0x3c
   85988:	4b9f      	ldr	r3, [pc, #636]	; (85c08 <_svfprintf_r+0x4e8>)
   8598a:	6814      	ldr	r4, [r2, #0]
   8598c:	9318      	str	r3, [sp, #96]	; 0x60
   8598e:	f048 0802 	orr.w	r8, r8, #2
   85992:	2500      	movs	r5, #0
   85994:	2302      	movs	r3, #2
   85996:	2778      	movs	r7, #120	; 0x78
   85998:	e7aa      	b.n	858f0 <_svfprintf_r+0x1d0>
   8599a:	2500      	movs	r5, #0
   8599c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   8599e:	f88d 5077 	strb.w	r5, [sp, #119]	; 0x77
   859a2:	6813      	ldr	r3, [r2, #0]
   859a4:	1d14      	adds	r4, r2, #4
   859a6:	9311      	str	r3, [sp, #68]	; 0x44
   859a8:	2b00      	cmp	r3, #0
   859aa:	f000 8630 	beq.w	8660e <_svfprintf_r+0xeee>
   859ae:	9a09      	ldr	r2, [sp, #36]	; 0x24
   859b0:	1c53      	adds	r3, r2, #1
   859b2:	f000 86d8 	beq.w	86766 <_svfprintf_r+0x1046>
   859b6:	4629      	mov	r1, r5
   859b8:	9811      	ldr	r0, [sp, #68]	; 0x44
   859ba:	f002 fd1b 	bl	883f4 <memchr>
   859be:	2800      	cmp	r0, #0
   859c0:	f000 87ce 	beq.w	86960 <_svfprintf_r+0x1240>
   859c4:	9b11      	ldr	r3, [sp, #68]	; 0x44
   859c6:	9509      	str	r5, [sp, #36]	; 0x24
   859c8:	1ac3      	subs	r3, r0, r3
   859ca:	e9cd 340e 	strd	r3, r4, [sp, #56]	; 0x38
   859ce:	f8cd 801c 	str.w	r8, [sp, #28]
   859d2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   859d6:	f89d 6077 	ldrb.w	r6, [sp, #119]	; 0x77
   859da:	9308      	str	r3, [sp, #32]
   859dc:	9512      	str	r5, [sp, #72]	; 0x48
   859de:	2e00      	cmp	r6, #0
   859e0:	f000 808d 	beq.w	85afe <_svfprintf_r+0x3de>
   859e4:	9b08      	ldr	r3, [sp, #32]
   859e6:	3301      	adds	r3, #1
   859e8:	9308      	str	r3, [sp, #32]
   859ea:	e088      	b.n	85afe <_svfprintf_r+0x3de>
   859ec:	2a00      	cmp	r2, #0
   859ee:	f041 80ef 	bne.w	86bd0 <_svfprintf_r+0x14b0>
   859f2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   859f4:	f018 0f20 	tst.w	r8, #32
   859f8:	f852 3b04 	ldr.w	r3, [r2], #4
   859fc:	920f      	str	r2, [sp, #60]	; 0x3c
   859fe:	f040 852a 	bne.w	86456 <_svfprintf_r+0xd36>
   85a02:	f018 0f10 	tst.w	r8, #16
   85a06:	f040 8627 	bne.w	86658 <_svfprintf_r+0xf38>
   85a0a:	f018 0f40 	tst.w	r8, #64	; 0x40
   85a0e:	f000 8623 	beq.w	86658 <_svfprintf_r+0xf38>
   85a12:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   85a14:	801a      	strh	r2, [r3, #0]
   85a16:	e6ab      	b.n	85770 <_svfprintf_r+0x50>
   85a18:	f89b 3000 	ldrb.w	r3, [fp]
   85a1c:	2b6c      	cmp	r3, #108	; 0x6c
   85a1e:	bf03      	ittte	eq
   85a20:	f89b 3001 	ldrbeq.w	r3, [fp, #1]
   85a24:	f048 0820 	orreq.w	r8, r8, #32
   85a28:	f10b 0b01 	addeq.w	fp, fp, #1
   85a2c:	f048 0810 	orrne.w	r8, r8, #16
   85a30:	e6cf      	b.n	857d2 <_svfprintf_r+0xb2>
   85a32:	f048 0840 	orr.w	r8, r8, #64	; 0x40
   85a36:	f89b 3000 	ldrb.w	r3, [fp]
   85a3a:	e6ca      	b.n	857d2 <_svfprintf_r+0xb2>
   85a3c:	2a00      	cmp	r2, #0
   85a3e:	f041 80c3 	bne.w	86bc8 <_svfprintf_r+0x14a8>
   85a42:	f018 0f20 	tst.w	r8, #32
   85a46:	f000 820b 	beq.w	85e60 <_svfprintf_r+0x740>
   85a4a:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   85a4c:	3407      	adds	r4, #7
   85a4e:	f024 0307 	bic.w	r3, r4, #7
   85a52:	f103 0208 	add.w	r2, r3, #8
   85a56:	920f      	str	r2, [sp, #60]	; 0x3c
   85a58:	e9d3 4500 	ldrd	r4, r5, [r3]
   85a5c:	2c00      	cmp	r4, #0
   85a5e:	f175 0300 	sbcs.w	r3, r5, #0
   85a62:	f2c0 84cb 	blt.w	863fc <_svfprintf_r+0xcdc>
   85a66:	9b09      	ldr	r3, [sp, #36]	; 0x24
   85a68:	f89d 6077 	ldrb.w	r6, [sp, #119]	; 0x77
   85a6c:	3301      	adds	r3, #1
   85a6e:	f000 84cf 	beq.w	86410 <_svfprintf_r+0xcf0>
   85a72:	f028 0280 	bic.w	r2, r8, #128	; 0x80
   85a76:	9207      	str	r2, [sp, #28]
   85a78:	ea54 0205 	orrs.w	r2, r4, r5
   85a7c:	f04f 0301 	mov.w	r3, #1
   85a80:	f43f af44 	beq.w	8590c <_svfprintf_r+0x1ec>
   85a84:	2b01      	cmp	r3, #1
   85a86:	f000 8348 	beq.w	8611a <_svfprintf_r+0x9fa>
   85a8a:	2b02      	cmp	r3, #2
   85a8c:	f000 839f 	beq.w	861ce <_svfprintf_r+0xaae>
   85a90:	4651      	mov	r1, sl
   85a92:	e000      	b.n	85a96 <_svfprintf_r+0x376>
   85a94:	4611      	mov	r1, r2
   85a96:	08e2      	lsrs	r2, r4, #3
   85a98:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
   85a9c:	08e8      	lsrs	r0, r5, #3
   85a9e:	f004 0307 	and.w	r3, r4, #7
   85aa2:	4605      	mov	r5, r0
   85aa4:	4614      	mov	r4, r2
   85aa6:	3330      	adds	r3, #48	; 0x30
   85aa8:	ea54 0005 	orrs.w	r0, r4, r5
   85aac:	f801 3c01 	strb.w	r3, [r1, #-1]
   85ab0:	f101 32ff 	add.w	r2, r1, #4294967295	; 0xffffffff
   85ab4:	d1ee      	bne.n	85a94 <_svfprintf_r+0x374>
   85ab6:	9807      	ldr	r0, [sp, #28]
   85ab8:	9211      	str	r2, [sp, #68]	; 0x44
   85aba:	07c0      	lsls	r0, r0, #31
   85abc:	f100 8475 	bmi.w	863aa <_svfprintf_r+0xc8a>
   85ac0:	ebaa 0302 	sub.w	r3, sl, r2
   85ac4:	930e      	str	r3, [sp, #56]	; 0x38
   85ac6:	9b09      	ldr	r3, [sp, #36]	; 0x24
   85ac8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   85aca:	4293      	cmp	r3, r2
   85acc:	bfb8      	it	lt
   85ace:	4613      	movlt	r3, r2
   85ad0:	9308      	str	r3, [sp, #32]
   85ad2:	2300      	movs	r3, #0
   85ad4:	9312      	str	r3, [sp, #72]	; 0x48
   85ad6:	e782      	b.n	859de <_svfprintf_r+0x2be>
   85ad8:	2300      	movs	r3, #0
   85ada:	2101      	movs	r1, #1
   85adc:	980f      	ldr	r0, [sp, #60]	; 0x3c
   85ade:	461e      	mov	r6, r3
   85ae0:	6802      	ldr	r2, [r0, #0]
   85ae2:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   85ae6:	9309      	str	r3, [sp, #36]	; 0x24
   85ae8:	9312      	str	r3, [sp, #72]	; 0x48
   85aea:	1d03      	adds	r3, r0, #4
   85aec:	930f      	str	r3, [sp, #60]	; 0x3c
   85aee:	ab28      	add	r3, sp, #160	; 0xa0
   85af0:	9108      	str	r1, [sp, #32]
   85af2:	f8cd 801c 	str.w	r8, [sp, #28]
   85af6:	910e      	str	r1, [sp, #56]	; 0x38
   85af8:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
   85afc:	9311      	str	r3, [sp, #68]	; 0x44
   85afe:	9b07      	ldr	r3, [sp, #28]
   85b00:	f013 0302 	ands.w	r3, r3, #2
   85b04:	9310      	str	r3, [sp, #64]	; 0x40
   85b06:	d002      	beq.n	85b0e <_svfprintf_r+0x3ee>
   85b08:	9b08      	ldr	r3, [sp, #32]
   85b0a:	3302      	adds	r3, #2
   85b0c:	9308      	str	r3, [sp, #32]
   85b0e:	9b07      	ldr	r3, [sp, #28]
   85b10:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   85b12:	f013 0884 	ands.w	r8, r3, #132	; 0x84
   85b16:	d13f      	bne.n	85b98 <_svfprintf_r+0x478>
   85b18:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   85b1a:	9a08      	ldr	r2, [sp, #32]
   85b1c:	1a9d      	subs	r5, r3, r2
   85b1e:	2d00      	cmp	r5, #0
   85b20:	dd3a      	ble.n	85b98 <_svfprintf_r+0x478>
   85b22:	2d10      	cmp	r5, #16
   85b24:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85b26:	dd29      	ble.n	85b7c <_svfprintf_r+0x45c>
   85b28:	464a      	mov	r2, r9
   85b2a:	4621      	mov	r1, r4
   85b2c:	46a9      	mov	r9, r5
   85b2e:	e9dd 540c 	ldrd	r5, r4, [sp, #48]	; 0x30
   85b32:	2610      	movs	r6, #16
   85b34:	e006      	b.n	85b44 <_svfprintf_r+0x424>
   85b36:	f1a9 0910 	sub.w	r9, r9, #16
   85b3a:	f1b9 0f10 	cmp.w	r9, #16
   85b3e:	f102 0208 	add.w	r2, r2, #8
   85b42:	dd18      	ble.n	85b76 <_svfprintf_r+0x456>
   85b44:	3301      	adds	r3, #1
   85b46:	4831      	ldr	r0, [pc, #196]	; (85c0c <_svfprintf_r+0x4ec>)
   85b48:	3110      	adds	r1, #16
   85b4a:	2b07      	cmp	r3, #7
   85b4c:	e9cd 3126 	strd	r3, r1, [sp, #152]	; 0x98
   85b50:	e9c2 0600 	strd	r0, r6, [r2]
   85b54:	ddef      	ble.n	85b36 <_svfprintf_r+0x416>
   85b56:	aa25      	add	r2, sp, #148	; 0x94
   85b58:	4629      	mov	r1, r5
   85b5a:	4620      	mov	r0, r4
   85b5c:	f003 fbac 	bl	892b8 <__ssprint_r>
   85b60:	2800      	cmp	r0, #0
   85b62:	f47f aea8 	bne.w	858b6 <_svfprintf_r+0x196>
   85b66:	e9dd 3126 	ldrd	r3, r1, [sp, #152]	; 0x98
   85b6a:	f1a9 0910 	sub.w	r9, r9, #16
   85b6e:	f1b9 0f10 	cmp.w	r9, #16
   85b72:	4652      	mov	r2, sl
   85b74:	dce6      	bgt.n	85b44 <_svfprintf_r+0x424>
   85b76:	464d      	mov	r5, r9
   85b78:	460c      	mov	r4, r1
   85b7a:	4691      	mov	r9, r2
   85b7c:	3301      	adds	r3, #1
   85b7e:	4a23      	ldr	r2, [pc, #140]	; (85c0c <_svfprintf_r+0x4ec>)
   85b80:	442c      	add	r4, r5
   85b82:	2b07      	cmp	r3, #7
   85b84:	e9cd 3426 	strd	r3, r4, [sp, #152]	; 0x98
   85b88:	e9c9 2500 	strd	r2, r5, [r9]
   85b8c:	f300 8568 	bgt.w	86660 <_svfprintf_r+0xf40>
   85b90:	f89d 6077 	ldrb.w	r6, [sp, #119]	; 0x77
   85b94:	f109 0908 	add.w	r9, r9, #8
   85b98:	b176      	cbz	r6, 85bb8 <_svfprintf_r+0x498>
   85b9a:	2101      	movs	r1, #1
   85b9c:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85b9e:	440c      	add	r4, r1
   85ba0:	440b      	add	r3, r1
   85ba2:	f10d 0277 	add.w	r2, sp, #119	; 0x77
   85ba6:	2b07      	cmp	r3, #7
   85ba8:	e9cd 3426 	strd	r3, r4, [sp, #152]	; 0x98
   85bac:	e9c9 2100 	strd	r2, r1, [r9]
   85bb0:	f300 82f7 	bgt.w	861a2 <_svfprintf_r+0xa82>
   85bb4:	f109 0908 	add.w	r9, r9, #8
   85bb8:	9b10      	ldr	r3, [sp, #64]	; 0x40
   85bba:	b16b      	cbz	r3, 85bd8 <_svfprintf_r+0x4b8>
   85bbc:	2102      	movs	r1, #2
   85bbe:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85bc0:	440c      	add	r4, r1
   85bc2:	3301      	adds	r3, #1
   85bc4:	aa1e      	add	r2, sp, #120	; 0x78
   85bc6:	2b07      	cmp	r3, #7
   85bc8:	e9cd 3426 	strd	r3, r4, [sp, #152]	; 0x98
   85bcc:	e9c9 2100 	strd	r2, r1, [r9]
   85bd0:	f300 82f2 	bgt.w	861b8 <_svfprintf_r+0xa98>
   85bd4:	f109 0908 	add.w	r9, r9, #8
   85bd8:	f1b8 0f80 	cmp.w	r8, #128	; 0x80
   85bdc:	f000 81e5 	beq.w	85faa <_svfprintf_r+0x88a>
   85be0:	9b09      	ldr	r3, [sp, #36]	; 0x24
   85be2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   85be4:	1a9d      	subs	r5, r3, r2
   85be6:	2d00      	cmp	r5, #0
   85be8:	dd3f      	ble.n	85c6a <_svfprintf_r+0x54a>
   85bea:	2d10      	cmp	r5, #16
   85bec:	9a26      	ldr	r2, [sp, #152]	; 0x98
   85bee:	f340 8592 	ble.w	86716 <_svfprintf_r+0xff6>
   85bf2:	f8df 801c 	ldr.w	r8, [pc, #28]	; 85c10 <_svfprintf_r+0x4f0>
   85bf6:	464b      	mov	r3, r9
   85bf8:	4640      	mov	r0, r8
   85bfa:	4621      	mov	r1, r4
   85bfc:	e9dd 940c 	ldrd	r9, r4, [sp, #48]	; 0x30
   85c00:	46b8      	mov	r8, r7
   85c02:	2610      	movs	r6, #16
   85c04:	4607      	mov	r7, r0
   85c06:	e00a      	b.n	85c1e <_svfprintf_r+0x4fe>
   85c08:	0008a1b0 	.word	0x0008a1b0
   85c0c:	0008a16c 	.word	0x0008a16c
   85c10:	0008a17c 	.word	0x0008a17c
   85c14:	3d10      	subs	r5, #16
   85c16:	2d10      	cmp	r5, #16
   85c18:	f103 0308 	add.w	r3, r3, #8
   85c1c:	dd15      	ble.n	85c4a <_svfprintf_r+0x52a>
   85c1e:	3201      	adds	r2, #1
   85c20:	3110      	adds	r1, #16
   85c22:	2a07      	cmp	r2, #7
   85c24:	e9cd 2126 	strd	r2, r1, [sp, #152]	; 0x98
   85c28:	e9c3 7600 	strd	r7, r6, [r3]
   85c2c:	ddf2      	ble.n	85c14 <_svfprintf_r+0x4f4>
   85c2e:	aa25      	add	r2, sp, #148	; 0x94
   85c30:	4649      	mov	r1, r9
   85c32:	4620      	mov	r0, r4
   85c34:	f003 fb40 	bl	892b8 <__ssprint_r>
   85c38:	2800      	cmp	r0, #0
   85c3a:	f47f ae3c 	bne.w	858b6 <_svfprintf_r+0x196>
   85c3e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
   85c42:	3d10      	subs	r5, #16
   85c44:	2d10      	cmp	r5, #16
   85c46:	4653      	mov	r3, sl
   85c48:	dce9      	bgt.n	85c1e <_svfprintf_r+0x4fe>
   85c4a:	4699      	mov	r9, r3
   85c4c:	463b      	mov	r3, r7
   85c4e:	460c      	mov	r4, r1
   85c50:	4647      	mov	r7, r8
   85c52:	4698      	mov	r8, r3
   85c54:	3201      	adds	r2, #1
   85c56:	442c      	add	r4, r5
   85c58:	2a07      	cmp	r2, #7
   85c5a:	e9cd 2426 	strd	r2, r4, [sp, #152]	; 0x98
   85c5e:	e9c9 8500 	strd	r8, r5, [r9]
   85c62:	f300 82cb 	bgt.w	861fc <_svfprintf_r+0xadc>
   85c66:	f109 0908 	add.w	r9, r9, #8
   85c6a:	9b07      	ldr	r3, [sp, #28]
   85c6c:	05de      	lsls	r6, r3, #23
   85c6e:	f100 8142 	bmi.w	85ef6 <_svfprintf_r+0x7d6>
   85c72:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85c74:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   85c76:	3301      	adds	r3, #1
   85c78:	9911      	ldr	r1, [sp, #68]	; 0x44
   85c7a:	4414      	add	r4, r2
   85c7c:	2b07      	cmp	r3, #7
   85c7e:	9427      	str	r4, [sp, #156]	; 0x9c
   85c80:	e9c9 1200 	strd	r1, r2, [r9]
   85c84:	9326      	str	r3, [sp, #152]	; 0x98
   85c86:	f300 8281 	bgt.w	8618c <_svfprintf_r+0xa6c>
   85c8a:	f109 0908 	add.w	r9, r9, #8
   85c8e:	9b07      	ldr	r3, [sp, #28]
   85c90:	075b      	lsls	r3, r3, #29
   85c92:	d531      	bpl.n	85cf8 <_svfprintf_r+0x5d8>
   85c94:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   85c96:	9a08      	ldr	r2, [sp, #32]
   85c98:	1a9d      	subs	r5, r3, r2
   85c9a:	2d00      	cmp	r5, #0
   85c9c:	dd2c      	ble.n	85cf8 <_svfprintf_r+0x5d8>
   85c9e:	2d10      	cmp	r5, #16
   85ca0:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85ca2:	dd1f      	ble.n	85ce4 <_svfprintf_r+0x5c4>
   85ca4:	e9dd 870c 	ldrd	r8, r7, [sp, #48]	; 0x30
   85ca8:	2610      	movs	r6, #16
   85caa:	e004      	b.n	85cb6 <_svfprintf_r+0x596>
   85cac:	3d10      	subs	r5, #16
   85cae:	2d10      	cmp	r5, #16
   85cb0:	f109 0908 	add.w	r9, r9, #8
   85cb4:	dd16      	ble.n	85ce4 <_svfprintf_r+0x5c4>
   85cb6:	3301      	adds	r3, #1
   85cb8:	4ac6      	ldr	r2, [pc, #792]	; (85fd4 <_svfprintf_r+0x8b4>)
   85cba:	3410      	adds	r4, #16
   85cbc:	2b07      	cmp	r3, #7
   85cbe:	e9cd 3426 	strd	r3, r4, [sp, #152]	; 0x98
   85cc2:	e9c9 2600 	strd	r2, r6, [r9]
   85cc6:	ddf1      	ble.n	85cac <_svfprintf_r+0x58c>
   85cc8:	aa25      	add	r2, sp, #148	; 0x94
   85cca:	4641      	mov	r1, r8
   85ccc:	4638      	mov	r0, r7
   85cce:	f003 faf3 	bl	892b8 <__ssprint_r>
   85cd2:	2800      	cmp	r0, #0
   85cd4:	f47f adef 	bne.w	858b6 <_svfprintf_r+0x196>
   85cd8:	e9dd 3426 	ldrd	r3, r4, [sp, #152]	; 0x98
   85cdc:	3d10      	subs	r5, #16
   85cde:	2d10      	cmp	r5, #16
   85ce0:	46d1      	mov	r9, sl
   85ce2:	dce8      	bgt.n	85cb6 <_svfprintf_r+0x596>
   85ce4:	3301      	adds	r3, #1
   85ce6:	4abb      	ldr	r2, [pc, #748]	; (85fd4 <_svfprintf_r+0x8b4>)
   85ce8:	442c      	add	r4, r5
   85cea:	2b07      	cmp	r3, #7
   85cec:	e9cd 3426 	strd	r3, r4, [sp, #152]	; 0x98
   85cf0:	e9c9 2500 	strd	r2, r5, [r9]
   85cf4:	f300 836c 	bgt.w	863d0 <_svfprintf_r+0xcb0>
   85cf8:	e9dd 320a 	ldrd	r3, r2, [sp, #40]	; 0x28
   85cfc:	9908      	ldr	r1, [sp, #32]
   85cfe:	428a      	cmp	r2, r1
   85d00:	bfac      	ite	ge
   85d02:	189b      	addge	r3, r3, r2
   85d04:	185b      	addlt	r3, r3, r1
   85d06:	930a      	str	r3, [sp, #40]	; 0x28
   85d08:	2c00      	cmp	r4, #0
   85d0a:	f040 819f 	bne.w	8604c <_svfprintf_r+0x92c>
   85d0e:	2300      	movs	r3, #0
   85d10:	46d1      	mov	r9, sl
   85d12:	9326      	str	r3, [sp, #152]	; 0x98
   85d14:	e52c      	b.n	85770 <_svfprintf_r+0x50>
   85d16:	2a00      	cmp	r2, #0
   85d18:	f040 876a 	bne.w	86bf0 <_svfprintf_r+0x14d0>
   85d1c:	4bae      	ldr	r3, [pc, #696]	; (85fd8 <_svfprintf_r+0x8b8>)
   85d1e:	f018 0f20 	tst.w	r8, #32
   85d22:	9318      	str	r3, [sp, #96]	; 0x60
   85d24:	d040      	beq.n	85da8 <_svfprintf_r+0x688>
   85d26:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   85d28:	3407      	adds	r4, #7
   85d2a:	f024 0307 	bic.w	r3, r4, #7
   85d2e:	f103 0208 	add.w	r2, r3, #8
   85d32:	920f      	str	r2, [sp, #60]	; 0x3c
   85d34:	e9d3 4500 	ldrd	r4, r5, [r3]
   85d38:	f018 0f01 	tst.w	r8, #1
   85d3c:	f000 80c3 	beq.w	85ec6 <_svfprintf_r+0x7a6>
   85d40:	ea54 0305 	orrs.w	r3, r4, r5
   85d44:	f000 80bf 	beq.w	85ec6 <_svfprintf_r+0x7a6>
   85d48:	2330      	movs	r3, #48	; 0x30
   85d4a:	f88d 7079 	strb.w	r7, [sp, #121]	; 0x79
   85d4e:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
   85d52:	f048 0802 	orr.w	r8, r8, #2
   85d56:	2302      	movs	r3, #2
   85d58:	e5ca      	b.n	858f0 <_svfprintf_r+0x1d0>
   85d5a:	f89b 3000 	ldrb.w	r3, [fp]
   85d5e:	2201      	movs	r2, #1
   85d60:	212b      	movs	r1, #43	; 0x2b
   85d62:	e536      	b.n	857d2 <_svfprintf_r+0xb2>
   85d64:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   85d66:	681c      	ldr	r4, [r3, #0]
   85d68:	1d18      	adds	r0, r3, #4
   85d6a:	2c00      	cmp	r4, #0
   85d6c:	940b      	str	r4, [sp, #44]	; 0x2c
   85d6e:	f89b 3000 	ldrb.w	r3, [fp]
   85d72:	900f      	str	r0, [sp, #60]	; 0x3c
   85d74:	f6bf ad2d 	bge.w	857d2 <_svfprintf_r+0xb2>
   85d78:	4260      	negs	r0, r4
   85d7a:	900b      	str	r0, [sp, #44]	; 0x2c
   85d7c:	e09b      	b.n	85eb6 <_svfprintf_r+0x796>
   85d7e:	f048 0801 	orr.w	r8, r8, #1
   85d82:	f89b 3000 	ldrb.w	r3, [fp]
   85d86:	e524      	b.n	857d2 <_svfprintf_r+0xb2>
   85d88:	f89b 3000 	ldrb.w	r3, [fp]
   85d8c:	2900      	cmp	r1, #0
   85d8e:	f47f ad20 	bne.w	857d2 <_svfprintf_r+0xb2>
   85d92:	2201      	movs	r2, #1
   85d94:	2120      	movs	r1, #32
   85d96:	e51c      	b.n	857d2 <_svfprintf_r+0xb2>
   85d98:	2a00      	cmp	r2, #0
   85d9a:	f040 8721 	bne.w	86be0 <_svfprintf_r+0x14c0>
   85d9e:	4b8f      	ldr	r3, [pc, #572]	; (85fdc <_svfprintf_r+0x8bc>)
   85da0:	f018 0f20 	tst.w	r8, #32
   85da4:	9318      	str	r3, [sp, #96]	; 0x60
   85da6:	d1be      	bne.n	85d26 <_svfprintf_r+0x606>
   85da8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   85daa:	f018 0f10 	tst.w	r8, #16
   85dae:	f853 4b04 	ldr.w	r4, [r3], #4
   85db2:	930f      	str	r3, [sp, #60]	; 0x3c
   85db4:	f040 831a 	bne.w	863ec <_svfprintf_r+0xccc>
   85db8:	f018 0f40 	tst.w	r8, #64	; 0x40
   85dbc:	f000 8316 	beq.w	863ec <_svfprintf_r+0xccc>
   85dc0:	b2a4      	uxth	r4, r4
   85dc2:	2500      	movs	r5, #0
   85dc4:	e7b8      	b.n	85d38 <_svfprintf_r+0x618>
   85dc6:	f048 0808 	orr.w	r8, r8, #8
   85dca:	f89b 3000 	ldrb.w	r3, [fp]
   85dce:	e500      	b.n	857d2 <_svfprintf_r+0xb2>
   85dd0:	2a00      	cmp	r2, #0
   85dd2:	f040 86ed 	bne.w	86bb0 <_svfprintf_r+0x1490>
   85dd6:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   85dd8:	3407      	adds	r4, #7
   85dda:	f024 0607 	bic.w	r6, r4, #7
   85dde:	e9d6 2300 	ldrd	r2, r3, [r6]
   85de2:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
   85de6:	9215      	str	r2, [sp, #84]	; 0x54
   85de8:	4615      	mov	r5, r2
   85dea:	4610      	mov	r0, r2
   85dec:	9314      	str	r3, [sp, #80]	; 0x50
   85dee:	3608      	adds	r6, #8
   85df0:	4621      	mov	r1, r4
   85df2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   85df6:	4b7a      	ldr	r3, [pc, #488]	; (85fe0 <_svfprintf_r+0x8c0>)
   85df8:	960f      	str	r6, [sp, #60]	; 0x3c
   85dfa:	f004 f859 	bl	89eb0 <__aeabi_dcmpun>
   85dfe:	2800      	cmp	r0, #0
   85e00:	f040 8340 	bne.w	86484 <_svfprintf_r+0xd64>
   85e04:	4628      	mov	r0, r5
   85e06:	4621      	mov	r1, r4
   85e08:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   85e0c:	4b74      	ldr	r3, [pc, #464]	; (85fe0 <_svfprintf_r+0x8c0>)
   85e0e:	f7fe ff25 	bl	84c5c <__aeabi_dcmple>
   85e12:	2800      	cmp	r0, #0
   85e14:	f040 8336 	bne.w	86484 <_svfprintf_r+0xd64>
   85e18:	e9dd 0215 	ldrd	r0, r2, [sp, #84]	; 0x54
   85e1c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   85e1e:	9914      	ldr	r1, [sp, #80]	; 0x50
   85e20:	f7fe ff12 	bl	84c48 <__aeabi_dcmplt>
   85e24:	2800      	cmp	r0, #0
   85e26:	f040 852f 	bne.w	86888 <_svfprintf_r+0x1168>
   85e2a:	f89d 6077 	ldrb.w	r6, [sp, #119]	; 0x77
   85e2e:	2103      	movs	r1, #3
   85e30:	2000      	movs	r0, #0
   85e32:	e9cd 1008 	strd	r1, r0, [sp, #32]
   85e36:	4a6b      	ldr	r2, [pc, #428]	; (85fe4 <_svfprintf_r+0x8c4>)
   85e38:	4b6b      	ldr	r3, [pc, #428]	; (85fe8 <_svfprintf_r+0x8c8>)
   85e3a:	2f47      	cmp	r7, #71	; 0x47
   85e3c:	bfd8      	it	le
   85e3e:	461a      	movle	r2, r3
   85e40:	f028 0480 	bic.w	r4, r8, #128	; 0x80
   85e44:	9407      	str	r4, [sp, #28]
   85e46:	910e      	str	r1, [sp, #56]	; 0x38
   85e48:	9012      	str	r0, [sp, #72]	; 0x48
   85e4a:	9211      	str	r2, [sp, #68]	; 0x44
   85e4c:	e5c7      	b.n	859de <_svfprintf_r+0x2be>
   85e4e:	2a00      	cmp	r2, #0
   85e50:	f040 86c2 	bne.w	86bd8 <_svfprintf_r+0x14b8>
   85e54:	f048 0810 	orr.w	r8, r8, #16
   85e58:	f018 0f20 	tst.w	r8, #32
   85e5c:	f47f adf5 	bne.w	85a4a <_svfprintf_r+0x32a>
   85e60:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   85e62:	f018 0f10 	tst.w	r8, #16
   85e66:	f853 4b04 	ldr.w	r4, [r3], #4
   85e6a:	930f      	str	r3, [sp, #60]	; 0x3c
   85e6c:	f040 82c0 	bne.w	863f0 <_svfprintf_r+0xcd0>
   85e70:	f018 0f40 	tst.w	r8, #64	; 0x40
   85e74:	f000 82bc 	beq.w	863f0 <_svfprintf_r+0xcd0>
   85e78:	b224      	sxth	r4, r4
   85e7a:	17e5      	asrs	r5, r4, #31
   85e7c:	e5ee      	b.n	85a5c <_svfprintf_r+0x33c>
   85e7e:	f89b 7000 	ldrb.w	r7, [fp]
   85e82:	f10b 0001 	add.w	r0, fp, #1
   85e86:	2f2a      	cmp	r7, #42	; 0x2a
   85e88:	f000 867d 	beq.w	86b86 <_svfprintf_r+0x1466>
   85e8c:	f1a7 0330 	sub.w	r3, r7, #48	; 0x30
   85e90:	2b09      	cmp	r3, #9
   85e92:	4683      	mov	fp, r0
   85e94:	f200 8560 	bhi.w	86958 <_svfprintf_r+0x1238>
   85e98:	2000      	movs	r0, #0
   85e9a:	f81b 7b01 	ldrb.w	r7, [fp], #1
   85e9e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
   85ea2:	eb03 0040 	add.w	r0, r3, r0, lsl #1
   85ea6:	f1a7 0330 	sub.w	r3, r7, #48	; 0x30
   85eaa:	2b09      	cmp	r3, #9
   85eac:	d9f5      	bls.n	85e9a <_svfprintf_r+0x77a>
   85eae:	9009      	str	r0, [sp, #36]	; 0x24
   85eb0:	e492      	b.n	857d8 <_svfprintf_r+0xb8>
   85eb2:	f89b 3000 	ldrb.w	r3, [fp]
   85eb6:	f048 0804 	orr.w	r8, r8, #4
   85eba:	e48a      	b.n	857d2 <_svfprintf_r+0xb2>
   85ebc:	f048 0880 	orr.w	r8, r8, #128	; 0x80
   85ec0:	f89b 3000 	ldrb.w	r3, [fp]
   85ec4:	e485      	b.n	857d2 <_svfprintf_r+0xb2>
   85ec6:	2302      	movs	r3, #2
   85ec8:	e512      	b.n	858f0 <_svfprintf_r+0x1d0>
   85eca:	2a00      	cmp	r2, #0
   85ecc:	f040 868c 	bne.w	86be8 <_svfprintf_r+0x14c8>
   85ed0:	2f00      	cmp	r7, #0
   85ed2:	f43f ace9 	beq.w	858a8 <_svfprintf_r+0x188>
   85ed6:	2300      	movs	r3, #0
   85ed8:	2201      	movs	r2, #1
   85eda:	461e      	mov	r6, r3
   85edc:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   85ee0:	9309      	str	r3, [sp, #36]	; 0x24
   85ee2:	9312      	str	r3, [sp, #72]	; 0x48
   85ee4:	ab28      	add	r3, sp, #160	; 0xa0
   85ee6:	9208      	str	r2, [sp, #32]
   85ee8:	f88d 70a0 	strb.w	r7, [sp, #160]	; 0xa0
   85eec:	f8cd 801c 	str.w	r8, [sp, #28]
   85ef0:	920e      	str	r2, [sp, #56]	; 0x38
   85ef2:	9311      	str	r3, [sp, #68]	; 0x44
   85ef4:	e603      	b.n	85afe <_svfprintf_r+0x3de>
   85ef6:	2f65      	cmp	r7, #101	; 0x65
   85ef8:	f340 80b1 	ble.w	8605e <_svfprintf_r+0x93e>
   85efc:	e9dd 0215 	ldrd	r0, r2, [sp, #84]	; 0x54
   85f00:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   85f02:	9914      	ldr	r1, [sp, #80]	; 0x50
   85f04:	f7fe fe96 	bl	84c34 <__aeabi_dcmpeq>
   85f08:	2800      	cmp	r0, #0
   85f0a:	f000 8182 	beq.w	86212 <_svfprintf_r+0xaf2>
   85f0e:	2101      	movs	r1, #1
   85f10:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85f12:	4a36      	ldr	r2, [pc, #216]	; (85fec <_svfprintf_r+0x8cc>)
   85f14:	440b      	add	r3, r1
   85f16:	440c      	add	r4, r1
   85f18:	2b07      	cmp	r3, #7
   85f1a:	9427      	str	r4, [sp, #156]	; 0x9c
   85f1c:	9326      	str	r3, [sp, #152]	; 0x98
   85f1e:	e9c9 2100 	strd	r2, r1, [r9]
   85f22:	f300 83ee 	bgt.w	86702 <_svfprintf_r+0xfe2>
   85f26:	f109 0908 	add.w	r9, r9, #8
   85f2a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   85f2c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   85f2e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   85f30:	4293      	cmp	r3, r2
   85f32:	f280 8248 	bge.w	863c6 <_svfprintf_r+0xca6>
   85f36:	9b26      	ldr	r3, [sp, #152]	; 0x98
   85f38:	9a19      	ldr	r2, [sp, #100]	; 0x64
   85f3a:	3301      	adds	r3, #1
   85f3c:	991a      	ldr	r1, [sp, #104]	; 0x68
   85f3e:	4414      	add	r4, r2
   85f40:	2b07      	cmp	r3, #7
   85f42:	e9c9 1200 	strd	r1, r2, [r9]
   85f46:	e9cd 3426 	strd	r3, r4, [sp, #152]	; 0x98
   85f4a:	f300 8355 	bgt.w	865f8 <_svfprintf_r+0xed8>
   85f4e:	f109 0908 	add.w	r9, r9, #8
   85f52:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   85f54:	1e5d      	subs	r5, r3, #1
   85f56:	2d00      	cmp	r5, #0
   85f58:	f77f ae99 	ble.w	85c8e <_svfprintf_r+0x56e>
   85f5c:	2d10      	cmp	r5, #16
   85f5e:	9a26      	ldr	r2, [sp, #152]	; 0x98
   85f60:	f340 859f 	ble.w	86aa2 <_svfprintf_r+0x1382>
   85f64:	f8df 8088 	ldr.w	r8, [pc, #136]	; 85ff0 <_svfprintf_r+0x8d0>
   85f68:	4623      	mov	r3, r4
   85f6a:	2610      	movs	r6, #16
   85f6c:	4644      	mov	r4, r8
   85f6e:	9f0d      	ldr	r7, [sp, #52]	; 0x34
   85f70:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
   85f74:	e005      	b.n	85f82 <_svfprintf_r+0x862>
   85f76:	f109 0908 	add.w	r9, r9, #8
   85f7a:	3d10      	subs	r5, #16
   85f7c:	2d10      	cmp	r5, #16
   85f7e:	f340 8399 	ble.w	866b4 <_svfprintf_r+0xf94>
   85f82:	3201      	adds	r2, #1
   85f84:	3310      	adds	r3, #16
   85f86:	2a07      	cmp	r2, #7
   85f88:	e9cd 2326 	strd	r2, r3, [sp, #152]	; 0x98
   85f8c:	e9c9 4600 	strd	r4, r6, [r9]
   85f90:	ddf1      	ble.n	85f76 <_svfprintf_r+0x856>
   85f92:	aa25      	add	r2, sp, #148	; 0x94
   85f94:	4641      	mov	r1, r8
   85f96:	4638      	mov	r0, r7
   85f98:	f003 f98e 	bl	892b8 <__ssprint_r>
   85f9c:	2800      	cmp	r0, #0
   85f9e:	f47f ac8a 	bne.w	858b6 <_svfprintf_r+0x196>
   85fa2:	e9dd 2326 	ldrd	r2, r3, [sp, #152]	; 0x98
   85fa6:	46d1      	mov	r9, sl
   85fa8:	e7e7      	b.n	85f7a <_svfprintf_r+0x85a>
   85faa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   85fac:	9a08      	ldr	r2, [sp, #32]
   85fae:	1a9d      	subs	r5, r3, r2
   85fb0:	2d00      	cmp	r5, #0
   85fb2:	f77f ae15 	ble.w	85be0 <_svfprintf_r+0x4c0>
   85fb6:	2d10      	cmp	r5, #16
   85fb8:	9a26      	ldr	r2, [sp, #152]	; 0x98
   85fba:	f340 84b3 	ble.w	86924 <_svfprintf_r+0x1204>
   85fbe:	f8df 8030 	ldr.w	r8, [pc, #48]	; 85ff0 <_svfprintf_r+0x8d0>
   85fc2:	464b      	mov	r3, r9
   85fc4:	4640      	mov	r0, r8
   85fc6:	4621      	mov	r1, r4
   85fc8:	e9dd 940c 	ldrd	r9, r4, [sp, #48]	; 0x30
   85fcc:	46b8      	mov	r8, r7
   85fce:	2610      	movs	r6, #16
   85fd0:	4607      	mov	r7, r0
   85fd2:	e014      	b.n	85ffe <_svfprintf_r+0x8de>
   85fd4:	0008a16c 	.word	0x0008a16c
   85fd8:	0008a19c 	.word	0x0008a19c
   85fdc:	0008a1b0 	.word	0x0008a1b0
   85fe0:	7fefffff 	.word	0x7fefffff
   85fe4:	0008a190 	.word	0x0008a190
   85fe8:	0008a18c 	.word	0x0008a18c
   85fec:	0008a1cc 	.word	0x0008a1cc
   85ff0:	0008a17c 	.word	0x0008a17c
   85ff4:	3d10      	subs	r5, #16
   85ff6:	2d10      	cmp	r5, #16
   85ff8:	f103 0308 	add.w	r3, r3, #8
   85ffc:	dd15      	ble.n	8602a <_svfprintf_r+0x90a>
   85ffe:	3201      	adds	r2, #1
   86000:	3110      	adds	r1, #16
   86002:	2a07      	cmp	r2, #7
   86004:	e9cd 2126 	strd	r2, r1, [sp, #152]	; 0x98
   86008:	e9c3 7600 	strd	r7, r6, [r3]
   8600c:	ddf2      	ble.n	85ff4 <_svfprintf_r+0x8d4>
   8600e:	aa25      	add	r2, sp, #148	; 0x94
   86010:	4649      	mov	r1, r9
   86012:	4620      	mov	r0, r4
   86014:	f003 f950 	bl	892b8 <__ssprint_r>
   86018:	2800      	cmp	r0, #0
   8601a:	f47f ac4c 	bne.w	858b6 <_svfprintf_r+0x196>
   8601e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
   86022:	3d10      	subs	r5, #16
   86024:	2d10      	cmp	r5, #16
   86026:	4653      	mov	r3, sl
   86028:	dce9      	bgt.n	85ffe <_svfprintf_r+0x8de>
   8602a:	4699      	mov	r9, r3
   8602c:	463b      	mov	r3, r7
   8602e:	460c      	mov	r4, r1
   86030:	4647      	mov	r7, r8
   86032:	4698      	mov	r8, r3
   86034:	3201      	adds	r2, #1
   86036:	442c      	add	r4, r5
   86038:	2a07      	cmp	r2, #7
   8603a:	e9cd 2426 	strd	r2, r4, [sp, #152]	; 0x98
   8603e:	e9c9 8500 	strd	r8, r5, [r9]
   86042:	f300 8343 	bgt.w	866cc <_svfprintf_r+0xfac>
   86046:	f109 0908 	add.w	r9, r9, #8
   8604a:	e5c9      	b.n	85be0 <_svfprintf_r+0x4c0>
   8604c:	aa25      	add	r2, sp, #148	; 0x94
   8604e:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   86052:	f003 f931 	bl	892b8 <__ssprint_r>
   86056:	2800      	cmp	r0, #0
   86058:	f43f ae59 	beq.w	85d0e <_svfprintf_r+0x5ee>
   8605c:	e42b      	b.n	858b6 <_svfprintf_r+0x196>
   8605e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   86060:	9b26      	ldr	r3, [sp, #152]	; 0x98
   86062:	2a01      	cmp	r2, #1
   86064:	f104 0401 	add.w	r4, r4, #1
   86068:	f103 0501 	add.w	r5, r3, #1
   8606c:	f109 0608 	add.w	r6, r9, #8
   86070:	f340 8187 	ble.w	86382 <_svfprintf_r+0xc62>
   86074:	2301      	movs	r3, #1
   86076:	9a11      	ldr	r2, [sp, #68]	; 0x44
   86078:	2d07      	cmp	r5, #7
   8607a:	f8c9 2000 	str.w	r2, [r9]
   8607e:	e9cd 5426 	strd	r5, r4, [sp, #152]	; 0x98
   86082:	f8c9 3004 	str.w	r3, [r9, #4]
   86086:	f300 82f9 	bgt.w	8667c <_svfprintf_r+0xf5c>
   8608a:	9b19      	ldr	r3, [sp, #100]	; 0x64
   8608c:	3501      	adds	r5, #1
   8608e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
   86090:	441c      	add	r4, r3
   86092:	2d07      	cmp	r5, #7
   86094:	e9cd 5426 	strd	r5, r4, [sp, #152]	; 0x98
   86098:	e9c6 2300 	strd	r2, r3, [r6]
   8609c:	f300 82fa 	bgt.w	86694 <_svfprintf_r+0xf74>
   860a0:	3608      	adds	r6, #8
   860a2:	1c6f      	adds	r7, r5, #1
   860a4:	970e      	str	r7, [sp, #56]	; 0x38
   860a6:	9709      	str	r7, [sp, #36]	; 0x24
   860a8:	9f13      	ldr	r7, [sp, #76]	; 0x4c
   860aa:	e9dd 0215 	ldrd	r0, r2, [sp, #84]	; 0x54
   860ae:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   860b0:	9914      	ldr	r1, [sp, #80]	; 0x50
   860b2:	3f01      	subs	r7, #1
   860b4:	f106 0908 	add.w	r9, r6, #8
   860b8:	f7fe fdbc 	bl	84c34 <__aeabi_dcmpeq>
   860bc:	2800      	cmp	r0, #0
   860be:	f040 811f 	bne.w	86300 <_svfprintf_r+0xbe0>
   860c2:	443c      	add	r4, r7
   860c4:	9b11      	ldr	r3, [sp, #68]	; 0x44
   860c6:	6077      	str	r7, [r6, #4]
   860c8:	9f09      	ldr	r7, [sp, #36]	; 0x24
   860ca:	3301      	adds	r3, #1
   860cc:	2f07      	cmp	r7, #7
   860ce:	6033      	str	r3, [r6, #0]
   860d0:	9427      	str	r4, [sp, #156]	; 0x9c
   860d2:	9726      	str	r7, [sp, #152]	; 0x98
   860d4:	f300 8280 	bgt.w	865d8 <_svfprintf_r+0xeb8>
   860d8:	f106 0310 	add.w	r3, r6, #16
   860dc:	464e      	mov	r6, r9
   860de:	4699      	mov	r9, r3
   860e0:	1caa      	adds	r2, r5, #2
   860e2:	9209      	str	r2, [sp, #36]	; 0x24
   860e4:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
   860e6:	ab21      	add	r3, sp, #132	; 0x84
   860e8:	4414      	add	r4, r2
   860ea:	6072      	str	r2, [r6, #4]
   860ec:	9a09      	ldr	r2, [sp, #36]	; 0x24
   860ee:	9427      	str	r4, [sp, #156]	; 0x9c
   860f0:	2a07      	cmp	r2, #7
   860f2:	9226      	str	r2, [sp, #152]	; 0x98
   860f4:	6033      	str	r3, [r6, #0]
   860f6:	f77f adca 	ble.w	85c8e <_svfprintf_r+0x56e>
   860fa:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   860fe:	aa25      	add	r2, sp, #148	; 0x94
   86100:	f003 f8da 	bl	892b8 <__ssprint_r>
   86104:	2800      	cmp	r0, #0
   86106:	f47f abd6 	bne.w	858b6 <_svfprintf_r+0x196>
   8610a:	46d1      	mov	r9, sl
   8610c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8610e:	e5be      	b.n	85c8e <_svfprintf_r+0x56e>
   86110:	2b01      	cmp	r3, #1
   86112:	f8cd 801c 	str.w	r8, [sp, #28]
   86116:	f47f acb8 	bne.w	85a8a <_svfprintf_r+0x36a>
   8611a:	2d00      	cmp	r5, #0
   8611c:	bf08      	it	eq
   8611e:	2c0a      	cmpeq	r4, #10
   86120:	f080 817d 	bcs.w	8641e <_svfprintf_r+0xcfe>
   86124:	ab42      	add	r3, sp, #264	; 0x108
   86126:	3430      	adds	r4, #48	; 0x30
   86128:	f803 4d41 	strb.w	r4, [r3, #-65]!
   8612c:	9311      	str	r3, [sp, #68]	; 0x44
   8612e:	2301      	movs	r3, #1
   86130:	930e      	str	r3, [sp, #56]	; 0x38
   86132:	e4c8      	b.n	85ac6 <_svfprintf_r+0x3a6>
   86134:	aa25      	add	r2, sp, #148	; 0x94
   86136:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   8613a:	f003 f8bd 	bl	892b8 <__ssprint_r>
   8613e:	2800      	cmp	r0, #0
   86140:	f47f abb9 	bne.w	858b6 <_svfprintf_r+0x196>
   86144:	46d1      	mov	r9, sl
   86146:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   86148:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8614a:	b91b      	cbnz	r3, 86154 <_svfprintf_r+0xa34>
   8614c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   8614e:	2a00      	cmp	r2, #0
   86150:	f000 8314 	beq.w	8677c <_svfprintf_r+0x105c>
   86154:	9a26      	ldr	r2, [sp, #152]	; 0x98
   86156:	9919      	ldr	r1, [sp, #100]	; 0x64
   86158:	3201      	adds	r2, #1
   8615a:	981a      	ldr	r0, [sp, #104]	; 0x68
   8615c:	440c      	add	r4, r1
   8615e:	2a07      	cmp	r2, #7
   86160:	9427      	str	r4, [sp, #156]	; 0x9c
   86162:	e9c9 0100 	strd	r0, r1, [r9]
   86166:	9226      	str	r2, [sp, #152]	; 0x98
   86168:	f300 8406 	bgt.w	86978 <_svfprintf_r+0x1258>
   8616c:	f109 0908 	add.w	r9, r9, #8
   86170:	2b00      	cmp	r3, #0
   86172:	f2c0 843f 	blt.w	869f4 <_svfprintf_r+0x12d4>
   86176:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   86178:	3201      	adds	r2, #1
   8617a:	9911      	ldr	r1, [sp, #68]	; 0x44
   8617c:	441c      	add	r4, r3
   8617e:	2a07      	cmp	r2, #7
   86180:	e9cd 2426 	strd	r2, r4, [sp, #152]	; 0x98
   86184:	e9c9 1300 	strd	r1, r3, [r9]
   86188:	f77f ad7f 	ble.w	85c8a <_svfprintf_r+0x56a>
   8618c:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   86190:	aa25      	add	r2, sp, #148	; 0x94
   86192:	f003 f891 	bl	892b8 <__ssprint_r>
   86196:	2800      	cmp	r0, #0
   86198:	f47f ab8d 	bne.w	858b6 <_svfprintf_r+0x196>
   8619c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8619e:	46d1      	mov	r9, sl
   861a0:	e575      	b.n	85c8e <_svfprintf_r+0x56e>
   861a2:	aa25      	add	r2, sp, #148	; 0x94
   861a4:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   861a8:	f003 f886 	bl	892b8 <__ssprint_r>
   861ac:	2800      	cmp	r0, #0
   861ae:	f47f ab82 	bne.w	858b6 <_svfprintf_r+0x196>
   861b2:	46d1      	mov	r9, sl
   861b4:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   861b6:	e4ff      	b.n	85bb8 <_svfprintf_r+0x498>
   861b8:	aa25      	add	r2, sp, #148	; 0x94
   861ba:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   861be:	f003 f87b 	bl	892b8 <__ssprint_r>
   861c2:	2800      	cmp	r0, #0
   861c4:	f47f ab77 	bne.w	858b6 <_svfprintf_r+0x196>
   861c8:	46d1      	mov	r9, sl
   861ca:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   861cc:	e504      	b.n	85bd8 <_svfprintf_r+0x4b8>
   861ce:	4652      	mov	r2, sl
   861d0:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
   861d4:	0923      	lsrs	r3, r4, #4
   861d6:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
   861da:	0928      	lsrs	r0, r5, #4
   861dc:	f004 010f 	and.w	r1, r4, #15
   861e0:	4605      	mov	r5, r0
   861e2:	461c      	mov	r4, r3
   861e4:	f81c 3001 	ldrb.w	r3, [ip, r1]
   861e8:	f802 3d01 	strb.w	r3, [r2, #-1]!
   861ec:	ea54 0305 	orrs.w	r3, r4, r5
   861f0:	d1f0      	bne.n	861d4 <_svfprintf_r+0xab4>
   861f2:	ebaa 0302 	sub.w	r3, sl, r2
   861f6:	9211      	str	r2, [sp, #68]	; 0x44
   861f8:	930e      	str	r3, [sp, #56]	; 0x38
   861fa:	e464      	b.n	85ac6 <_svfprintf_r+0x3a6>
   861fc:	aa25      	add	r2, sp, #148	; 0x94
   861fe:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   86202:	f003 f859 	bl	892b8 <__ssprint_r>
   86206:	2800      	cmp	r0, #0
   86208:	f47f ab55 	bne.w	858b6 <_svfprintf_r+0x196>
   8620c:	46d1      	mov	r9, sl
   8620e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   86210:	e52b      	b.n	85c6a <_svfprintf_r+0x54a>
   86212:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   86214:	2b00      	cmp	r3, #0
   86216:	f340 8265 	ble.w	866e4 <_svfprintf_r+0xfc4>
   8621a:	e9dd 3212 	ldrd	r3, r2, [sp, #72]	; 0x48
   8621e:	4293      	cmp	r3, r2
   86220:	bfa8      	it	ge
   86222:	4613      	movge	r3, r2
   86224:	2b00      	cmp	r3, #0
   86226:	461d      	mov	r5, r3
   86228:	dd0c      	ble.n	86244 <_svfprintf_r+0xb24>
   8622a:	9b26      	ldr	r3, [sp, #152]	; 0x98
   8622c:	9a11      	ldr	r2, [sp, #68]	; 0x44
   8622e:	3301      	adds	r3, #1
   86230:	442c      	add	r4, r5
   86232:	2b07      	cmp	r3, #7
   86234:	9427      	str	r4, [sp, #156]	; 0x9c
   86236:	e9c9 2500 	strd	r2, r5, [r9]
   8623a:	9326      	str	r3, [sp, #152]	; 0x98
   8623c:	f300 832a 	bgt.w	86894 <_svfprintf_r+0x1174>
   86240:	f109 0908 	add.w	r9, r9, #8
   86244:	9b12      	ldr	r3, [sp, #72]	; 0x48
   86246:	2d00      	cmp	r5, #0
   86248:	bfa8      	it	ge
   8624a:	1b5b      	subge	r3, r3, r5
   8624c:	2b00      	cmp	r3, #0
   8624e:	461d      	mov	r5, r3
   86250:	f300 818c 	bgt.w	8656c <_svfprintf_r+0xe4c>
   86254:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   86256:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   86258:	4293      	cmp	r3, r2
   8625a:	f2c0 81ee 	blt.w	8663a <_svfprintf_r+0xf1a>
   8625e:	9a07      	ldr	r2, [sp, #28]
   86260:	07d1      	lsls	r1, r2, #31
   86262:	f100 81ea 	bmi.w	8663a <_svfprintf_r+0xf1a>
   86266:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   86268:	9812      	ldr	r0, [sp, #72]	; 0x48
   8626a:	1ad3      	subs	r3, r2, r3
   8626c:	1a15      	subs	r5, r2, r0
   8626e:	429d      	cmp	r5, r3
   86270:	bfa8      	it	ge
   86272:	461d      	movge	r5, r3
   86274:	2d00      	cmp	r5, #0
   86276:	dd0f      	ble.n	86298 <_svfprintf_r+0xb78>
   86278:	9a26      	ldr	r2, [sp, #152]	; 0x98
   8627a:	9911      	ldr	r1, [sp, #68]	; 0x44
   8627c:	3201      	adds	r2, #1
   8627e:	4401      	add	r1, r0
   86280:	442c      	add	r4, r5
   86282:	2a07      	cmp	r2, #7
   86284:	f8c9 1000 	str.w	r1, [r9]
   86288:	9427      	str	r4, [sp, #156]	; 0x9c
   8628a:	f8c9 5004 	str.w	r5, [r9, #4]
   8628e:	9226      	str	r2, [sp, #152]	; 0x98
   86290:	f300 8334 	bgt.w	868fc <_svfprintf_r+0x11dc>
   86294:	f109 0908 	add.w	r9, r9, #8
   86298:	2d00      	cmp	r5, #0
   8629a:	bfb4      	ite	lt
   8629c:	461d      	movlt	r5, r3
   8629e:	1b5d      	subge	r5, r3, r5
   862a0:	2d00      	cmp	r5, #0
   862a2:	f77f acf4 	ble.w	85c8e <_svfprintf_r+0x56e>
   862a6:	2d10      	cmp	r5, #16
   862a8:	9a26      	ldr	r2, [sp, #152]	; 0x98
   862aa:	f340 83fa 	ble.w	86aa2 <_svfprintf_r+0x1382>
   862ae:	f8df 8670 	ldr.w	r8, [pc, #1648]	; 86920 <_svfprintf_r+0x1200>
   862b2:	4623      	mov	r3, r4
   862b4:	2610      	movs	r6, #16
   862b6:	4644      	mov	r4, r8
   862b8:	9f0d      	ldr	r7, [sp, #52]	; 0x34
   862ba:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
   862be:	e005      	b.n	862cc <_svfprintf_r+0xbac>
   862c0:	f109 0908 	add.w	r9, r9, #8
   862c4:	3d10      	subs	r5, #16
   862c6:	2d10      	cmp	r5, #16
   862c8:	f340 81f4 	ble.w	866b4 <_svfprintf_r+0xf94>
   862cc:	3201      	adds	r2, #1
   862ce:	3310      	adds	r3, #16
   862d0:	2a07      	cmp	r2, #7
   862d2:	e9cd 2326 	strd	r2, r3, [sp, #152]	; 0x98
   862d6:	e9c9 4600 	strd	r4, r6, [r9]
   862da:	ddf1      	ble.n	862c0 <_svfprintf_r+0xba0>
   862dc:	aa25      	add	r2, sp, #148	; 0x94
   862de:	4641      	mov	r1, r8
   862e0:	4638      	mov	r0, r7
   862e2:	f002 ffe9 	bl	892b8 <__ssprint_r>
   862e6:	2800      	cmp	r0, #0
   862e8:	f47f aae5 	bne.w	858b6 <_svfprintf_r+0x196>
   862ec:	e9dd 2326 	ldrd	r2, r3, [sp, #152]	; 0x98
   862f0:	46d1      	mov	r9, sl
   862f2:	e7e7      	b.n	862c4 <_svfprintf_r+0xba4>
   862f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
   862f6:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
   862fa:	930e      	str	r3, [sp, #56]	; 0x38
   862fc:	f7ff bbe3 	b.w	85ac6 <_svfprintf_r+0x3a6>
   86300:	2f00      	cmp	r7, #0
   86302:	f77f aeef 	ble.w	860e4 <_svfprintf_r+0x9c4>
   86306:	2f10      	cmp	r7, #16
   86308:	f340 841a 	ble.w	86b40 <_svfprintf_r+0x1420>
   8630c:	f8df 8610 	ldr.w	r8, [pc, #1552]	; 86920 <_svfprintf_r+0x1200>
   86310:	4633      	mov	r3, r6
   86312:	4622      	mov	r2, r4
   86314:	4646      	mov	r6, r8
   86316:	f04f 0910 	mov.w	r9, #16
   8631a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
   8631c:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
   86320:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   86322:	e005      	b.n	86330 <_svfprintf_r+0xc10>
   86324:	3308      	adds	r3, #8
   86326:	3f10      	subs	r7, #16
   86328:	2f10      	cmp	r7, #16
   8632a:	f340 81f8 	ble.w	8671e <_svfprintf_r+0xffe>
   8632e:	3501      	adds	r5, #1
   86330:	3210      	adds	r2, #16
   86332:	2d07      	cmp	r5, #7
   86334:	e9cd 5226 	strd	r5, r2, [sp, #152]	; 0x98
   86338:	e9c3 6900 	strd	r6, r9, [r3]
   8633c:	ddf2      	ble.n	86324 <_svfprintf_r+0xc04>
   8633e:	aa25      	add	r2, sp, #148	; 0x94
   86340:	4641      	mov	r1, r8
   86342:	4620      	mov	r0, r4
   86344:	f002 ffb8 	bl	892b8 <__ssprint_r>
   86348:	2800      	cmp	r0, #0
   8634a:	f47f aab4 	bne.w	858b6 <_svfprintf_r+0x196>
   8634e:	e9dd 5226 	ldrd	r5, r2, [sp, #152]	; 0x98
   86352:	4653      	mov	r3, sl
   86354:	e7e7      	b.n	86326 <_svfprintf_r+0xc06>
   86356:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   86358:	f852 4b04 	ldr.w	r4, [r2], #4
   8635c:	920f      	str	r2, [sp, #60]	; 0x3c
   8635e:	f018 0210 	ands.w	r2, r8, #16
   86362:	f000 8087 	beq.w	86474 <_svfprintf_r+0xd54>
   86366:	2500      	movs	r5, #0
   86368:	f7ff bac2 	b.w	858f0 <_svfprintf_r+0x1d0>
   8636c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   8636e:	f018 0f10 	tst.w	r8, #16
   86372:	f853 4b04 	ldr.w	r4, [r3], #4
   86376:	930f      	str	r3, [sp, #60]	; 0x3c
   86378:	d074      	beq.n	86464 <_svfprintf_r+0xd44>
   8637a:	2500      	movs	r5, #0
   8637c:	2301      	movs	r3, #1
   8637e:	f7ff bab7 	b.w	858f0 <_svfprintf_r+0x1d0>
   86382:	9a07      	ldr	r2, [sp, #28]
   86384:	07d2      	lsls	r2, r2, #31
   86386:	f53f ae75 	bmi.w	86074 <_svfprintf_r+0x954>
   8638a:	2201      	movs	r2, #1
   8638c:	9911      	ldr	r1, [sp, #68]	; 0x44
   8638e:	2d07      	cmp	r5, #7
   86390:	f8c9 1000 	str.w	r1, [r9]
   86394:	e9cd 5426 	strd	r5, r4, [sp, #152]	; 0x98
   86398:	f8c9 2004 	str.w	r2, [r9, #4]
   8639c:	f300 829d 	bgt.w	868da <_svfprintf_r+0x11ba>
   863a0:	3302      	adds	r3, #2
   863a2:	9309      	str	r3, [sp, #36]	; 0x24
   863a4:	f109 0910 	add.w	r9, r9, #16
   863a8:	e69c      	b.n	860e4 <_svfprintf_r+0x9c4>
   863aa:	2b30      	cmp	r3, #48	; 0x30
   863ac:	f000 813f 	beq.w	8662e <_svfprintf_r+0xf0e>
   863b0:	2330      	movs	r3, #48	; 0x30
   863b2:	9a11      	ldr	r2, [sp, #68]	; 0x44
   863b4:	3902      	subs	r1, #2
   863b6:	f802 3c01 	strb.w	r3, [r2, #-1]
   863ba:	ebaa 0301 	sub.w	r3, sl, r1
   863be:	930e      	str	r3, [sp, #56]	; 0x38
   863c0:	9111      	str	r1, [sp, #68]	; 0x44
   863c2:	f7ff bb80 	b.w	85ac6 <_svfprintf_r+0x3a6>
   863c6:	9b07      	ldr	r3, [sp, #28]
   863c8:	07dd      	lsls	r5, r3, #31
   863ca:	f53f adb4 	bmi.w	85f36 <_svfprintf_r+0x816>
   863ce:	e45e      	b.n	85c8e <_svfprintf_r+0x56e>
   863d0:	aa25      	add	r2, sp, #148	; 0x94
   863d2:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   863d6:	f002 ff6f 	bl	892b8 <__ssprint_r>
   863da:	2800      	cmp	r0, #0
   863dc:	f47f aa6b 	bne.w	858b6 <_svfprintf_r+0x196>
   863e0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   863e2:	e489      	b.n	85cf8 <_svfprintf_r+0x5d8>
   863e4:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
   863e8:	f7ff bb6d 	b.w	85ac6 <_svfprintf_r+0x3a6>
   863ec:	2500      	movs	r5, #0
   863ee:	e4a3      	b.n	85d38 <_svfprintf_r+0x618>
   863f0:	17e5      	asrs	r5, r4, #31
   863f2:	2c00      	cmp	r4, #0
   863f4:	f175 0300 	sbcs.w	r3, r5, #0
   863f8:	f6bf ab35 	bge.w	85a66 <_svfprintf_r+0x346>
   863fc:	262d      	movs	r6, #45	; 0x2d
   863fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
   86400:	4264      	negs	r4, r4
   86402:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   86406:	3301      	adds	r3, #1
   86408:	f88d 6077 	strb.w	r6, [sp, #119]	; 0x77
   8640c:	f47f ab31 	bne.w	85a72 <_svfprintf_r+0x352>
   86410:	2d00      	cmp	r5, #0
   86412:	bf08      	it	eq
   86414:	2c0a      	cmpeq	r4, #10
   86416:	f8cd 801c 	str.w	r8, [sp, #28]
   8641a:	f4ff ae83 	bcc.w	86124 <_svfprintf_r+0xa04>
   8641e:	46d0      	mov	r8, sl
   86420:	4620      	mov	r0, r4
   86422:	4629      	mov	r1, r5
   86424:	220a      	movs	r2, #10
   86426:	2300      	movs	r3, #0
   86428:	f7fe fefc 	bl	85224 <__aeabi_uldivmod>
   8642c:	3230      	adds	r2, #48	; 0x30
   8642e:	f808 2d01 	strb.w	r2, [r8, #-1]!
   86432:	4620      	mov	r0, r4
   86434:	4629      	mov	r1, r5
   86436:	2300      	movs	r3, #0
   86438:	220a      	movs	r2, #10
   8643a:	f7fe fef3 	bl	85224 <__aeabi_uldivmod>
   8643e:	4604      	mov	r4, r0
   86440:	460d      	mov	r5, r1
   86442:	ea54 0305 	orrs.w	r3, r4, r5
   86446:	d1eb      	bne.n	86420 <_svfprintf_r+0xd00>
   86448:	ebaa 0308 	sub.w	r3, sl, r8
   8644c:	f8cd 8044 	str.w	r8, [sp, #68]	; 0x44
   86450:	930e      	str	r3, [sp, #56]	; 0x38
   86452:	f7ff bb38 	b.w	85ac6 <_svfprintf_r+0x3a6>
   86456:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   86458:	4610      	mov	r0, r2
   8645a:	17d1      	asrs	r1, r2, #31
   8645c:	e9c3 0100 	strd	r0, r1, [r3]
   86460:	f7ff b986 	b.w	85770 <_svfprintf_r+0x50>
   86464:	f018 0f40 	tst.w	r8, #64	; 0x40
   86468:	bf18      	it	ne
   8646a:	b2a4      	uxthne	r4, r4
   8646c:	2500      	movs	r5, #0
   8646e:	2301      	movs	r3, #1
   86470:	f7ff ba3e 	b.w	858f0 <_svfprintf_r+0x1d0>
   86474:	f018 0340 	ands.w	r3, r8, #64	; 0x40
   86478:	bf1c      	itt	ne
   8647a:	4613      	movne	r3, r2
   8647c:	b2a4      	uxthne	r4, r4
   8647e:	2500      	movs	r5, #0
   86480:	f7ff ba36 	b.w	858f0 <_svfprintf_r+0x1d0>
   86484:	9c15      	ldr	r4, [sp, #84]	; 0x54
   86486:	4622      	mov	r2, r4
   86488:	4620      	mov	r0, r4
   8648a:	9c14      	ldr	r4, [sp, #80]	; 0x50
   8648c:	4623      	mov	r3, r4
   8648e:	4621      	mov	r1, r4
   86490:	f003 fd0e 	bl	89eb0 <__aeabi_dcmpun>
   86494:	2800      	cmp	r0, #0
   86496:	f040 832e 	bne.w	86af6 <_svfprintf_r+0x13d6>
   8649a:	9a09      	ldr	r2, [sp, #36]	; 0x24
   8649c:	f027 0320 	bic.w	r3, r7, #32
   864a0:	1c54      	adds	r4, r2, #1
   864a2:	9308      	str	r3, [sp, #32]
   864a4:	f000 8242 	beq.w	8692c <_svfprintf_r+0x120c>
   864a8:	2b47      	cmp	r3, #71	; 0x47
   864aa:	f000 816c 	beq.w	86786 <_svfprintf_r+0x1066>
   864ae:	f448 7380 	orr.w	r3, r8, #256	; 0x100
   864b2:	9307      	str	r3, [sp, #28]
   864b4:	e9dd 3614 	ldrd	r3, r6, [sp, #80]	; 0x50
   864b8:	1e1d      	subs	r5, r3, #0
   864ba:	bfb6      	itet	lt
   864bc:	f103 4500 	addlt.w	r5, r3, #2147483648	; 0x80000000
   864c0:	2300      	movge	r3, #0
   864c2:	232d      	movlt	r3, #45	; 0x2d
   864c4:	2f66      	cmp	r7, #102	; 0x66
   864c6:	9310      	str	r3, [sp, #64]	; 0x40
   864c8:	f000 8233 	beq.w	86932 <_svfprintf_r+0x1212>
   864cc:	2f46      	cmp	r7, #70	; 0x46
   864ce:	f000 8274 	beq.w	869ba <_svfprintf_r+0x129a>
   864d2:	9b08      	ldr	r3, [sp, #32]
   864d4:	4632      	mov	r2, r6
   864d6:	2b45      	cmp	r3, #69	; 0x45
   864d8:	f04f 0002 	mov.w	r0, #2
   864dc:	462b      	mov	r3, r5
   864de:	f000 8158 	beq.w	86792 <_svfprintf_r+0x1072>
   864e2:	9c09      	ldr	r4, [sp, #36]	; 0x24
   864e4:	a923      	add	r1, sp, #140	; 0x8c
   864e6:	e9cd 0400 	strd	r0, r4, [sp]
   864ea:	9104      	str	r1, [sp, #16]
   864ec:	a820      	add	r0, sp, #128	; 0x80
   864ee:	a91f      	add	r1, sp, #124	; 0x7c
   864f0:	e9cd 1002 	strd	r1, r0, [sp, #8]
   864f4:	980d      	ldr	r0, [sp, #52]	; 0x34
   864f6:	f000 fc55 	bl	86da4 <_dtoa_r>
   864fa:	2f67      	cmp	r7, #103	; 0x67
   864fc:	9011      	str	r0, [sp, #68]	; 0x44
   864fe:	f040 8354 	bne.w	86baa <_svfprintf_r+0x148a>
   86502:	f018 0f01 	tst.w	r8, #1
   86506:	f000 8169 	beq.w	867dc <_svfprintf_r+0x10bc>
   8650a:	9b11      	ldr	r3, [sp, #68]	; 0x44
   8650c:	9a09      	ldr	r2, [sp, #36]	; 0x24
   8650e:	189c      	adds	r4, r3, r2
   86510:	9a16      	ldr	r2, [sp, #88]	; 0x58
   86512:	4630      	mov	r0, r6
   86514:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   86516:	4629      	mov	r1, r5
   86518:	f7fe fb8c 	bl	84c34 <__aeabi_dcmpeq>
   8651c:	2800      	cmp	r0, #0
   8651e:	f000 81d0 	beq.w	868c2 <_svfprintf_r+0x11a2>
   86522:	4623      	mov	r3, r4
   86524:	9a11      	ldr	r2, [sp, #68]	; 0x44
   86526:	1a9b      	subs	r3, r3, r2
   86528:	9313      	str	r3, [sp, #76]	; 0x4c
   8652a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   8652c:	9312      	str	r3, [sp, #72]	; 0x48
   8652e:	9b08      	ldr	r3, [sp, #32]
   86530:	2b47      	cmp	r3, #71	; 0x47
   86532:	f000 815c 	beq.w	867ee <_svfprintf_r+0x10ce>
   86536:	2f66      	cmp	r7, #102	; 0x66
   86538:	f040 8160 	bne.w	867fc <_svfprintf_r+0x10dc>
   8653c:	9b12      	ldr	r3, [sp, #72]	; 0x48
   8653e:	2b00      	cmp	r3, #0
   86540:	9b09      	ldr	r3, [sp, #36]	; 0x24
   86542:	f340 82f5 	ble.w	86b30 <_svfprintf_r+0x1410>
   86546:	2b00      	cmp	r3, #0
   86548:	f040 82e8 	bne.w	86b1c <_svfprintf_r+0x13fc>
   8654c:	f018 0f01 	tst.w	r8, #1
   86550:	f040 82e4 	bne.w	86b1c <_svfprintf_r+0x13fc>
   86554:	9b12      	ldr	r3, [sp, #72]	; 0x48
   86556:	9308      	str	r3, [sp, #32]
   86558:	930e      	str	r3, [sp, #56]	; 0x38
   8655a:	9b10      	ldr	r3, [sp, #64]	; 0x40
   8655c:	2b00      	cmp	r3, #0
   8655e:	f040 817a 	bne.w	86856 <_svfprintf_r+0x1136>
   86562:	9309      	str	r3, [sp, #36]	; 0x24
   86564:	f89d 6077 	ldrb.w	r6, [sp, #119]	; 0x77
   86568:	f7ff ba39 	b.w	859de <_svfprintf_r+0x2be>
   8656c:	2b10      	cmp	r3, #16
   8656e:	9a26      	ldr	r2, [sp, #152]	; 0x98
   86570:	f340 82ea 	ble.w	86b48 <_svfprintf_r+0x1428>
   86574:	f8df 83a8 	ldr.w	r8, [pc, #936]	; 86920 <_svfprintf_r+0x1200>
   86578:	4623      	mov	r3, r4
   8657a:	2610      	movs	r6, #16
   8657c:	4644      	mov	r4, r8
   8657e:	9f0d      	ldr	r7, [sp, #52]	; 0x34
   86580:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
   86584:	e005      	b.n	86592 <_svfprintf_r+0xe72>
   86586:	f109 0908 	add.w	r9, r9, #8
   8658a:	3d10      	subs	r5, #16
   8658c:	2d10      	cmp	r5, #16
   8658e:	f340 80dc 	ble.w	8674a <_svfprintf_r+0x102a>
   86592:	3201      	adds	r2, #1
   86594:	3310      	adds	r3, #16
   86596:	2a07      	cmp	r2, #7
   86598:	e9cd 2326 	strd	r2, r3, [sp, #152]	; 0x98
   8659c:	e9c9 4600 	strd	r4, r6, [r9]
   865a0:	ddf1      	ble.n	86586 <_svfprintf_r+0xe66>
   865a2:	aa25      	add	r2, sp, #148	; 0x94
   865a4:	4641      	mov	r1, r8
   865a6:	4638      	mov	r0, r7
   865a8:	f002 fe86 	bl	892b8 <__ssprint_r>
   865ac:	2800      	cmp	r0, #0
   865ae:	f47f a982 	bne.w	858b6 <_svfprintf_r+0x196>
   865b2:	e9dd 2326 	ldrd	r2, r3, [sp, #152]	; 0x98
   865b6:	46d1      	mov	r9, sl
   865b8:	e7e7      	b.n	8658a <_svfprintf_r+0xe6a>
   865ba:	2140      	movs	r1, #64	; 0x40
   865bc:	980d      	ldr	r0, [sp, #52]	; 0x34
   865be:	f001 fc55 	bl	87e6c <_malloc_r>
   865c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   865c4:	6018      	str	r0, [r3, #0]
   865c6:	6118      	str	r0, [r3, #16]
   865c8:	2800      	cmp	r0, #0
   865ca:	f000 82f5 	beq.w	86bb8 <_svfprintf_r+0x1498>
   865ce:	2340      	movs	r3, #64	; 0x40
   865d0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   865d2:	6153      	str	r3, [r2, #20]
   865d4:	f7ff b8bb 	b.w	8574e <_svfprintf_r+0x2e>
   865d8:	aa25      	add	r2, sp, #148	; 0x94
   865da:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   865de:	f002 fe6b 	bl	892b8 <__ssprint_r>
   865e2:	2800      	cmp	r0, #0
   865e4:	f47f a967 	bne.w	858b6 <_svfprintf_r+0x196>
   865e8:	e9dd 3426 	ldrd	r3, r4, [sp, #152]	; 0x98
   865ec:	3301      	adds	r3, #1
   865ee:	9309      	str	r3, [sp, #36]	; 0x24
   865f0:	f10d 09d0 	add.w	r9, sp, #208	; 0xd0
   865f4:	4656      	mov	r6, sl
   865f6:	e575      	b.n	860e4 <_svfprintf_r+0x9c4>
   865f8:	aa25      	add	r2, sp, #148	; 0x94
   865fa:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   865fe:	f002 fe5b 	bl	892b8 <__ssprint_r>
   86602:	2800      	cmp	r0, #0
   86604:	f47f a957 	bne.w	858b6 <_svfprintf_r+0x196>
   86608:	46d1      	mov	r9, sl
   8660a:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   8660c:	e4a1      	b.n	85f52 <_svfprintf_r+0x832>
   8660e:	9b09      	ldr	r3, [sp, #36]	; 0x24
   86610:	9e11      	ldr	r6, [sp, #68]	; 0x44
   86612:	2b06      	cmp	r3, #6
   86614:	bf28      	it	cs
   86616:	2306      	movcs	r3, #6
   86618:	9308      	str	r3, [sp, #32]
   8661a:	930e      	str	r3, [sp, #56]	; 0x38
   8661c:	4bbe      	ldr	r3, [pc, #760]	; (86918 <_svfprintf_r+0x11f8>)
   8661e:	9609      	str	r6, [sp, #36]	; 0x24
   86620:	940f      	str	r4, [sp, #60]	; 0x3c
   86622:	f8cd 801c 	str.w	r8, [sp, #28]
   86626:	9612      	str	r6, [sp, #72]	; 0x48
   86628:	9311      	str	r3, [sp, #68]	; 0x44
   8662a:	f7ff b9d8 	b.w	859de <_svfprintf_r+0x2be>
   8662e:	9b11      	ldr	r3, [sp, #68]	; 0x44
   86630:	ebaa 0303 	sub.w	r3, sl, r3
   86634:	930e      	str	r3, [sp, #56]	; 0x38
   86636:	f7ff ba46 	b.w	85ac6 <_svfprintf_r+0x3a6>
   8663a:	9a26      	ldr	r2, [sp, #152]	; 0x98
   8663c:	9919      	ldr	r1, [sp, #100]	; 0x64
   8663e:	3201      	adds	r2, #1
   86640:	981a      	ldr	r0, [sp, #104]	; 0x68
   86642:	440c      	add	r4, r1
   86644:	2a07      	cmp	r2, #7
   86646:	9427      	str	r4, [sp, #156]	; 0x9c
   86648:	e9c9 0100 	strd	r0, r1, [r9]
   8664c:	9226      	str	r2, [sp, #152]	; 0x98
   8664e:	f300 812c 	bgt.w	868aa <_svfprintf_r+0x118a>
   86652:	f109 0908 	add.w	r9, r9, #8
   86656:	e606      	b.n	86266 <_svfprintf_r+0xb46>
   86658:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   8665a:	601a      	str	r2, [r3, #0]
   8665c:	f7ff b888 	b.w	85770 <_svfprintf_r+0x50>
   86660:	aa25      	add	r2, sp, #148	; 0x94
   86662:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   86666:	f002 fe27 	bl	892b8 <__ssprint_r>
   8666a:	2800      	cmp	r0, #0
   8666c:	f47f a923 	bne.w	858b6 <_svfprintf_r+0x196>
   86670:	46d1      	mov	r9, sl
   86672:	f89d 6077 	ldrb.w	r6, [sp, #119]	; 0x77
   86676:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   86678:	f7ff ba8e 	b.w	85b98 <_svfprintf_r+0x478>
   8667c:	aa25      	add	r2, sp, #148	; 0x94
   8667e:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   86682:	f002 fe19 	bl	892b8 <__ssprint_r>
   86686:	2800      	cmp	r0, #0
   86688:	f47f a915 	bne.w	858b6 <_svfprintf_r+0x196>
   8668c:	e9dd 5426 	ldrd	r5, r4, [sp, #152]	; 0x98
   86690:	4656      	mov	r6, sl
   86692:	e4fa      	b.n	8608a <_svfprintf_r+0x96a>
   86694:	aa25      	add	r2, sp, #148	; 0x94
   86696:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   8669a:	f002 fe0d 	bl	892b8 <__ssprint_r>
   8669e:	2800      	cmp	r0, #0
   866a0:	f47f a909 	bne.w	858b6 <_svfprintf_r+0x196>
   866a4:	e9dd 5426 	ldrd	r5, r4, [sp, #152]	; 0x98
   866a8:	4656      	mov	r6, sl
   866aa:	e4fa      	b.n	860a2 <_svfprintf_r+0x982>
   866ac:	2b01      	cmp	r3, #1
   866ae:	f47f a9ec 	bne.w	85a8a <_svfprintf_r+0x36a>
   866b2:	e537      	b.n	86124 <_svfprintf_r+0xa04>
   866b4:	46a0      	mov	r8, r4
   866b6:	461c      	mov	r4, r3
   866b8:	3201      	adds	r2, #1
   866ba:	442c      	add	r4, r5
   866bc:	2a07      	cmp	r2, #7
   866be:	e9cd 2426 	strd	r2, r4, [sp, #152]	; 0x98
   866c2:	e9c9 8500 	strd	r8, r5, [r9]
   866c6:	f77f aae0 	ble.w	85c8a <_svfprintf_r+0x56a>
   866ca:	e55f      	b.n	8618c <_svfprintf_r+0xa6c>
   866cc:	aa25      	add	r2, sp, #148	; 0x94
   866ce:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   866d2:	f002 fdf1 	bl	892b8 <__ssprint_r>
   866d6:	2800      	cmp	r0, #0
   866d8:	f47f a8ed 	bne.w	858b6 <_svfprintf_r+0x196>
   866dc:	46d1      	mov	r9, sl
   866de:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   866e0:	f7ff ba7e 	b.w	85be0 <_svfprintf_r+0x4c0>
   866e4:	2001      	movs	r0, #1
   866e6:	9a26      	ldr	r2, [sp, #152]	; 0x98
   866e8:	498c      	ldr	r1, [pc, #560]	; (8691c <_svfprintf_r+0x11fc>)
   866ea:	4402      	add	r2, r0
   866ec:	4404      	add	r4, r0
   866ee:	2a07      	cmp	r2, #7
   866f0:	e9cd 2426 	strd	r2, r4, [sp, #152]	; 0x98
   866f4:	e9c9 1000 	strd	r1, r0, [r9]
   866f8:	f73f ad1c 	bgt.w	86134 <_svfprintf_r+0xa14>
   866fc:	f109 0908 	add.w	r9, r9, #8
   86700:	e523      	b.n	8614a <_svfprintf_r+0xa2a>
   86702:	aa25      	add	r2, sp, #148	; 0x94
   86704:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   86708:	f002 fdd6 	bl	892b8 <__ssprint_r>
   8670c:	2800      	cmp	r0, #0
   8670e:	f47f a8d2 	bne.w	858b6 <_svfprintf_r+0x196>
   86712:	46d1      	mov	r9, sl
   86714:	e409      	b.n	85f2a <_svfprintf_r+0x80a>
   86716:	f8df 8208 	ldr.w	r8, [pc, #520]	; 86920 <_svfprintf_r+0x1200>
   8671a:	f7ff ba9b 	b.w	85c54 <_svfprintf_r+0x534>
   8671e:	46b0      	mov	r8, r6
   86720:	461e      	mov	r6, r3
   86722:	1c6b      	adds	r3, r5, #1
   86724:	4614      	mov	r4, r2
   86726:	9309      	str	r3, [sp, #36]	; 0x24
   86728:	f106 0208 	add.w	r2, r6, #8
   8672c:	9b09      	ldr	r3, [sp, #36]	; 0x24
   8672e:	443c      	add	r4, r7
   86730:	2b07      	cmp	r3, #7
   86732:	9427      	str	r4, [sp, #156]	; 0x9c
   86734:	e9c6 8700 	strd	r8, r7, [r6]
   86738:	9326      	str	r3, [sp, #152]	; 0x98
   8673a:	f73f af4d 	bgt.w	865d8 <_svfprintf_r+0xeb8>
   8673e:	3301      	adds	r3, #1
   86740:	9309      	str	r3, [sp, #36]	; 0x24
   86742:	f102 0908 	add.w	r9, r2, #8
   86746:	4616      	mov	r6, r2
   86748:	e4cc      	b.n	860e4 <_svfprintf_r+0x9c4>
   8674a:	46a0      	mov	r8, r4
   8674c:	461c      	mov	r4, r3
   8674e:	3201      	adds	r2, #1
   86750:	442c      	add	r4, r5
   86752:	2a07      	cmp	r2, #7
   86754:	e9cd 2426 	strd	r2, r4, [sp, #152]	; 0x98
   86758:	e9c9 8500 	strd	r8, r5, [r9]
   8675c:	f300 813f 	bgt.w	869de <_svfprintf_r+0x12be>
   86760:	f109 0908 	add.w	r9, r9, #8
   86764:	e576      	b.n	86254 <_svfprintf_r+0xb34>
   86766:	9811      	ldr	r0, [sp, #68]	; 0x44
   86768:	9509      	str	r5, [sp, #36]	; 0x24
   8676a:	f7fe ffab 	bl	856c4 <strlen>
   8676e:	f8cd 801c 	str.w	r8, [sp, #28]
   86772:	e9cd 040e 	strd	r0, r4, [sp, #56]	; 0x38
   86776:	4603      	mov	r3, r0
   86778:	f7ff b92b 	b.w	859d2 <_svfprintf_r+0x2b2>
   8677c:	9a07      	ldr	r2, [sp, #28]
   8677e:	07d0      	lsls	r0, r2, #31
   86780:	f57f aa85 	bpl.w	85c8e <_svfprintf_r+0x56e>
   86784:	e4e6      	b.n	86154 <_svfprintf_r+0xa34>
   86786:	2a00      	cmp	r2, #0
   86788:	4613      	mov	r3, r2
   8678a:	bf08      	it	eq
   8678c:	2301      	moveq	r3, #1
   8678e:	9309      	str	r3, [sp, #36]	; 0x24
   86790:	e68d      	b.n	864ae <_svfprintf_r+0xd8e>
   86792:	9909      	ldr	r1, [sp, #36]	; 0x24
   86794:	9000      	str	r0, [sp, #0]
   86796:	1c4c      	adds	r4, r1, #1
   86798:	a923      	add	r1, sp, #140	; 0x8c
   8679a:	a820      	add	r0, sp, #128	; 0x80
   8679c:	9104      	str	r1, [sp, #16]
   8679e:	a91f      	add	r1, sp, #124	; 0x7c
   867a0:	e9cd 1002 	strd	r1, r0, [sp, #8]
   867a4:	9401      	str	r4, [sp, #4]
   867a6:	980d      	ldr	r0, [sp, #52]	; 0x34
   867a8:	940e      	str	r4, [sp, #56]	; 0x38
   867aa:	f000 fafb 	bl	86da4 <_dtoa_r>
   867ae:	9011      	str	r0, [sp, #68]	; 0x44
   867b0:	2f47      	cmp	r7, #71	; 0x47
   867b2:	f040 81e3 	bne.w	86b7c <_svfprintf_r+0x145c>
   867b6:	f018 0f01 	tst.w	r8, #1
   867ba:	f000 81d8 	beq.w	86b6e <_svfprintf_r+0x144e>
   867be:	9b11      	ldr	r3, [sp, #68]	; 0x44
   867c0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   867c2:	2f46      	cmp	r7, #70	; 0x46
   867c4:	eb03 0402 	add.w	r4, r3, r2
   867c8:	f47f aea2 	bne.w	86510 <_svfprintf_r+0xdf0>
   867cc:	9b11      	ldr	r3, [sp, #68]	; 0x44
   867ce:	781b      	ldrb	r3, [r3, #0]
   867d0:	2b30      	cmp	r3, #48	; 0x30
   867d2:	f000 8169 	beq.w	86aa8 <_svfprintf_r+0x1388>
   867d6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   867d8:	441c      	add	r4, r3
   867da:	e699      	b.n	86510 <_svfprintf_r+0xdf0>
   867dc:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   867de:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   867e0:	9212      	str	r2, [sp, #72]	; 0x48
   867e2:	9a11      	ldr	r2, [sp, #68]	; 0x44
   867e4:	1a9b      	subs	r3, r3, r2
   867e6:	9313      	str	r3, [sp, #76]	; 0x4c
   867e8:	9b08      	ldr	r3, [sp, #32]
   867ea:	2b47      	cmp	r3, #71	; 0x47
   867ec:	d106      	bne.n	867fc <_svfprintf_r+0x10dc>
   867ee:	9b12      	ldr	r3, [sp, #72]	; 0x48
   867f0:	1cda      	adds	r2, r3, #3
   867f2:	db02      	blt.n	867fa <_svfprintf_r+0x10da>
   867f4:	9a09      	ldr	r2, [sp, #36]	; 0x24
   867f6:	429a      	cmp	r2, r3
   867f8:	da34      	bge.n	86864 <_svfprintf_r+0x1144>
   867fa:	3f02      	subs	r7, #2
   867fc:	9b12      	ldr	r3, [sp, #72]	; 0x48
   867fe:	f88d 7084 	strb.w	r7, [sp, #132]	; 0x84
   86802:	3b01      	subs	r3, #1
   86804:	2b00      	cmp	r3, #0
   86806:	bfb4      	ite	lt
   86808:	222d      	movlt	r2, #45	; 0x2d
   8680a:	222b      	movge	r2, #43	; 0x2b
   8680c:	931f      	str	r3, [sp, #124]	; 0x7c
   8680e:	bfb8      	it	lt
   86810:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
   86812:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
   86816:	bfb8      	it	lt
   86818:	f1c3 0301 	rsblt	r3, r3, #1
   8681c:	2b09      	cmp	r3, #9
   8681e:	f300 810d 	bgt.w	86a3c <_svfprintf_r+0x131c>
   86822:	2230      	movs	r2, #48	; 0x30
   86824:	4413      	add	r3, r2
   86826:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
   8682a:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
   8682e:	ab22      	add	r3, sp, #136	; 0x88
   86830:	aa21      	add	r2, sp, #132	; 0x84
   86832:	1a9b      	subs	r3, r3, r2
   86834:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   86836:	931b      	str	r3, [sp, #108]	; 0x6c
   86838:	2a01      	cmp	r2, #1
   8683a:	4413      	add	r3, r2
   8683c:	930e      	str	r3, [sp, #56]	; 0x38
   8683e:	f340 8150 	ble.w	86ae2 <_svfprintf_r+0x13c2>
   86842:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   86844:	9a19      	ldr	r2, [sp, #100]	; 0x64
   86846:	4413      	add	r3, r2
   86848:	930e      	str	r3, [sp, #56]	; 0x38
   8684a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   8684e:	9308      	str	r3, [sp, #32]
   86850:	2300      	movs	r3, #0
   86852:	9312      	str	r3, [sp, #72]	; 0x48
   86854:	e681      	b.n	8655a <_svfprintf_r+0xe3a>
   86856:	262d      	movs	r6, #45	; 0x2d
   86858:	2300      	movs	r3, #0
   8685a:	f88d 6077 	strb.w	r6, [sp, #119]	; 0x77
   8685e:	9309      	str	r3, [sp, #36]	; 0x24
   86860:	f7ff b8c0 	b.w	859e4 <_svfprintf_r+0x2c4>
   86864:	e9dd 3112 	ldrd	r3, r1, [sp, #72]	; 0x48
   86868:	428b      	cmp	r3, r1
   8686a:	f2c0 8093 	blt.w	86994 <_svfprintf_r+0x1274>
   8686e:	f018 0f01 	tst.w	r8, #1
   86872:	f000 8110 	beq.w	86a96 <_svfprintf_r+0x1376>
   86876:	9b12      	ldr	r3, [sp, #72]	; 0x48
   86878:	9a19      	ldr	r2, [sp, #100]	; 0x64
   8687a:	2767      	movs	r7, #103	; 0x67
   8687c:	4413      	add	r3, r2
   8687e:	930e      	str	r3, [sp, #56]	; 0x38
   86880:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   86884:	9308      	str	r3, [sp, #32]
   86886:	e668      	b.n	8655a <_svfprintf_r+0xe3a>
   86888:	232d      	movs	r3, #45	; 0x2d
   8688a:	461e      	mov	r6, r3
   8688c:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
   86890:	f7ff bacd 	b.w	85e2e <_svfprintf_r+0x70e>
   86894:	aa25      	add	r2, sp, #148	; 0x94
   86896:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   8689a:	f002 fd0d 	bl	892b8 <__ssprint_r>
   8689e:	2800      	cmp	r0, #0
   868a0:	f47f a809 	bne.w	858b6 <_svfprintf_r+0x196>
   868a4:	46d1      	mov	r9, sl
   868a6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   868a8:	e4cc      	b.n	86244 <_svfprintf_r+0xb24>
   868aa:	aa25      	add	r2, sp, #148	; 0x94
   868ac:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   868b0:	f002 fd02 	bl	892b8 <__ssprint_r>
   868b4:	2800      	cmp	r0, #0
   868b6:	f47e affe 	bne.w	858b6 <_svfprintf_r+0x196>
   868ba:	46d1      	mov	r9, sl
   868bc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   868be:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   868c0:	e4d1      	b.n	86266 <_svfprintf_r+0xb46>
   868c2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   868c4:	42a3      	cmp	r3, r4
   868c6:	f4bf ae2d 	bcs.w	86524 <_svfprintf_r+0xe04>
   868ca:	2130      	movs	r1, #48	; 0x30
   868cc:	1c5a      	adds	r2, r3, #1
   868ce:	9223      	str	r2, [sp, #140]	; 0x8c
   868d0:	7019      	strb	r1, [r3, #0]
   868d2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   868d4:	429c      	cmp	r4, r3
   868d6:	d8f9      	bhi.n	868cc <_svfprintf_r+0x11ac>
   868d8:	e624      	b.n	86524 <_svfprintf_r+0xe04>
   868da:	aa25      	add	r2, sp, #148	; 0x94
   868dc:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   868e0:	f002 fcea 	bl	892b8 <__ssprint_r>
   868e4:	2800      	cmp	r0, #0
   868e6:	f47e afe6 	bne.w	858b6 <_svfprintf_r+0x196>
   868ea:	e9dd 3426 	ldrd	r3, r4, [sp, #152]	; 0x98
   868ee:	3301      	adds	r3, #1
   868f0:	4656      	mov	r6, sl
   868f2:	9309      	str	r3, [sp, #36]	; 0x24
   868f4:	f10d 09d0 	add.w	r9, sp, #208	; 0xd0
   868f8:	f7ff bbf4 	b.w	860e4 <_svfprintf_r+0x9c4>
   868fc:	aa25      	add	r2, sp, #148	; 0x94
   868fe:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   86902:	f002 fcd9 	bl	892b8 <__ssprint_r>
   86906:	2800      	cmp	r0, #0
   86908:	f47e afd5 	bne.w	858b6 <_svfprintf_r+0x196>
   8690c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   8690e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
   86910:	46d1      	mov	r9, sl
   86912:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   86914:	1ad3      	subs	r3, r2, r3
   86916:	e4bf      	b.n	86298 <_svfprintf_r+0xb78>
   86918:	0008a1c4 	.word	0x0008a1c4
   8691c:	0008a1cc 	.word	0x0008a1cc
   86920:	0008a17c 	.word	0x0008a17c
   86924:	f8df 82dc 	ldr.w	r8, [pc, #732]	; 86c04 <_svfprintf_r+0x14e4>
   86928:	f7ff bb84 	b.w	86034 <_svfprintf_r+0x914>
   8692c:	2306      	movs	r3, #6
   8692e:	9309      	str	r3, [sp, #36]	; 0x24
   86930:	e5bd      	b.n	864ae <_svfprintf_r+0xd8e>
   86932:	2003      	movs	r0, #3
   86934:	9c09      	ldr	r4, [sp, #36]	; 0x24
   86936:	a923      	add	r1, sp, #140	; 0x8c
   86938:	e9cd 0400 	strd	r0, r4, [sp]
   8693c:	9104      	str	r1, [sp, #16]
   8693e:	a820      	add	r0, sp, #128	; 0x80
   86940:	a91f      	add	r1, sp, #124	; 0x7c
   86942:	e9cd 1002 	strd	r1, r0, [sp, #8]
   86946:	4632      	mov	r2, r6
   86948:	462b      	mov	r3, r5
   8694a:	980d      	ldr	r0, [sp, #52]	; 0x34
   8694c:	f000 fa2a 	bl	86da4 <_dtoa_r>
   86950:	940e      	str	r4, [sp, #56]	; 0x38
   86952:	9011      	str	r0, [sp, #68]	; 0x44
   86954:	1904      	adds	r4, r0, r4
   86956:	e739      	b.n	867cc <_svfprintf_r+0x10ac>
   86958:	2300      	movs	r3, #0
   8695a:	9309      	str	r3, [sp, #36]	; 0x24
   8695c:	f7fe bf3c 	b.w	857d8 <_svfprintf_r+0xb8>
   86960:	9b09      	ldr	r3, [sp, #36]	; 0x24
   86962:	940f      	str	r4, [sp, #60]	; 0x3c
   86964:	9308      	str	r3, [sp, #32]
   86966:	930e      	str	r3, [sp, #56]	; 0x38
   86968:	9009      	str	r0, [sp, #36]	; 0x24
   8696a:	f8cd 801c 	str.w	r8, [sp, #28]
   8696e:	9012      	str	r0, [sp, #72]	; 0x48
   86970:	f89d 6077 	ldrb.w	r6, [sp, #119]	; 0x77
   86974:	f7ff b833 	b.w	859de <_svfprintf_r+0x2be>
   86978:	aa25      	add	r2, sp, #148	; 0x94
   8697a:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   8697e:	f002 fc9b 	bl	892b8 <__ssprint_r>
   86982:	2800      	cmp	r0, #0
   86984:	f47e af97 	bne.w	858b6 <_svfprintf_r+0x196>
   86988:	e9dd 2426 	ldrd	r2, r4, [sp, #152]	; 0x98
   8698c:	46d1      	mov	r9, sl
   8698e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
   86990:	f7ff bbee 	b.w	86170 <_svfprintf_r+0xa50>
   86994:	9a19      	ldr	r2, [sp, #100]	; 0x64
   86996:	9b13      	ldr	r3, [sp, #76]	; 0x4c
   86998:	4413      	add	r3, r2
   8699a:	9a12      	ldr	r2, [sp, #72]	; 0x48
   8699c:	930e      	str	r3, [sp, #56]	; 0x38
   8699e:	2a00      	cmp	r2, #0
   869a0:	dc06      	bgt.n	869b0 <_svfprintf_r+0x1290>
   869a2:	9b12      	ldr	r3, [sp, #72]	; 0x48
   869a4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
   869a6:	f1c3 0301 	rsb	r3, r3, #1
   869aa:	441a      	add	r2, r3
   869ac:	4613      	mov	r3, r2
   869ae:	920e      	str	r2, [sp, #56]	; 0x38
   869b0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   869b4:	9308      	str	r3, [sp, #32]
   869b6:	2767      	movs	r7, #103	; 0x67
   869b8:	e5cf      	b.n	8655a <_svfprintf_r+0xe3a>
   869ba:	2003      	movs	r0, #3
   869bc:	9c09      	ldr	r4, [sp, #36]	; 0x24
   869be:	a923      	add	r1, sp, #140	; 0x8c
   869c0:	e9cd 0400 	strd	r0, r4, [sp]
   869c4:	9104      	str	r1, [sp, #16]
   869c6:	a820      	add	r0, sp, #128	; 0x80
   869c8:	a91f      	add	r1, sp, #124	; 0x7c
   869ca:	e9cd 1002 	strd	r1, r0, [sp, #8]
   869ce:	4632      	mov	r2, r6
   869d0:	462b      	mov	r3, r5
   869d2:	980d      	ldr	r0, [sp, #52]	; 0x34
   869d4:	f000 f9e6 	bl	86da4 <_dtoa_r>
   869d8:	940e      	str	r4, [sp, #56]	; 0x38
   869da:	9011      	str	r0, [sp, #68]	; 0x44
   869dc:	e6ef      	b.n	867be <_svfprintf_r+0x109e>
   869de:	aa25      	add	r2, sp, #148	; 0x94
   869e0:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   869e4:	f002 fc68 	bl	892b8 <__ssprint_r>
   869e8:	2800      	cmp	r0, #0
   869ea:	f47e af64 	bne.w	858b6 <_svfprintf_r+0x196>
   869ee:	46d1      	mov	r9, sl
   869f0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
   869f2:	e42f      	b.n	86254 <_svfprintf_r+0xb34>
   869f4:	425d      	negs	r5, r3
   869f6:	3310      	adds	r3, #16
   869f8:	f280 80d1 	bge.w	86b9e <_svfprintf_r+0x147e>
   869fc:	f8df 8204 	ldr.w	r8, [pc, #516]	; 86c04 <_svfprintf_r+0x14e4>
   86a00:	4623      	mov	r3, r4
   86a02:	2610      	movs	r6, #16
   86a04:	9f0d      	ldr	r7, [sp, #52]	; 0x34
   86a06:	4644      	mov	r4, r8
   86a08:	e004      	b.n	86a14 <_svfprintf_r+0x12f4>
   86a0a:	f109 0908 	add.w	r9, r9, #8
   86a0e:	3d10      	subs	r5, #16
   86a10:	2d10      	cmp	r5, #16
   86a12:	dd58      	ble.n	86ac6 <_svfprintf_r+0x13a6>
   86a14:	3201      	adds	r2, #1
   86a16:	3310      	adds	r3, #16
   86a18:	2a07      	cmp	r2, #7
   86a1a:	e9cd 2326 	strd	r2, r3, [sp, #152]	; 0x98
   86a1e:	e9c9 4600 	strd	r4, r6, [r9]
   86a22:	ddf2      	ble.n	86a0a <_svfprintf_r+0x12ea>
   86a24:	aa25      	add	r2, sp, #148	; 0x94
   86a26:	990c      	ldr	r1, [sp, #48]	; 0x30
   86a28:	4638      	mov	r0, r7
   86a2a:	f002 fc45 	bl	892b8 <__ssprint_r>
   86a2e:	2800      	cmp	r0, #0
   86a30:	f47e af41 	bne.w	858b6 <_svfprintf_r+0x196>
   86a34:	e9dd 2326 	ldrd	r2, r3, [sp, #152]	; 0x98
   86a38:	46d1      	mov	r9, sl
   86a3a:	e7e8      	b.n	86a0e <_svfprintf_r+0x12ee>
   86a3c:	f10d 0093 	add.w	r0, sp, #147	; 0x93
   86a40:	4601      	mov	r1, r0
   86a42:	4c6d      	ldr	r4, [pc, #436]	; (86bf8 <_svfprintf_r+0x14d8>)
   86a44:	e000      	b.n	86a48 <_svfprintf_r+0x1328>
   86a46:	4611      	mov	r1, r2
   86a48:	fba4 2503 	umull	r2, r5, r4, r3
   86a4c:	08ed      	lsrs	r5, r5, #3
   86a4e:	eb05 0285 	add.w	r2, r5, r5, lsl #2
   86a52:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
   86a56:	3230      	adds	r2, #48	; 0x30
   86a58:	2d09      	cmp	r5, #9
   86a5a:	f801 2c01 	strb.w	r2, [r1, #-1]
   86a5e:	462b      	mov	r3, r5
   86a60:	f101 32ff 	add.w	r2, r1, #4294967295	; 0xffffffff
   86a64:	dcef      	bgt.n	86a46 <_svfprintf_r+0x1326>
   86a66:	3330      	adds	r3, #48	; 0x30
   86a68:	3902      	subs	r1, #2
   86a6a:	b2dc      	uxtb	r4, r3
   86a6c:	4288      	cmp	r0, r1
   86a6e:	f802 4c01 	strb.w	r4, [r2, #-1]
   86a72:	f240 8097 	bls.w	86ba4 <_svfprintf_r+0x1484>
   86a76:	f10d 0186 	add.w	r1, sp, #134	; 0x86
   86a7a:	4613      	mov	r3, r2
   86a7c:	e001      	b.n	86a82 <_svfprintf_r+0x1362>
   86a7e:	f813 4b01 	ldrb.w	r4, [r3], #1
   86a82:	4298      	cmp	r0, r3
   86a84:	f801 4b01 	strb.w	r4, [r1], #1
   86a88:	d1f9      	bne.n	86a7e <_svfprintf_r+0x135e>
   86a8a:	ab25      	add	r3, sp, #148	; 0x94
   86a8c:	1a9b      	subs	r3, r3, r2
   86a8e:	f10d 0286 	add.w	r2, sp, #134	; 0x86
   86a92:	4413      	add	r3, r2
   86a94:	e6cc      	b.n	86830 <_svfprintf_r+0x1110>
   86a96:	ea23 72e3 	bic.w	r2, r3, r3, asr #31
   86a9a:	9208      	str	r2, [sp, #32]
   86a9c:	930e      	str	r3, [sp, #56]	; 0x38
   86a9e:	2767      	movs	r7, #103	; 0x67
   86aa0:	e55b      	b.n	8655a <_svfprintf_r+0xe3a>
   86aa2:	f8df 8160 	ldr.w	r8, [pc, #352]	; 86c04 <_svfprintf_r+0x14e4>
   86aa6:	e607      	b.n	866b8 <_svfprintf_r+0xf98>
   86aa8:	9a16      	ldr	r2, [sp, #88]	; 0x58
   86aaa:	4630      	mov	r0, r6
   86aac:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   86aae:	4629      	mov	r1, r5
   86ab0:	f7fe f8c0 	bl	84c34 <__aeabi_dcmpeq>
   86ab4:	2800      	cmp	r0, #0
   86ab6:	f47f ae8e 	bne.w	867d6 <_svfprintf_r+0x10b6>
   86aba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   86abc:	f1c3 0301 	rsb	r3, r3, #1
   86ac0:	931f      	str	r3, [sp, #124]	; 0x7c
   86ac2:	441c      	add	r4, r3
   86ac4:	e524      	b.n	86510 <_svfprintf_r+0xdf0>
   86ac6:	46a0      	mov	r8, r4
   86ac8:	461c      	mov	r4, r3
   86aca:	3201      	adds	r2, #1
   86acc:	442c      	add	r4, r5
   86ace:	2a07      	cmp	r2, #7
   86ad0:	e9cd 2426 	strd	r2, r4, [sp, #152]	; 0x98
   86ad4:	e9c9 8500 	strd	r8, r5, [r9]
   86ad8:	dc3c      	bgt.n	86b54 <_svfprintf_r+0x1434>
   86ada:	f109 0908 	add.w	r9, r9, #8
   86ade:	f7ff bb4a 	b.w	86176 <_svfprintf_r+0xa56>
   86ae2:	f018 0301 	ands.w	r3, r8, #1
   86ae6:	9312      	str	r3, [sp, #72]	; 0x48
   86ae8:	f47f aeab 	bne.w	86842 <_svfprintf_r+0x1122>
   86aec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   86aee:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
   86af2:	9308      	str	r3, [sp, #32]
   86af4:	e531      	b.n	8655a <_svfprintf_r+0xe3a>
   86af6:	9b14      	ldr	r3, [sp, #80]	; 0x50
   86af8:	2103      	movs	r1, #3
   86afa:	2b00      	cmp	r3, #0
   86afc:	bfb8      	it	lt
   86afe:	232d      	movlt	r3, #45	; 0x2d
   86b00:	f04f 0000 	mov.w	r0, #0
   86b04:	bfba      	itte	lt
   86b06:	461e      	movlt	r6, r3
   86b08:	f88d 3077 	strblt.w	r3, [sp, #119]	; 0x77
   86b0c:	f89d 6077 	ldrbge.w	r6, [sp, #119]	; 0x77
   86b10:	e9cd 1008 	strd	r1, r0, [sp, #32]
   86b14:	4a39      	ldr	r2, [pc, #228]	; (86bfc <_svfprintf_r+0x14dc>)
   86b16:	4b3a      	ldr	r3, [pc, #232]	; (86c00 <_svfprintf_r+0x14e0>)
   86b18:	f7ff b98f 	b.w	85e3a <_svfprintf_r+0x71a>
   86b1c:	9b12      	ldr	r3, [sp, #72]	; 0x48
   86b1e:	9a19      	ldr	r2, [sp, #100]	; 0x64
   86b20:	4413      	add	r3, r2
   86b22:	9a09      	ldr	r2, [sp, #36]	; 0x24
   86b24:	441a      	add	r2, r3
   86b26:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
   86b2a:	920e      	str	r2, [sp, #56]	; 0x38
   86b2c:	9308      	str	r3, [sp, #32]
   86b2e:	e514      	b.n	8655a <_svfprintf_r+0xe3a>
   86b30:	b96b      	cbnz	r3, 86b4e <_svfprintf_r+0x142e>
   86b32:	f018 0f01 	tst.w	r8, #1
   86b36:	d10a      	bne.n	86b4e <_svfprintf_r+0x142e>
   86b38:	2301      	movs	r3, #1
   86b3a:	9308      	str	r3, [sp, #32]
   86b3c:	930e      	str	r3, [sp, #56]	; 0x38
   86b3e:	e50c      	b.n	8655a <_svfprintf_r+0xe3a>
   86b40:	464a      	mov	r2, r9
   86b42:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 86c04 <_svfprintf_r+0x14e4>
   86b46:	e5f1      	b.n	8672c <_svfprintf_r+0x100c>
   86b48:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 86c04 <_svfprintf_r+0x14e4>
   86b4c:	e5ff      	b.n	8674e <_svfprintf_r+0x102e>
   86b4e:	9b19      	ldr	r3, [sp, #100]	; 0x64
   86b50:	3301      	adds	r3, #1
   86b52:	e7e6      	b.n	86b22 <_svfprintf_r+0x1402>
   86b54:	aa25      	add	r2, sp, #148	; 0x94
   86b56:	e9dd 100c 	ldrd	r1, r0, [sp, #48]	; 0x30
   86b5a:	f002 fbad 	bl	892b8 <__ssprint_r>
   86b5e:	2800      	cmp	r0, #0
   86b60:	f47e aea9 	bne.w	858b6 <_svfprintf_r+0x196>
   86b64:	e9dd 2426 	ldrd	r2, r4, [sp, #152]	; 0x98
   86b68:	46d1      	mov	r9, sl
   86b6a:	f7ff bb04 	b.w	86176 <_svfprintf_r+0xa56>
   86b6e:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
   86b70:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   86b72:	9212      	str	r2, [sp, #72]	; 0x48
   86b74:	9a11      	ldr	r2, [sp, #68]	; 0x44
   86b76:	1a9b      	subs	r3, r3, r2
   86b78:	9313      	str	r3, [sp, #76]	; 0x4c
   86b7a:	e638      	b.n	867ee <_svfprintf_r+0x10ce>
   86b7c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   86b7e:	9a11      	ldr	r2, [sp, #68]	; 0x44
   86b80:	4413      	add	r3, r2
   86b82:	461c      	mov	r4, r3
   86b84:	e4c4      	b.n	86510 <_svfprintf_r+0xdf0>
   86b86:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   86b88:	f89b 3001 	ldrb.w	r3, [fp, #1]
   86b8c:	682c      	ldr	r4, [r5, #0]
   86b8e:	4683      	mov	fp, r0
   86b90:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
   86b94:	1d28      	adds	r0, r5, #4
   86b96:	9409      	str	r4, [sp, #36]	; 0x24
   86b98:	900f      	str	r0, [sp, #60]	; 0x3c
   86b9a:	f7fe be1a 	b.w	857d2 <_svfprintf_r+0xb2>
   86b9e:	f8df 8064 	ldr.w	r8, [pc, #100]	; 86c04 <_svfprintf_r+0x14e4>
   86ba2:	e792      	b.n	86aca <_svfprintf_r+0x13aa>
   86ba4:	f10d 0386 	add.w	r3, sp, #134	; 0x86
   86ba8:	e642      	b.n	86830 <_svfprintf_r+0x1110>
   86baa:	9b09      	ldr	r3, [sp, #36]	; 0x24
   86bac:	930e      	str	r3, [sp, #56]	; 0x38
   86bae:	e5ff      	b.n	867b0 <_svfprintf_r+0x1090>
   86bb0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   86bb4:	f7ff b90f 	b.w	85dd6 <_svfprintf_r+0x6b6>
   86bb8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   86bbc:	230c      	movs	r3, #12
   86bbe:	920a      	str	r2, [sp, #40]	; 0x28
   86bc0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   86bc2:	6013      	str	r3, [r2, #0]
   86bc4:	f7fe be80 	b.w	858c8 <_svfprintf_r+0x1a8>
   86bc8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   86bcc:	f7fe bf39 	b.w	85a42 <_svfprintf_r+0x322>
   86bd0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   86bd4:	f7fe bf0d 	b.w	859f2 <_svfprintf_r+0x2d2>
   86bd8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   86bdc:	f7ff b93a 	b.w	85e54 <_svfprintf_r+0x734>
   86be0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   86be4:	f7ff b8db 	b.w	85d9e <_svfprintf_r+0x67e>
   86be8:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   86bec:	f7ff b970 	b.w	85ed0 <_svfprintf_r+0x7b0>
   86bf0:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
   86bf4:	f7ff b892 	b.w	85d1c <_svfprintf_r+0x5fc>
   86bf8:	cccccccd 	.word	0xcccccccd
   86bfc:	0008a198 	.word	0x0008a198
   86c00:	0008a194 	.word	0x0008a194
   86c04:	0008a17c 	.word	0x0008a17c

00086c08 <__register_exitproc>:
   86c08:	b4f0      	push	{r4, r5, r6, r7}
   86c0a:	4c17      	ldr	r4, [pc, #92]	; (86c68 <__register_exitproc+0x60>)
   86c0c:	6825      	ldr	r5, [r4, #0]
   86c0e:	f8d5 4148 	ldr.w	r4, [r5, #328]	; 0x148
   86c12:	b30c      	cbz	r4, 86c58 <__register_exitproc+0x50>
   86c14:	6865      	ldr	r5, [r4, #4]
   86c16:	2d1f      	cmp	r5, #31
   86c18:	dc23      	bgt.n	86c62 <__register_exitproc+0x5a>
   86c1a:	b938      	cbnz	r0, 86c2c <__register_exitproc+0x24>
   86c1c:	2000      	movs	r0, #0
   86c1e:	1c6b      	adds	r3, r5, #1
   86c20:	3502      	adds	r5, #2
   86c22:	6063      	str	r3, [r4, #4]
   86c24:	f844 1025 	str.w	r1, [r4, r5, lsl #2]
   86c28:	bcf0      	pop	{r4, r5, r6, r7}
   86c2a:	4770      	bx	lr
   86c2c:	2601      	movs	r6, #1
   86c2e:	eb04 0c85 	add.w	ip, r4, r5, lsl #2
   86c32:	f8cc 2088 	str.w	r2, [ip, #136]	; 0x88
   86c36:	f8d4 7188 	ldr.w	r7, [r4, #392]	; 0x188
   86c3a:	fa06 f205 	lsl.w	r2, r6, r5
   86c3e:	4317      	orrs	r7, r2
   86c40:	2802      	cmp	r0, #2
   86c42:	f8c4 7188 	str.w	r7, [r4, #392]	; 0x188
   86c46:	f8cc 3108 	str.w	r3, [ip, #264]	; 0x108
   86c4a:	d1e7      	bne.n	86c1c <__register_exitproc+0x14>
   86c4c:	f8d4 318c 	ldr.w	r3, [r4, #396]	; 0x18c
   86c50:	431a      	orrs	r2, r3
   86c52:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
   86c56:	e7e1      	b.n	86c1c <__register_exitproc+0x14>
   86c58:	f505 74a6 	add.w	r4, r5, #332	; 0x14c
   86c5c:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
   86c60:	e7d8      	b.n	86c14 <__register_exitproc+0xc>
   86c62:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   86c66:	e7df      	b.n	86c28 <__register_exitproc+0x20>
   86c68:	0008a168 	.word	0x0008a168

00086c6c <register_fini>:
   86c6c:	4b02      	ldr	r3, [pc, #8]	; (86c78 <register_fini+0xc>)
   86c6e:	b113      	cbz	r3, 86c76 <register_fini+0xa>
   86c70:	4802      	ldr	r0, [pc, #8]	; (86c7c <register_fini+0x10>)
   86c72:	f7fe bc59 	b.w	85528 <atexit>
   86c76:	4770      	bx	lr
   86c78:	00000000 	.word	0x00000000
   86c7c:	00085535 	.word	0x00085535

00086c80 <quorem>:
   86c80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   86c84:	6903      	ldr	r3, [r0, #16]
   86c86:	690e      	ldr	r6, [r1, #16]
   86c88:	b083      	sub	sp, #12
   86c8a:	42b3      	cmp	r3, r6
   86c8c:	f2c0 8086 	blt.w	86d9c <quorem+0x11c>
   86c90:	3e01      	subs	r6, #1
   86c92:	f101 0814 	add.w	r8, r1, #20
   86c96:	f100 0914 	add.w	r9, r0, #20
   86c9a:	f858 3026 	ldr.w	r3, [r8, r6, lsl #2]
   86c9e:	f859 7026 	ldr.w	r7, [r9, r6, lsl #2]
   86ca2:	3301      	adds	r3, #1
   86ca4:	fbb7 f7f3 	udiv	r7, r7, r3
   86ca8:	00b3      	lsls	r3, r6, #2
   86caa:	9300      	str	r3, [sp, #0]
   86cac:	eb08 0a03 	add.w	sl, r8, r3
   86cb0:	444b      	add	r3, r9
   86cb2:	9301      	str	r3, [sp, #4]
   86cb4:	2f00      	cmp	r7, #0
   86cb6:	d03b      	beq.n	86d30 <quorem+0xb0>
   86cb8:	2300      	movs	r3, #0
   86cba:	46c6      	mov	lr, r8
   86cbc:	461c      	mov	r4, r3
   86cbe:	46cc      	mov	ip, r9
   86cc0:	f85e 2b04 	ldr.w	r2, [lr], #4
   86cc4:	f8dc 5000 	ldr.w	r5, [ip]
   86cc8:	fa1f fb82 	uxth.w	fp, r2
   86ccc:	fb07 330b 	mla	r3, r7, fp, r3
   86cd0:	0c12      	lsrs	r2, r2, #16
   86cd2:	ea4f 4b13 	mov.w	fp, r3, lsr #16
   86cd6:	fb07 bb02 	mla	fp, r7, r2, fp
   86cda:	b29a      	uxth	r2, r3
   86cdc:	1aa2      	subs	r2, r4, r2
   86cde:	b2ab      	uxth	r3, r5
   86ce0:	fa1f f48b 	uxth.w	r4, fp
   86ce4:	441a      	add	r2, r3
   86ce6:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
   86cea:	eb04 4422 	add.w	r4, r4, r2, asr #16
   86cee:	b292      	uxth	r2, r2
   86cf0:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
   86cf4:	45f2      	cmp	sl, lr
   86cf6:	f84c 2b04 	str.w	r2, [ip], #4
   86cfa:	ea4f 4424 	mov.w	r4, r4, asr #16
   86cfe:	ea4f 431b 	mov.w	r3, fp, lsr #16
   86d02:	d2dd      	bcs.n	86cc0 <quorem+0x40>
   86d04:	9b00      	ldr	r3, [sp, #0]
   86d06:	f859 3003 	ldr.w	r3, [r9, r3]
   86d0a:	b98b      	cbnz	r3, 86d30 <quorem+0xb0>
   86d0c:	9a01      	ldr	r2, [sp, #4]
   86d0e:	1f13      	subs	r3, r2, #4
   86d10:	4599      	cmp	r9, r3
   86d12:	d20c      	bcs.n	86d2e <quorem+0xae>
   86d14:	f852 3c04 	ldr.w	r3, [r2, #-4]
   86d18:	b94b      	cbnz	r3, 86d2e <quorem+0xae>
   86d1a:	f1a2 0308 	sub.w	r3, r2, #8
   86d1e:	e002      	b.n	86d26 <quorem+0xa6>
   86d20:	681a      	ldr	r2, [r3, #0]
   86d22:	3b04      	subs	r3, #4
   86d24:	b91a      	cbnz	r2, 86d2e <quorem+0xae>
   86d26:	4599      	cmp	r9, r3
   86d28:	f106 36ff 	add.w	r6, r6, #4294967295	; 0xffffffff
   86d2c:	d3f8      	bcc.n	86d20 <quorem+0xa0>
   86d2e:	6106      	str	r6, [r0, #16]
   86d30:	4604      	mov	r4, r0
   86d32:	f001 fee9 	bl	88b08 <__mcmp>
   86d36:	2800      	cmp	r0, #0
   86d38:	db2c      	blt.n	86d94 <quorem+0x114>
   86d3a:	464d      	mov	r5, r9
   86d3c:	2300      	movs	r3, #0
   86d3e:	3701      	adds	r7, #1
   86d40:	f858 1b04 	ldr.w	r1, [r8], #4
   86d44:	6828      	ldr	r0, [r5, #0]
   86d46:	b28a      	uxth	r2, r1
   86d48:	1a9a      	subs	r2, r3, r2
   86d4a:	0c0b      	lsrs	r3, r1, #16
   86d4c:	b281      	uxth	r1, r0
   86d4e:	440a      	add	r2, r1
   86d50:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
   86d54:	eb03 4322 	add.w	r3, r3, r2, asr #16
   86d58:	b292      	uxth	r2, r2
   86d5a:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
   86d5e:	45c2      	cmp	sl, r8
   86d60:	f845 2b04 	str.w	r2, [r5], #4
   86d64:	ea4f 4323 	mov.w	r3, r3, asr #16
   86d68:	d2ea      	bcs.n	86d40 <quorem+0xc0>
   86d6a:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
   86d6e:	eb09 0386 	add.w	r3, r9, r6, lsl #2
   86d72:	b97a      	cbnz	r2, 86d94 <quorem+0x114>
   86d74:	1f1a      	subs	r2, r3, #4
   86d76:	4591      	cmp	r9, r2
   86d78:	d20b      	bcs.n	86d92 <quorem+0x112>
   86d7a:	f853 2c04 	ldr.w	r2, [r3, #-4]
   86d7e:	b942      	cbnz	r2, 86d92 <quorem+0x112>
   86d80:	3b08      	subs	r3, #8
   86d82:	e002      	b.n	86d8a <quorem+0x10a>
   86d84:	681a      	ldr	r2, [r3, #0]
   86d86:	3b04      	subs	r3, #4
   86d88:	b91a      	cbnz	r2, 86d92 <quorem+0x112>
   86d8a:	4599      	cmp	r9, r3
   86d8c:	f106 36ff 	add.w	r6, r6, #4294967295	; 0xffffffff
   86d90:	d3f8      	bcc.n	86d84 <quorem+0x104>
   86d92:	6126      	str	r6, [r4, #16]
   86d94:	4638      	mov	r0, r7
   86d96:	b003      	add	sp, #12
   86d98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86d9c:	2000      	movs	r0, #0
   86d9e:	b003      	add	sp, #12
   86da0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00086da4 <_dtoa_r>:
   86da4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   86da8:	461f      	mov	r7, r3
   86daa:	4616      	mov	r6, r2
   86dac:	6c03      	ldr	r3, [r0, #64]	; 0x40
   86dae:	b099      	sub	sp, #100	; 0x64
   86db0:	4604      	mov	r4, r0
   86db2:	e9cd 6702 	strd	r6, r7, [sp, #8]
   86db6:	b14b      	cbz	r3, 86dcc <_dtoa_r+0x28>
   86db8:	2201      	movs	r2, #1
   86dba:	6c45      	ldr	r5, [r0, #68]	; 0x44
   86dbc:	4619      	mov	r1, r3
   86dbe:	40aa      	lsls	r2, r5
   86dc0:	e9c3 5201 	strd	r5, r2, [r3, #4]
   86dc4:	f001 fc5e 	bl	88684 <_Bfree>
   86dc8:	2300      	movs	r3, #0
   86dca:	6423      	str	r3, [r4, #64]	; 0x40
   86dcc:	1e3e      	subs	r6, r7, #0
   86dce:	bfb4      	ite	lt
   86dd0:	2301      	movlt	r3, #1
   86dd2:	2300      	movge	r3, #0
   86dd4:	9a25      	ldr	r2, [sp, #148]	; 0x94
   86dd6:	bfb8      	it	lt
   86dd8:	f026 4600 	biclt.w	r6, r6, #2147483648	; 0x80000000
   86ddc:	6013      	str	r3, [r2, #0]
   86dde:	4b74      	ldr	r3, [pc, #464]	; (86fb0 <_dtoa_r+0x20c>)
   86de0:	bfb8      	it	lt
   86de2:	9603      	strlt	r6, [sp, #12]
   86de4:	43b3      	bics	r3, r6
   86de6:	f000 80a3 	beq.w	86f30 <_dtoa_r+0x18c>
   86dea:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
   86dee:	2200      	movs	r2, #0
   86df0:	2300      	movs	r3, #0
   86df2:	4640      	mov	r0, r8
   86df4:	4649      	mov	r1, r9
   86df6:	f7fd ff1d 	bl	84c34 <__aeabi_dcmpeq>
   86dfa:	4607      	mov	r7, r0
   86dfc:	b178      	cbz	r0, 86e1e <_dtoa_r+0x7a>
   86dfe:	2301      	movs	r3, #1
   86e00:	9a24      	ldr	r2, [sp, #144]	; 0x90
   86e02:	6013      	str	r3, [r2, #0]
   86e04:	9b26      	ldr	r3, [sp, #152]	; 0x98
   86e06:	2b00      	cmp	r3, #0
   86e08:	f000 80bf 	beq.w	86f8a <_dtoa_r+0x1e6>
   86e0c:	4b69      	ldr	r3, [pc, #420]	; (86fb4 <_dtoa_r+0x210>)
   86e0e:	9a26      	ldr	r2, [sp, #152]	; 0x98
   86e10:	f103 39ff 	add.w	r9, r3, #4294967295	; 0xffffffff
   86e14:	6013      	str	r3, [r2, #0]
   86e16:	4648      	mov	r0, r9
   86e18:	b019      	add	sp, #100	; 0x64
   86e1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86e1e:	aa16      	add	r2, sp, #88	; 0x58
   86e20:	ab17      	add	r3, sp, #92	; 0x5c
   86e22:	e9cd 3200 	strd	r3, r2, [sp]
   86e26:	4620      	mov	r0, r4
   86e28:	4642      	mov	r2, r8
   86e2a:	464b      	mov	r3, r9
   86e2c:	f001 ff8a 	bl	88d44 <__d2b>
   86e30:	0d35      	lsrs	r5, r6, #20
   86e32:	4683      	mov	fp, r0
   86e34:	f040 809c 	bne.w	86f70 <_dtoa_r+0x1cc>
   86e38:	e9dd 8516 	ldrd	r8, r5, [sp, #88]	; 0x58
   86e3c:	4445      	add	r5, r8
   86e3e:	f205 4332 	addw	r3, r5, #1074	; 0x432
   86e42:	2b20      	cmp	r3, #32
   86e44:	f340 842f 	ble.w	876a6 <_dtoa_r+0x902>
   86e48:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
   86e4c:	409e      	lsls	r6, r3
   86e4e:	9b02      	ldr	r3, [sp, #8]
   86e50:	f205 4012 	addw	r0, r5, #1042	; 0x412
   86e54:	fa23 f000 	lsr.w	r0, r3, r0
   86e58:	4330      	orrs	r0, r6
   86e5a:	f7fd fc09 	bl	84670 <__aeabi_ui2d>
   86e5e:	2201      	movs	r2, #1
   86e60:	3d01      	subs	r5, #1
   86e62:	920a      	str	r2, [sp, #40]	; 0x28
   86e64:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   86e68:	2200      	movs	r2, #0
   86e6a:	4b53      	ldr	r3, [pc, #332]	; (86fb8 <_dtoa_r+0x214>)
   86e6c:	f7fd fac2 	bl	843f4 <__aeabi_dsub>
   86e70:	a349      	add	r3, pc, #292	; (adr r3, 86f98 <_dtoa_r+0x1f4>)
   86e72:	e9d3 2300 	ldrd	r2, r3, [r3]
   86e76:	f7fd fc75 	bl	84764 <__aeabi_dmul>
   86e7a:	a349      	add	r3, pc, #292	; (adr r3, 86fa0 <_dtoa_r+0x1fc>)
   86e7c:	e9d3 2300 	ldrd	r2, r3, [r3]
   86e80:	f7fd faba 	bl	843f8 <__adddf3>
   86e84:	4606      	mov	r6, r0
   86e86:	4628      	mov	r0, r5
   86e88:	460f      	mov	r7, r1
   86e8a:	f7fd fc01 	bl	84690 <__aeabi_i2d>
   86e8e:	a346      	add	r3, pc, #280	; (adr r3, 86fa8 <_dtoa_r+0x204>)
   86e90:	e9d3 2300 	ldrd	r2, r3, [r3]
   86e94:	f7fd fc66 	bl	84764 <__aeabi_dmul>
   86e98:	4602      	mov	r2, r0
   86e9a:	460b      	mov	r3, r1
   86e9c:	4630      	mov	r0, r6
   86e9e:	4639      	mov	r1, r7
   86ea0:	f7fd faaa 	bl	843f8 <__adddf3>
   86ea4:	4606      	mov	r6, r0
   86ea6:	460f      	mov	r7, r1
   86ea8:	f7fd fef6 	bl	84c98 <__aeabi_d2iz>
   86eac:	2200      	movs	r2, #0
   86eae:	9005      	str	r0, [sp, #20]
   86eb0:	2300      	movs	r3, #0
   86eb2:	4630      	mov	r0, r6
   86eb4:	4639      	mov	r1, r7
   86eb6:	f7fd fec7 	bl	84c48 <__aeabi_dcmplt>
   86eba:	2800      	cmp	r0, #0
   86ebc:	f040 8275 	bne.w	873aa <_dtoa_r+0x606>
   86ec0:	9e05      	ldr	r6, [sp, #20]
   86ec2:	2e16      	cmp	r6, #22
   86ec4:	f200 825f 	bhi.w	87386 <_dtoa_r+0x5e2>
   86ec8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   86ecc:	493b      	ldr	r1, [pc, #236]	; (86fbc <_dtoa_r+0x218>)
   86ece:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
   86ed2:	e9d1 0100 	ldrd	r0, r1, [r1]
   86ed6:	f7fd fed5 	bl	84c84 <__aeabi_dcmpgt>
   86eda:	2800      	cmp	r0, #0
   86edc:	f000 83df 	beq.w	8769e <_dtoa_r+0x8fa>
   86ee0:	1e73      	subs	r3, r6, #1
   86ee2:	9305      	str	r3, [sp, #20]
   86ee4:	2300      	movs	r3, #0
   86ee6:	930d      	str	r3, [sp, #52]	; 0x34
   86ee8:	eba8 0505 	sub.w	r5, r8, r5
   86eec:	f1b5 0a01 	subs.w	sl, r5, #1
   86ef0:	f100 8255 	bmi.w	8739e <_dtoa_r+0x5fa>
   86ef4:	2300      	movs	r3, #0
   86ef6:	9306      	str	r3, [sp, #24]
   86ef8:	9b05      	ldr	r3, [sp, #20]
   86efa:	2b00      	cmp	r3, #0
   86efc:	f2c0 8246 	blt.w	8738c <_dtoa_r+0x5e8>
   86f00:	449a      	add	sl, r3
   86f02:	930c      	str	r3, [sp, #48]	; 0x30
   86f04:	2300      	movs	r3, #0
   86f06:	930b      	str	r3, [sp, #44]	; 0x2c
   86f08:	9b22      	ldr	r3, [sp, #136]	; 0x88
   86f0a:	2b09      	cmp	r3, #9
   86f0c:	d85e      	bhi.n	86fcc <_dtoa_r+0x228>
   86f0e:	2b05      	cmp	r3, #5
   86f10:	f340 83c7 	ble.w	876a2 <_dtoa_r+0x8fe>
   86f14:	2600      	movs	r6, #0
   86f16:	3b04      	subs	r3, #4
   86f18:	9322      	str	r3, [sp, #136]	; 0x88
   86f1a:	9b22      	ldr	r3, [sp, #136]	; 0x88
   86f1c:	3b02      	subs	r3, #2
   86f1e:	2b03      	cmp	r3, #3
   86f20:	f200 849f 	bhi.w	87862 <_dtoa_r+0xabe>
   86f24:	e8df f013 	tbh	[pc, r3, lsl #1]
   86f28:	03c603e4 	.word	0x03c603e4
   86f2c:	04fa03ee 	.word	0x04fa03ee
   86f30:	f242 730f 	movw	r3, #9999	; 0x270f
   86f34:	9a24      	ldr	r2, [sp, #144]	; 0x90
   86f36:	6013      	str	r3, [r2, #0]
   86f38:	9b02      	ldr	r3, [sp, #8]
   86f3a:	b983      	cbnz	r3, 86f5e <_dtoa_r+0x1ba>
   86f3c:	f3c6 0613 	ubfx	r6, r6, #0, #20
   86f40:	b96e      	cbnz	r6, 86f5e <_dtoa_r+0x1ba>
   86f42:	9b26      	ldr	r3, [sp, #152]	; 0x98
   86f44:	f8df 9078 	ldr.w	r9, [pc, #120]	; 86fc0 <_dtoa_r+0x21c>
   86f48:	2b00      	cmp	r3, #0
   86f4a:	f43f af64 	beq.w	86e16 <_dtoa_r+0x72>
   86f4e:	f109 0308 	add.w	r3, r9, #8
   86f52:	4648      	mov	r0, r9
   86f54:	9a26      	ldr	r2, [sp, #152]	; 0x98
   86f56:	6013      	str	r3, [r2, #0]
   86f58:	b019      	add	sp, #100	; 0x64
   86f5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86f5e:	9b26      	ldr	r3, [sp, #152]	; 0x98
   86f60:	f8df 9060 	ldr.w	r9, [pc, #96]	; 86fc4 <_dtoa_r+0x220>
   86f64:	2b00      	cmp	r3, #0
   86f66:	f43f af56 	beq.w	86e16 <_dtoa_r+0x72>
   86f6a:	f109 0303 	add.w	r3, r9, #3
   86f6e:	e7f0      	b.n	86f52 <_dtoa_r+0x1ae>
   86f70:	f3c9 0313 	ubfx	r3, r9, #0, #20
   86f74:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
   86f78:	4640      	mov	r0, r8
   86f7a:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
   86f7e:	970a      	str	r7, [sp, #40]	; 0x28
   86f80:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   86f84:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
   86f88:	e76e      	b.n	86e68 <_dtoa_r+0xc4>
   86f8a:	f8df 903c 	ldr.w	r9, [pc, #60]	; 86fc8 <_dtoa_r+0x224>
   86f8e:	4648      	mov	r0, r9
   86f90:	b019      	add	sp, #100	; 0x64
   86f92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   86f96:	bf00      	nop
   86f98:	636f4361 	.word	0x636f4361
   86f9c:	3fd287a7 	.word	0x3fd287a7
   86fa0:	8b60c8b3 	.word	0x8b60c8b3
   86fa4:	3fc68a28 	.word	0x3fc68a28
   86fa8:	509f79fb 	.word	0x509f79fb
   86fac:	3fd34413 	.word	0x3fd34413
   86fb0:	7ff00000 	.word	0x7ff00000
   86fb4:	0008a1cd 	.word	0x0008a1cd
   86fb8:	3ff80000 	.word	0x3ff80000
   86fbc:	0008a200 	.word	0x0008a200
   86fc0:	0008a1d0 	.word	0x0008a1d0
   86fc4:	0008a1dc 	.word	0x0008a1dc
   86fc8:	0008a1cc 	.word	0x0008a1cc
   86fcc:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
   86fd0:	2601      	movs	r6, #1
   86fd2:	2300      	movs	r3, #0
   86fd4:	e9cd 5608 	strd	r5, r6, [sp, #32]
   86fd8:	9322      	str	r3, [sp, #136]	; 0x88
   86fda:	9323      	str	r3, [sp, #140]	; 0x8c
   86fdc:	2100      	movs	r1, #0
   86fde:	9514      	str	r5, [sp, #80]	; 0x50
   86fe0:	6461      	str	r1, [r4, #68]	; 0x44
   86fe2:	4620      	mov	r0, r4
   86fe4:	f001 fb28 	bl	88638 <_Balloc>
   86fe8:	2d0e      	cmp	r5, #14
   86fea:	4681      	mov	r9, r0
   86fec:	6420      	str	r0, [r4, #64]	; 0x40
   86fee:	f200 80fe 	bhi.w	871ee <_dtoa_r+0x44a>
   86ff2:	2e00      	cmp	r6, #0
   86ff4:	f000 80fb 	beq.w	871ee <_dtoa_r+0x44a>
   86ff8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   86ffc:	4616      	mov	r6, r2
   86ffe:	461f      	mov	r7, r3
   87000:	9905      	ldr	r1, [sp, #20]
   87002:	e9cd 670e 	strd	r6, r7, [sp, #56]	; 0x38
   87006:	2900      	cmp	r1, #0
   87008:	f340 83e9 	ble.w	877de <_dtoa_r+0xa3a>
   8700c:	4b9b      	ldr	r3, [pc, #620]	; (8727c <_dtoa_r+0x4d8>)
   8700e:	f001 020f 	and.w	r2, r1, #15
   87012:	110d      	asrs	r5, r1, #4
   87014:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   87018:	e9d3 1200 	ldrd	r1, r2, [r3]
   8701c:	e9cd 1202 	strd	r1, r2, [sp, #8]
   87020:	06ea      	lsls	r2, r5, #27
   87022:	f140 84a0 	bpl.w	87966 <_dtoa_r+0xbc2>
   87026:	4b96      	ldr	r3, [pc, #600]	; (87280 <_dtoa_r+0x4dc>)
   87028:	4639      	mov	r1, r7
   8702a:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   8702e:	4630      	mov	r0, r6
   87030:	f7fd fcc2 	bl	849b8 <__aeabi_ddiv>
   87034:	2703      	movs	r7, #3
   87036:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   8703a:	f005 050f 	and.w	r5, r5, #15
   8703e:	b17d      	cbz	r5, 87060 <_dtoa_r+0x2bc>
   87040:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   87044:	4e8e      	ldr	r6, [pc, #568]	; (87280 <_dtoa_r+0x4dc>)
   87046:	07eb      	lsls	r3, r5, #31
   87048:	d504      	bpl.n	87054 <_dtoa_r+0x2b0>
   8704a:	e9d6 2300 	ldrd	r2, r3, [r6]
   8704e:	f7fd fb89 	bl	84764 <__aeabi_dmul>
   87052:	3701      	adds	r7, #1
   87054:	106d      	asrs	r5, r5, #1
   87056:	f106 0608 	add.w	r6, r6, #8
   8705a:	d1f4      	bne.n	87046 <_dtoa_r+0x2a2>
   8705c:	e9cd 0102 	strd	r0, r1, [sp, #8]
   87060:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   87064:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   87068:	f7fd fca6 	bl	849b8 <__aeabi_ddiv>
   8706c:	e9cd 0102 	strd	r0, r1, [sp, #8]
   87070:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   87072:	b143      	cbz	r3, 87086 <_dtoa_r+0x2e2>
   87074:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   87078:	2200      	movs	r2, #0
   8707a:	4b82      	ldr	r3, [pc, #520]	; (87284 <_dtoa_r+0x4e0>)
   8707c:	f7fd fde4 	bl	84c48 <__aeabi_dcmplt>
   87080:	2800      	cmp	r0, #0
   87082:	f040 8509 	bne.w	87a98 <_dtoa_r+0xcf4>
   87086:	4638      	mov	r0, r7
   87088:	f7fd fb02 	bl	84690 <__aeabi_i2d>
   8708c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   87090:	f7fd fb68 	bl	84764 <__aeabi_dmul>
   87094:	4b7c      	ldr	r3, [pc, #496]	; (87288 <_dtoa_r+0x4e4>)
   87096:	2200      	movs	r2, #0
   87098:	f7fd f9ae 	bl	843f8 <__adddf3>
   8709c:	9b08      	ldr	r3, [sp, #32]
   8709e:	4605      	mov	r5, r0
   870a0:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   870a4:	2b00      	cmp	r3, #0
   870a6:	f000 841e 	beq.w	878e6 <_dtoa_r+0xb42>
   870aa:	9b05      	ldr	r3, [sp, #20]
   870ac:	9315      	str	r3, [sp, #84]	; 0x54
   870ae:	9b08      	ldr	r3, [sp, #32]
   870b0:	9310      	str	r3, [sp, #64]	; 0x40
   870b2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   870b6:	f7fd fdef 	bl	84c98 <__aeabi_d2iz>
   870ba:	9a10      	ldr	r2, [sp, #64]	; 0x40
   870bc:	4b6f      	ldr	r3, [pc, #444]	; (8727c <_dtoa_r+0x4d8>)
   870be:	f100 0830 	add.w	r8, r0, #48	; 0x30
   870c2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   870c6:	e953 1202 	ldrd	r1, r2, [r3, #-8]
   870ca:	e9cd 1212 	strd	r1, r2, [sp, #72]	; 0x48
   870ce:	f7fd fadf 	bl	84690 <__aeabi_i2d>
   870d2:	460b      	mov	r3, r1
   870d4:	4602      	mov	r2, r0
   870d6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   870da:	e9cd 5602 	strd	r5, r6, [sp, #8]
   870de:	f7fd f989 	bl	843f4 <__aeabi_dsub>
   870e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
   870e4:	fa5f f888 	uxtb.w	r8, r8
   870e8:	4606      	mov	r6, r0
   870ea:	460f      	mov	r7, r1
   870ec:	f109 0501 	add.w	r5, r9, #1
   870f0:	2b00      	cmp	r3, #0
   870f2:	f000 8463 	beq.w	879bc <_dtoa_r+0xc18>
   870f6:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
   870fa:	2000      	movs	r0, #0
   870fc:	4963      	ldr	r1, [pc, #396]	; (8728c <_dtoa_r+0x4e8>)
   870fe:	f7fd fc5b 	bl	849b8 <__aeabi_ddiv>
   87102:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   87106:	f7fd f975 	bl	843f4 <__aeabi_dsub>
   8710a:	f889 8000 	strb.w	r8, [r9]
   8710e:	4632      	mov	r2, r6
   87110:	463b      	mov	r3, r7
   87112:	e9cd 0102 	strd	r0, r1, [sp, #8]
   87116:	f7fd fdb5 	bl	84c84 <__aeabi_dcmpgt>
   8711a:	2800      	cmp	r0, #0
   8711c:	f040 850e 	bne.w	87b3c <_dtoa_r+0xd98>
   87120:	4632      	mov	r2, r6
   87122:	463b      	mov	r3, r7
   87124:	2000      	movs	r0, #0
   87126:	4957      	ldr	r1, [pc, #348]	; (87284 <_dtoa_r+0x4e0>)
   87128:	f7fd f964 	bl	843f4 <__aeabi_dsub>
   8712c:	4602      	mov	r2, r0
   8712e:	460b      	mov	r3, r1
   87130:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   87134:	f7fd fda6 	bl	84c84 <__aeabi_dcmpgt>
   87138:	2800      	cmp	r0, #0
   8713a:	f040 8509 	bne.w	87b50 <_dtoa_r+0xdac>
   8713e:	9a10      	ldr	r2, [sp, #64]	; 0x40
   87140:	2a01      	cmp	r2, #1
   87142:	d050      	beq.n	871e6 <_dtoa_r+0x442>
   87144:	444a      	add	r2, r9
   87146:	f8cd a048 	str.w	sl, [sp, #72]	; 0x48
   8714a:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
   8714e:	46a0      	mov	r8, r4
   87150:	e9dd ab02 	ldrd	sl, fp, [sp, #8]
   87154:	f8cd 9008 	str.w	r9, [sp, #8]
   87158:	4691      	mov	r9, r2
   8715a:	e00e      	b.n	8717a <_dtoa_r+0x3d6>
   8715c:	4632      	mov	r2, r6
   8715e:	463b      	mov	r3, r7
   87160:	2000      	movs	r0, #0
   87162:	4948      	ldr	r1, [pc, #288]	; (87284 <_dtoa_r+0x4e0>)
   87164:	f7fd f946 	bl	843f4 <__aeabi_dsub>
   87168:	4652      	mov	r2, sl
   8716a:	465b      	mov	r3, fp
   8716c:	f7fd fd6c 	bl	84c48 <__aeabi_dcmplt>
   87170:	2800      	cmp	r0, #0
   87172:	f040 84e6 	bne.w	87b42 <_dtoa_r+0xd9e>
   87176:	454d      	cmp	r5, r9
   87178:	d02e      	beq.n	871d8 <_dtoa_r+0x434>
   8717a:	4650      	mov	r0, sl
   8717c:	4659      	mov	r1, fp
   8717e:	2200      	movs	r2, #0
   87180:	4b43      	ldr	r3, [pc, #268]	; (87290 <_dtoa_r+0x4ec>)
   87182:	f7fd faef 	bl	84764 <__aeabi_dmul>
   87186:	2200      	movs	r2, #0
   87188:	4b41      	ldr	r3, [pc, #260]	; (87290 <_dtoa_r+0x4ec>)
   8718a:	4682      	mov	sl, r0
   8718c:	468b      	mov	fp, r1
   8718e:	4630      	mov	r0, r6
   87190:	4639      	mov	r1, r7
   87192:	f7fd fae7 	bl	84764 <__aeabi_dmul>
   87196:	460f      	mov	r7, r1
   87198:	4606      	mov	r6, r0
   8719a:	f7fd fd7d 	bl	84c98 <__aeabi_d2iz>
   8719e:	4604      	mov	r4, r0
   871a0:	f7fd fa76 	bl	84690 <__aeabi_i2d>
   871a4:	4602      	mov	r2, r0
   871a6:	460b      	mov	r3, r1
   871a8:	4630      	mov	r0, r6
   871aa:	4639      	mov	r1, r7
   871ac:	f7fd f922 	bl	843f4 <__aeabi_dsub>
   871b0:	3430      	adds	r4, #48	; 0x30
   871b2:	b2e4      	uxtb	r4, r4
   871b4:	f805 4b01 	strb.w	r4, [r5], #1
   871b8:	4652      	mov	r2, sl
   871ba:	465b      	mov	r3, fp
   871bc:	4606      	mov	r6, r0
   871be:	460f      	mov	r7, r1
   871c0:	f7fd fd42 	bl	84c48 <__aeabi_dcmplt>
   871c4:	2800      	cmp	r0, #0
   871c6:	d0c9      	beq.n	8715c <_dtoa_r+0x3b8>
   871c8:	9b15      	ldr	r3, [sp, #84]	; 0x54
   871ca:	f8dd b040 	ldr.w	fp, [sp, #64]	; 0x40
   871ce:	f8dd 9008 	ldr.w	r9, [sp, #8]
   871d2:	4644      	mov	r4, r8
   871d4:	9305      	str	r3, [sp, #20]
   871d6:	e239      	b.n	8764c <_dtoa_r+0x8a8>
   871d8:	4644      	mov	r4, r8
   871da:	f8dd a048 	ldr.w	sl, [sp, #72]	; 0x48
   871de:	f8dd b040 	ldr.w	fp, [sp, #64]	; 0x40
   871e2:	f8dd 9008 	ldr.w	r9, [sp, #8]
   871e6:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
   871ea:	e9cd 2302 	strd	r2, r3, [sp, #8]
   871ee:	9b17      	ldr	r3, [sp, #92]	; 0x5c
   871f0:	2b00      	cmp	r3, #0
   871f2:	f2c0 80a9 	blt.w	87348 <_dtoa_r+0x5a4>
   871f6:	9a05      	ldr	r2, [sp, #20]
   871f8:	2a0e      	cmp	r2, #14
   871fa:	f300 80a5 	bgt.w	87348 <_dtoa_r+0x5a4>
   871fe:	4b1f      	ldr	r3, [pc, #124]	; (8727c <_dtoa_r+0x4d8>)
   87200:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   87204:	e9d3 2300 	ldrd	r2, r3, [r3]
   87208:	e9cd 2306 	strd	r2, r3, [sp, #24]
   8720c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   8720e:	2b00      	cmp	r3, #0
   87210:	f2c0 82c1 	blt.w	87796 <_dtoa_r+0x9f2>
   87214:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
   87218:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
   8721c:	4630      	mov	r0, r6
   8721e:	4639      	mov	r1, r7
   87220:	f7fd fbca 	bl	849b8 <__aeabi_ddiv>
   87224:	f7fd fd38 	bl	84c98 <__aeabi_d2iz>
   87228:	4680      	mov	r8, r0
   8722a:	f7fd fa31 	bl	84690 <__aeabi_i2d>
   8722e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
   87232:	f7fd fa97 	bl	84764 <__aeabi_dmul>
   87236:	4602      	mov	r2, r0
   87238:	460b      	mov	r3, r1
   8723a:	4630      	mov	r0, r6
   8723c:	4639      	mov	r1, r7
   8723e:	f7fd f8d9 	bl	843f4 <__aeabi_dsub>
   87242:	9e08      	ldr	r6, [sp, #32]
   87244:	f108 0530 	add.w	r5, r8, #48	; 0x30
   87248:	2e01      	cmp	r6, #1
   8724a:	f889 5000 	strb.w	r5, [r9]
   8724e:	4602      	mov	r2, r0
   87250:	460b      	mov	r3, r1
   87252:	f109 0501 	add.w	r5, r9, #1
   87256:	d04c      	beq.n	872f2 <_dtoa_r+0x54e>
   87258:	2200      	movs	r2, #0
   8725a:	4b0d      	ldr	r3, [pc, #52]	; (87290 <_dtoa_r+0x4ec>)
   8725c:	f7fd fa82 	bl	84764 <__aeabi_dmul>
   87260:	2200      	movs	r2, #0
   87262:	2300      	movs	r3, #0
   87264:	4606      	mov	r6, r0
   87266:	460f      	mov	r7, r1
   87268:	f7fd fce4 	bl	84c34 <__aeabi_dcmpeq>
   8726c:	2800      	cmp	r0, #0
   8726e:	f040 81ed 	bne.w	8764c <_dtoa_r+0x8a8>
   87272:	f8cd b008 	str.w	fp, [sp, #8]
   87276:	e9dd ab06 	ldrd	sl, fp, [sp, #24]
   8727a:	e018      	b.n	872ae <_dtoa_r+0x50a>
   8727c:	0008a200 	.word	0x0008a200
   87280:	0008a2f0 	.word	0x0008a2f0
   87284:	3ff00000 	.word	0x3ff00000
   87288:	401c0000 	.word	0x401c0000
   8728c:	3fe00000 	.word	0x3fe00000
   87290:	40240000 	.word	0x40240000
   87294:	2200      	movs	r2, #0
   87296:	4bc6      	ldr	r3, [pc, #792]	; (875b0 <_dtoa_r+0x80c>)
   87298:	f7fd fa64 	bl	84764 <__aeabi_dmul>
   8729c:	2200      	movs	r2, #0
   8729e:	2300      	movs	r3, #0
   872a0:	4606      	mov	r6, r0
   872a2:	460f      	mov	r7, r1
   872a4:	f7fd fcc6 	bl	84c34 <__aeabi_dcmpeq>
   872a8:	2800      	cmp	r0, #0
   872aa:	f040 8341 	bne.w	87930 <_dtoa_r+0xb8c>
   872ae:	4652      	mov	r2, sl
   872b0:	465b      	mov	r3, fp
   872b2:	4630      	mov	r0, r6
   872b4:	4639      	mov	r1, r7
   872b6:	f7fd fb7f 	bl	849b8 <__aeabi_ddiv>
   872ba:	f7fd fced 	bl	84c98 <__aeabi_d2iz>
   872be:	4680      	mov	r8, r0
   872c0:	f7fd f9e6 	bl	84690 <__aeabi_i2d>
   872c4:	4652      	mov	r2, sl
   872c6:	465b      	mov	r3, fp
   872c8:	f7fd fa4c 	bl	84764 <__aeabi_dmul>
   872cc:	4602      	mov	r2, r0
   872ce:	460b      	mov	r3, r1
   872d0:	4630      	mov	r0, r6
   872d2:	4639      	mov	r1, r7
   872d4:	f7fd f88e 	bl	843f4 <__aeabi_dsub>
   872d8:	f108 0630 	add.w	r6, r8, #48	; 0x30
   872dc:	f805 6b01 	strb.w	r6, [r5], #1
   872e0:	9f08      	ldr	r7, [sp, #32]
   872e2:	eba5 0609 	sub.w	r6, r5, r9
   872e6:	42b7      	cmp	r7, r6
   872e8:	4602      	mov	r2, r0
   872ea:	460b      	mov	r3, r1
   872ec:	d1d2      	bne.n	87294 <_dtoa_r+0x4f0>
   872ee:	f8dd b008 	ldr.w	fp, [sp, #8]
   872f2:	4610      	mov	r0, r2
   872f4:	4619      	mov	r1, r3
   872f6:	f7fd f87f 	bl	843f8 <__adddf3>
   872fa:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
   872fe:	4606      	mov	r6, r0
   87300:	460f      	mov	r7, r1
   87302:	f7fd fcbf 	bl	84c84 <__aeabi_dcmpgt>
   87306:	b960      	cbnz	r0, 87322 <_dtoa_r+0x57e>
   87308:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
   8730c:	4630      	mov	r0, r6
   8730e:	4639      	mov	r1, r7
   87310:	f7fd fc90 	bl	84c34 <__aeabi_dcmpeq>
   87314:	2800      	cmp	r0, #0
   87316:	f000 8199 	beq.w	8764c <_dtoa_r+0x8a8>
   8731a:	f018 0f01 	tst.w	r8, #1
   8731e:	f000 8195 	beq.w	8764c <_dtoa_r+0x8a8>
   87322:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   87326:	e005      	b.n	87334 <_dtoa_r+0x590>
   87328:	4599      	cmp	r9, r3
   8732a:	f000 833a 	beq.w	879a2 <_dtoa_r+0xbfe>
   8732e:	461d      	mov	r5, r3
   87330:	f813 8c01 	ldrb.w	r8, [r3, #-1]
   87334:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
   87338:	f105 33ff 	add.w	r3, r5, #4294967295	; 0xffffffff
   8733c:	d0f4      	beq.n	87328 <_dtoa_r+0x584>
   8733e:	f108 0801 	add.w	r8, r8, #1
   87342:	f883 8000 	strb.w	r8, [r3]
   87346:	e181      	b.n	8764c <_dtoa_r+0x8a8>
   87348:	9a09      	ldr	r2, [sp, #36]	; 0x24
   8734a:	2a00      	cmp	r2, #0
   8734c:	d03d      	beq.n	873ca <_dtoa_r+0x626>
   8734e:	9a22      	ldr	r2, [sp, #136]	; 0x88
   87350:	2a01      	cmp	r2, #1
   87352:	f340 8212 	ble.w	8777a <_dtoa_r+0x9d6>
   87356:	9b08      	ldr	r3, [sp, #32]
   87358:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
   8735c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   8735e:	4543      	cmp	r3, r8
   87360:	f2c0 82e9 	blt.w	87936 <_dtoa_r+0xb92>
   87364:	eba3 0808 	sub.w	r8, r3, r8
   87368:	9b08      	ldr	r3, [sp, #32]
   8736a:	2b00      	cmp	r3, #0
   8736c:	f2c0 830e 	blt.w	8798c <_dtoa_r+0xbe8>
   87370:	9a06      	ldr	r2, [sp, #24]
   87372:	449a      	add	sl, r3
   87374:	920a      	str	r2, [sp, #40]	; 0x28
   87376:	441a      	add	r2, r3
   87378:	9206      	str	r2, [sp, #24]
   8737a:	2101      	movs	r1, #1
   8737c:	4620      	mov	r0, r4
   8737e:	f001 fa69 	bl	88854 <__i2b>
   87382:	4606      	mov	r6, r0
   87384:	e026      	b.n	873d4 <_dtoa_r+0x630>
   87386:	2301      	movs	r3, #1
   87388:	930d      	str	r3, [sp, #52]	; 0x34
   8738a:	e5ad      	b.n	86ee8 <_dtoa_r+0x144>
   8738c:	2300      	movs	r3, #0
   8738e:	930c      	str	r3, [sp, #48]	; 0x30
   87390:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
   87394:	1ad2      	subs	r2, r2, r3
   87396:	425b      	negs	r3, r3
   87398:	9206      	str	r2, [sp, #24]
   8739a:	930b      	str	r3, [sp, #44]	; 0x2c
   8739c:	e5b4      	b.n	86f08 <_dtoa_r+0x164>
   8739e:	f1c5 0301 	rsb	r3, r5, #1
   873a2:	9306      	str	r3, [sp, #24]
   873a4:	f04f 0a00 	mov.w	sl, #0
   873a8:	e5a6      	b.n	86ef8 <_dtoa_r+0x154>
   873aa:	f8dd 9014 	ldr.w	r9, [sp, #20]
   873ae:	4648      	mov	r0, r9
   873b0:	f7fd f96e 	bl	84690 <__aeabi_i2d>
   873b4:	4632      	mov	r2, r6
   873b6:	463b      	mov	r3, r7
   873b8:	f7fd fc3c 	bl	84c34 <__aeabi_dcmpeq>
   873bc:	2800      	cmp	r0, #0
   873be:	f47f ad7f 	bne.w	86ec0 <_dtoa_r+0x11c>
   873c2:	f109 33ff 	add.w	r3, r9, #4294967295	; 0xffffffff
   873c6:	9305      	str	r3, [sp, #20]
   873c8:	e57a      	b.n	86ec0 <_dtoa_r+0x11c>
   873ca:	9b06      	ldr	r3, [sp, #24]
   873cc:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
   873d0:	9e09      	ldr	r6, [sp, #36]	; 0x24
   873d2:	930a      	str	r3, [sp, #40]	; 0x28
   873d4:	990a      	ldr	r1, [sp, #40]	; 0x28
   873d6:	2900      	cmp	r1, #0
   873d8:	460b      	mov	r3, r1
   873da:	dd0c      	ble.n	873f6 <_dtoa_r+0x652>
   873dc:	f1ba 0f00 	cmp.w	sl, #0
   873e0:	dd09      	ble.n	873f6 <_dtoa_r+0x652>
   873e2:	4551      	cmp	r1, sl
   873e4:	bfa8      	it	ge
   873e6:	4653      	movge	r3, sl
   873e8:	9a06      	ldr	r2, [sp, #24]
   873ea:	ebaa 0a03 	sub.w	sl, sl, r3
   873ee:	1ad2      	subs	r2, r2, r3
   873f0:	9206      	str	r2, [sp, #24]
   873f2:	1aca      	subs	r2, r1, r3
   873f4:	920a      	str	r2, [sp, #40]	; 0x28
   873f6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   873f8:	b17b      	cbz	r3, 8741a <_dtoa_r+0x676>
   873fa:	9a09      	ldr	r2, [sp, #36]	; 0x24
   873fc:	2a00      	cmp	r2, #0
   873fe:	f000 8290 	beq.w	87922 <_dtoa_r+0xb7e>
   87402:	eba3 0708 	sub.w	r7, r3, r8
   87406:	f1b8 0f00 	cmp.w	r8, #0
   8740a:	f040 819a 	bne.w	87742 <_dtoa_r+0x99e>
   8740e:	4659      	mov	r1, fp
   87410:	463a      	mov	r2, r7
   87412:	4620      	mov	r0, r4
   87414:	f001 face 	bl	889b4 <__pow5mult>
   87418:	4683      	mov	fp, r0
   8741a:	2101      	movs	r1, #1
   8741c:	4620      	mov	r0, r4
   8741e:	f001 fa19 	bl	88854 <__i2b>
   87422:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   87424:	4607      	mov	r7, r0
   87426:	2a00      	cmp	r2, #0
   87428:	f040 8125 	bne.w	87676 <_dtoa_r+0x8d2>
   8742c:	9b22      	ldr	r3, [sp, #136]	; 0x88
   8742e:	2b01      	cmp	r3, #1
   87430:	f340 816b 	ble.w	8770a <_dtoa_r+0x966>
   87434:	2001      	movs	r0, #1
   87436:	4450      	add	r0, sl
   87438:	f010 001f 	ands.w	r0, r0, #31
   8743c:	f000 8119 	beq.w	87672 <_dtoa_r+0x8ce>
   87440:	f1c0 0320 	rsb	r3, r0, #32
   87444:	2b04      	cmp	r3, #4
   87446:	f340 83b4 	ble.w	87bb2 <_dtoa_r+0xe0e>
   8744a:	f1c0 001c 	rsb	r0, r0, #28
   8744e:	9b06      	ldr	r3, [sp, #24]
   87450:	4482      	add	sl, r0
   87452:	4403      	add	r3, r0
   87454:	9306      	str	r3, [sp, #24]
   87456:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   87458:	4403      	add	r3, r0
   8745a:	930a      	str	r3, [sp, #40]	; 0x28
   8745c:	9b06      	ldr	r3, [sp, #24]
   8745e:	2b00      	cmp	r3, #0
   87460:	dd05      	ble.n	8746e <_dtoa_r+0x6ca>
   87462:	4659      	mov	r1, fp
   87464:	461a      	mov	r2, r3
   87466:	4620      	mov	r0, r4
   87468:	f001 faf4 	bl	88a54 <__lshift>
   8746c:	4683      	mov	fp, r0
   8746e:	f1ba 0f00 	cmp.w	sl, #0
   87472:	dd05      	ble.n	87480 <_dtoa_r+0x6dc>
   87474:	4639      	mov	r1, r7
   87476:	4652      	mov	r2, sl
   87478:	4620      	mov	r0, r4
   8747a:	f001 faeb 	bl	88a54 <__lshift>
   8747e:	4607      	mov	r7, r0
   87480:	9b0d      	ldr	r3, [sp, #52]	; 0x34
   87482:	2b00      	cmp	r3, #0
   87484:	d177      	bne.n	87576 <_dtoa_r+0x7d2>
   87486:	9b08      	ldr	r3, [sp, #32]
   87488:	2b00      	cmp	r3, #0
   8748a:	f340 8205 	ble.w	87898 <_dtoa_r+0xaf4>
   8748e:	9b09      	ldr	r3, [sp, #36]	; 0x24
   87490:	2b00      	cmp	r3, #0
   87492:	f000 8089 	beq.w	875a8 <_dtoa_r+0x804>
   87496:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   87498:	2b00      	cmp	r3, #0
   8749a:	f300 8167 	bgt.w	8776c <_dtoa_r+0x9c8>
   8749e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
   874a0:	2b00      	cmp	r3, #0
   874a2:	f040 81ca 	bne.w	8783a <_dtoa_r+0xa96>
   874a6:	46b2      	mov	sl, r6
   874a8:	46c8      	mov	r8, r9
   874aa:	9b02      	ldr	r3, [sp, #8]
   874ac:	9a08      	ldr	r2, [sp, #32]
   874ae:	f003 0301 	and.w	r3, r3, #1
   874b2:	930a      	str	r3, [sp, #40]	; 0x28
   874b4:	f109 33ff 	add.w	r3, r9, #4294967295	; 0xffffffff
   874b8:	441a      	add	r2, r3
   874ba:	9206      	str	r2, [sp, #24]
   874bc:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
   874c0:	4639      	mov	r1, r7
   874c2:	4658      	mov	r0, fp
   874c4:	f7ff fbdc 	bl	86c80 <quorem>
   874c8:	4631      	mov	r1, r6
   874ca:	4681      	mov	r9, r0
   874cc:	9009      	str	r0, [sp, #36]	; 0x24
   874ce:	4658      	mov	r0, fp
   874d0:	f001 fb1a 	bl	88b08 <__mcmp>
   874d4:	4652      	mov	r2, sl
   874d6:	9002      	str	r0, [sp, #8]
   874d8:	4639      	mov	r1, r7
   874da:	4620      	mov	r0, r4
   874dc:	f001 fb30 	bl	88b40 <__mdiff>
   874e0:	68c2      	ldr	r2, [r0, #12]
   874e2:	4605      	mov	r5, r0
   874e4:	f109 0930 	add.w	r9, r9, #48	; 0x30
   874e8:	4601      	mov	r1, r0
   874ea:	2a00      	cmp	r2, #0
   874ec:	f040 81cf 	bne.w	8788e <_dtoa_r+0xaea>
   874f0:	4658      	mov	r0, fp
   874f2:	f001 fb09 	bl	88b08 <__mcmp>
   874f6:	4629      	mov	r1, r5
   874f8:	9008      	str	r0, [sp, #32]
   874fa:	4620      	mov	r0, r4
   874fc:	f001 f8c2 	bl	88684 <_Bfree>
   87500:	9a08      	ldr	r2, [sp, #32]
   87502:	b932      	cbnz	r2, 87512 <_dtoa_r+0x76e>
   87504:	9b22      	ldr	r3, [sp, #136]	; 0x88
   87506:	b923      	cbnz	r3, 87512 <_dtoa_r+0x76e>
   87508:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   8750a:	2b00      	cmp	r3, #0
   8750c:	f000 8324 	beq.w	87b58 <_dtoa_r+0xdb4>
   87510:	9a22      	ldr	r2, [sp, #136]	; 0x88
   87512:	9b02      	ldr	r3, [sp, #8]
   87514:	2b00      	cmp	r3, #0
   87516:	f2c0 8219 	blt.w	8794c <_dtoa_r+0xba8>
   8751a:	d105      	bne.n	87528 <_dtoa_r+0x784>
   8751c:	9b22      	ldr	r3, [sp, #136]	; 0x88
   8751e:	b91b      	cbnz	r3, 87528 <_dtoa_r+0x784>
   87520:	9b0a      	ldr	r3, [sp, #40]	; 0x28
   87522:	2b00      	cmp	r3, #0
   87524:	f000 8212 	beq.w	8794c <_dtoa_r+0xba8>
   87528:	2a00      	cmp	r2, #0
   8752a:	f108 0501 	add.w	r5, r8, #1
   8752e:	f300 8221 	bgt.w	87974 <_dtoa_r+0xbd0>
   87532:	9b06      	ldr	r3, [sp, #24]
   87534:	f888 9000 	strb.w	r9, [r8]
   87538:	4543      	cmp	r3, r8
   8753a:	f000 822c 	beq.w	87996 <_dtoa_r+0xbf2>
   8753e:	4659      	mov	r1, fp
   87540:	2300      	movs	r3, #0
   87542:	220a      	movs	r2, #10
   87544:	4620      	mov	r0, r4
   87546:	f001 f8a7 	bl	88698 <__multadd>
   8754a:	4556      	cmp	r6, sl
   8754c:	4683      	mov	fp, r0
   8754e:	4631      	mov	r1, r6
   87550:	f04f 0300 	mov.w	r3, #0
   87554:	f04f 020a 	mov.w	r2, #10
   87558:	4620      	mov	r0, r4
   8755a:	f000 8192 	beq.w	87882 <_dtoa_r+0xade>
   8755e:	f001 f89b 	bl	88698 <__multadd>
   87562:	4651      	mov	r1, sl
   87564:	4606      	mov	r6, r0
   87566:	2300      	movs	r3, #0
   87568:	220a      	movs	r2, #10
   8756a:	4620      	mov	r0, r4
   8756c:	f001 f894 	bl	88698 <__multadd>
   87570:	46a8      	mov	r8, r5
   87572:	4682      	mov	sl, r0
   87574:	e7a4      	b.n	874c0 <_dtoa_r+0x71c>
   87576:	4639      	mov	r1, r7
   87578:	4658      	mov	r0, fp
   8757a:	f001 fac5 	bl	88b08 <__mcmp>
   8757e:	2800      	cmp	r0, #0
   87580:	da81      	bge.n	87486 <_dtoa_r+0x6e2>
   87582:	9d05      	ldr	r5, [sp, #20]
   87584:	4659      	mov	r1, fp
   87586:	2300      	movs	r3, #0
   87588:	220a      	movs	r2, #10
   8758a:	4620      	mov	r0, r4
   8758c:	3d01      	subs	r5, #1
   8758e:	9505      	str	r5, [sp, #20]
   87590:	f001 f882 	bl	88698 <__multadd>
   87594:	9b09      	ldr	r3, [sp, #36]	; 0x24
   87596:	4683      	mov	fp, r0
   87598:	2b00      	cmp	r3, #0
   8759a:	f040 82ee 	bne.w	87b7a <_dtoa_r+0xdd6>
   8759e:	9b14      	ldr	r3, [sp, #80]	; 0x50
   875a0:	2b00      	cmp	r3, #0
   875a2:	f340 82f9 	ble.w	87b98 <_dtoa_r+0xdf4>
   875a6:	9308      	str	r3, [sp, #32]
   875a8:	464d      	mov	r5, r9
   875aa:	f8dd 8020 	ldr.w	r8, [sp, #32]
   875ae:	e008      	b.n	875c2 <_dtoa_r+0x81e>
   875b0:	40240000 	.word	0x40240000
   875b4:	4659      	mov	r1, fp
   875b6:	2300      	movs	r3, #0
   875b8:	220a      	movs	r2, #10
   875ba:	4620      	mov	r0, r4
   875bc:	f001 f86c 	bl	88698 <__multadd>
   875c0:	4683      	mov	fp, r0
   875c2:	4639      	mov	r1, r7
   875c4:	4658      	mov	r0, fp
   875c6:	f7ff fb5b 	bl	86c80 <quorem>
   875ca:	3030      	adds	r0, #48	; 0x30
   875cc:	f805 0b01 	strb.w	r0, [r5], #1
   875d0:	eba5 0209 	sub.w	r2, r5, r9
   875d4:	4590      	cmp	r8, r2
   875d6:	dced      	bgt.n	875b4 <_dtoa_r+0x810>
   875d8:	2200      	movs	r2, #0
   875da:	4603      	mov	r3, r0
   875dc:	9202      	str	r2, [sp, #8]
   875de:	4659      	mov	r1, fp
   875e0:	2201      	movs	r2, #1
   875e2:	4620      	mov	r0, r4
   875e4:	9308      	str	r3, [sp, #32]
   875e6:	f001 fa35 	bl	88a54 <__lshift>
   875ea:	4639      	mov	r1, r7
   875ec:	4683      	mov	fp, r0
   875ee:	f001 fa8b 	bl	88b08 <__mcmp>
   875f2:	2800      	cmp	r0, #0
   875f4:	f815 2c01 	ldrb.w	r2, [r5, #-1]
   875f8:	9b08      	ldr	r3, [sp, #32]
   875fa:	dc11      	bgt.n	87620 <_dtoa_r+0x87c>
   875fc:	d105      	bne.n	8760a <_dtoa_r+0x866>
   875fe:	07db      	lsls	r3, r3, #31
   87600:	d40e      	bmi.n	87620 <_dtoa_r+0x87c>
   87602:	e002      	b.n	8760a <_dtoa_r+0x866>
   87604:	f815 2c02 	ldrb.w	r2, [r5, #-2]
   87608:	461d      	mov	r5, r3
   8760a:	2a30      	cmp	r2, #48	; 0x30
   8760c:	f105 33ff 	add.w	r3, r5, #4294967295	; 0xffffffff
   87610:	d0f8      	beq.n	87604 <_dtoa_r+0x860>
   87612:	e00b      	b.n	8762c <_dtoa_r+0x888>
   87614:	4599      	cmp	r9, r3
   87616:	f000 814c 	beq.w	878b2 <_dtoa_r+0xb0e>
   8761a:	461d      	mov	r5, r3
   8761c:	f813 2c01 	ldrb.w	r2, [r3, #-1]
   87620:	2a39      	cmp	r2, #57	; 0x39
   87622:	f105 33ff 	add.w	r3, r5, #4294967295	; 0xffffffff
   87626:	d0f5      	beq.n	87614 <_dtoa_r+0x870>
   87628:	3201      	adds	r2, #1
   8762a:	701a      	strb	r2, [r3, #0]
   8762c:	4639      	mov	r1, r7
   8762e:	4620      	mov	r0, r4
   87630:	f001 f828 	bl	88684 <_Bfree>
   87634:	b156      	cbz	r6, 8764c <_dtoa_r+0x8a8>
   87636:	9902      	ldr	r1, [sp, #8]
   87638:	b121      	cbz	r1, 87644 <_dtoa_r+0x8a0>
   8763a:	42b1      	cmp	r1, r6
   8763c:	d002      	beq.n	87644 <_dtoa_r+0x8a0>
   8763e:	4620      	mov	r0, r4
   87640:	f001 f820 	bl	88684 <_Bfree>
   87644:	4631      	mov	r1, r6
   87646:	4620      	mov	r0, r4
   87648:	f001 f81c 	bl	88684 <_Bfree>
   8764c:	4659      	mov	r1, fp
   8764e:	4620      	mov	r0, r4
   87650:	f001 f818 	bl	88684 <_Bfree>
   87654:	2200      	movs	r2, #0
   87656:	9b05      	ldr	r3, [sp, #20]
   87658:	702a      	strb	r2, [r5, #0]
   8765a:	9a24      	ldr	r2, [sp, #144]	; 0x90
   8765c:	3301      	adds	r3, #1
   8765e:	6013      	str	r3, [r2, #0]
   87660:	9b26      	ldr	r3, [sp, #152]	; 0x98
   87662:	2b00      	cmp	r3, #0
   87664:	f43f abd7 	beq.w	86e16 <_dtoa_r+0x72>
   87668:	4648      	mov	r0, r9
   8766a:	601d      	str	r5, [r3, #0]
   8766c:	b019      	add	sp, #100	; 0x64
   8766e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   87672:	201c      	movs	r0, #28
   87674:	e6eb      	b.n	8744e <_dtoa_r+0x6aa>
   87676:	4601      	mov	r1, r0
   87678:	4620      	mov	r0, r4
   8767a:	f001 f99b 	bl	889b4 <__pow5mult>
   8767e:	9b22      	ldr	r3, [sp, #136]	; 0x88
   87680:	4607      	mov	r7, r0
   87682:	2b01      	cmp	r3, #1
   87684:	f340 80d4 	ble.w	87830 <_dtoa_r+0xa8c>
   87688:	2300      	movs	r3, #0
   8768a:	930c      	str	r3, [sp, #48]	; 0x30
   8768c:	693b      	ldr	r3, [r7, #16]
   8768e:	eb07 0383 	add.w	r3, r7, r3, lsl #2
   87692:	6918      	ldr	r0, [r3, #16]
   87694:	f001 f88e 	bl	887b4 <__hi0bits>
   87698:	f1c0 0020 	rsb	r0, r0, #32
   8769c:	e6cb      	b.n	87436 <_dtoa_r+0x692>
   8769e:	900d      	str	r0, [sp, #52]	; 0x34
   876a0:	e422      	b.n	86ee8 <_dtoa_r+0x144>
   876a2:	2601      	movs	r6, #1
   876a4:	e439      	b.n	86f1a <_dtoa_r+0x176>
   876a6:	f1c3 0620 	rsb	r6, r3, #32
   876aa:	9b02      	ldr	r3, [sp, #8]
   876ac:	fa03 f006 	lsl.w	r0, r3, r6
   876b0:	f7ff bbd3 	b.w	86e5a <_dtoa_r+0xb6>
   876b4:	2300      	movs	r3, #0
   876b6:	9309      	str	r3, [sp, #36]	; 0x24
   876b8:	9b05      	ldr	r3, [sp, #20]
   876ba:	9a23      	ldr	r2, [sp, #140]	; 0x8c
   876bc:	4413      	add	r3, r2
   876be:	9314      	str	r3, [sp, #80]	; 0x50
   876c0:	3301      	adds	r3, #1
   876c2:	2b01      	cmp	r3, #1
   876c4:	461f      	mov	r7, r3
   876c6:	bfb8      	it	lt
   876c8:	2701      	movlt	r7, #1
   876ca:	9308      	str	r3, [sp, #32]
   876cc:	2100      	movs	r1, #0
   876ce:	2f17      	cmp	r7, #23
   876d0:	9d08      	ldr	r5, [sp, #32]
   876d2:	6461      	str	r1, [r4, #68]	; 0x44
   876d4:	f77f ac85 	ble.w	86fe2 <_dtoa_r+0x23e>
   876d8:	2201      	movs	r2, #1
   876da:	2304      	movs	r3, #4
   876dc:	005b      	lsls	r3, r3, #1
   876de:	f103 0014 	add.w	r0, r3, #20
   876e2:	42b8      	cmp	r0, r7
   876e4:	4611      	mov	r1, r2
   876e6:	f102 0201 	add.w	r2, r2, #1
   876ea:	d9f7      	bls.n	876dc <_dtoa_r+0x938>
   876ec:	6461      	str	r1, [r4, #68]	; 0x44
   876ee:	e478      	b.n	86fe2 <_dtoa_r+0x23e>
   876f0:	2300      	movs	r3, #0
   876f2:	9309      	str	r3, [sp, #36]	; 0x24
   876f4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   876f6:	2b00      	cmp	r3, #0
   876f8:	f340 80e2 	ble.w	878c0 <_dtoa_r+0xb1c>
   876fc:	9314      	str	r3, [sp, #80]	; 0x50
   876fe:	9308      	str	r3, [sp, #32]
   87700:	461f      	mov	r7, r3
   87702:	e7e3      	b.n	876cc <_dtoa_r+0x928>
   87704:	2301      	movs	r3, #1
   87706:	9309      	str	r3, [sp, #36]	; 0x24
   87708:	e7f4      	b.n	876f4 <_dtoa_r+0x950>
   8770a:	9b02      	ldr	r3, [sp, #8]
   8770c:	2b00      	cmp	r3, #0
   8770e:	f47f ae91 	bne.w	87434 <_dtoa_r+0x690>
   87712:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
   87716:	f3c2 0313 	ubfx	r3, r2, #0, #20
   8771a:	2b00      	cmp	r3, #0
   8771c:	f040 8199 	bne.w	87a52 <_dtoa_r+0xcae>
   87720:	f022 4300 	bic.w	r3, r2, #2147483648	; 0x80000000
   87724:	0d1b      	lsrs	r3, r3, #20
   87726:	051b      	lsls	r3, r3, #20
   87728:	b12b      	cbz	r3, 87736 <_dtoa_r+0x992>
   8772a:	9b06      	ldr	r3, [sp, #24]
   8772c:	f10a 0a01 	add.w	sl, sl, #1
   87730:	3301      	adds	r3, #1
   87732:	9306      	str	r3, [sp, #24]
   87734:	2301      	movs	r3, #1
   87736:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   87738:	930c      	str	r3, [sp, #48]	; 0x30
   8773a:	2a00      	cmp	r2, #0
   8773c:	f43f ae7a 	beq.w	87434 <_dtoa_r+0x690>
   87740:	e7a4      	b.n	8768c <_dtoa_r+0x8e8>
   87742:	4642      	mov	r2, r8
   87744:	4631      	mov	r1, r6
   87746:	4620      	mov	r0, r4
   87748:	f001 f934 	bl	889b4 <__pow5mult>
   8774c:	465a      	mov	r2, fp
   8774e:	4601      	mov	r1, r0
   87750:	4606      	mov	r6, r0
   87752:	4620      	mov	r0, r4
   87754:	f001 f888 	bl	88868 <__multiply>
   87758:	4680      	mov	r8, r0
   8775a:	4659      	mov	r1, fp
   8775c:	4620      	mov	r0, r4
   8775e:	f000 ff91 	bl	88684 <_Bfree>
   87762:	46c3      	mov	fp, r8
   87764:	2f00      	cmp	r7, #0
   87766:	f43f ae58 	beq.w	8741a <_dtoa_r+0x676>
   8776a:	e650      	b.n	8740e <_dtoa_r+0x66a>
   8776c:	4631      	mov	r1, r6
   8776e:	461a      	mov	r2, r3
   87770:	4620      	mov	r0, r4
   87772:	f001 f96f 	bl	88a54 <__lshift>
   87776:	4606      	mov	r6, r0
   87778:	e691      	b.n	8749e <_dtoa_r+0x6fa>
   8777a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   8777c:	2a00      	cmp	r2, #0
   8777e:	f000 815d 	beq.w	87a3c <_dtoa_r+0xc98>
   87782:	9a06      	ldr	r2, [sp, #24]
   87784:	f203 4333 	addw	r3, r3, #1075	; 0x433
   87788:	920a      	str	r2, [sp, #40]	; 0x28
   8778a:	441a      	add	r2, r3
   8778c:	449a      	add	sl, r3
   8778e:	9206      	str	r2, [sp, #24]
   87790:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
   87794:	e5f1      	b.n	8737a <_dtoa_r+0x5d6>
   87796:	9b08      	ldr	r3, [sp, #32]
   87798:	2b00      	cmp	r3, #0
   8779a:	f73f ad3b 	bgt.w	87214 <_dtoa_r+0x470>
   8779e:	f040 81f8 	bne.w	87b92 <_dtoa_r+0xdee>
   877a2:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
   877a6:	2200      	movs	r2, #0
   877a8:	4bb5      	ldr	r3, [pc, #724]	; (87a80 <_dtoa_r+0xcdc>)
   877aa:	f7fc ffdb 	bl	84764 <__aeabi_dmul>
   877ae:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   877b2:	f7fd fa5d 	bl	84c70 <__aeabi_dcmpge>
   877b6:	9f08      	ldr	r7, [sp, #32]
   877b8:	463e      	mov	r6, r7
   877ba:	2800      	cmp	r0, #0
   877bc:	d174      	bne.n	878a8 <_dtoa_r+0xb04>
   877be:	2331      	movs	r3, #49	; 0x31
   877c0:	9a05      	ldr	r2, [sp, #20]
   877c2:	f889 3000 	strb.w	r3, [r9]
   877c6:	3201      	adds	r2, #1
   877c8:	9205      	str	r2, [sp, #20]
   877ca:	f109 0501 	add.w	r5, r9, #1
   877ce:	4639      	mov	r1, r7
   877d0:	4620      	mov	r0, r4
   877d2:	f000 ff57 	bl	88684 <_Bfree>
   877d6:	2e00      	cmp	r6, #0
   877d8:	f47f af34 	bne.w	87644 <_dtoa_r+0x8a0>
   877dc:	e736      	b.n	8764c <_dtoa_r+0x8a8>
   877de:	f000 8148 	beq.w	87a72 <_dtoa_r+0xcce>
   877e2:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
   877e6:	9b05      	ldr	r3, [sp, #20]
   877e8:	425d      	negs	r5, r3
   877ea:	4ba6      	ldr	r3, [pc, #664]	; (87a84 <_dtoa_r+0xce0>)
   877ec:	f005 020f 	and.w	r2, r5, #15
   877f0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   877f4:	e9d3 2300 	ldrd	r2, r3, [r3]
   877f8:	f7fc ffb4 	bl	84764 <__aeabi_dmul>
   877fc:	112d      	asrs	r5, r5, #4
   877fe:	e9cd 0102 	strd	r0, r1, [sp, #8]
   87802:	f000 81ce 	beq.w	87ba2 <_dtoa_r+0xdfe>
   87806:	2300      	movs	r3, #0
   87808:	2702      	movs	r7, #2
   8780a:	4e9f      	ldr	r6, [pc, #636]	; (87a88 <_dtoa_r+0xce4>)
   8780c:	07ea      	lsls	r2, r5, #31
   8780e:	d505      	bpl.n	8781c <_dtoa_r+0xa78>
   87810:	e9d6 2300 	ldrd	r2, r3, [r6]
   87814:	f7fc ffa6 	bl	84764 <__aeabi_dmul>
   87818:	2301      	movs	r3, #1
   8781a:	441f      	add	r7, r3
   8781c:	106d      	asrs	r5, r5, #1
   8781e:	f106 0608 	add.w	r6, r6, #8
   87822:	d1f3      	bne.n	8780c <_dtoa_r+0xa68>
   87824:	2b00      	cmp	r3, #0
   87826:	f43f ac23 	beq.w	87070 <_dtoa_r+0x2cc>
   8782a:	e9cd 0102 	strd	r0, r1, [sp, #8]
   8782e:	e41f      	b.n	87070 <_dtoa_r+0x2cc>
   87830:	9b02      	ldr	r3, [sp, #8]
   87832:	2b00      	cmp	r3, #0
   87834:	f43f af6d 	beq.w	87712 <_dtoa_r+0x96e>
   87838:	e726      	b.n	87688 <_dtoa_r+0x8e4>
   8783a:	6871      	ldr	r1, [r6, #4]
   8783c:	4620      	mov	r0, r4
   8783e:	f000 fefb 	bl	88638 <_Balloc>
   87842:	4605      	mov	r5, r0
   87844:	6933      	ldr	r3, [r6, #16]
   87846:	f106 010c 	add.w	r1, r6, #12
   8784a:	3302      	adds	r3, #2
   8784c:	009a      	lsls	r2, r3, #2
   8784e:	300c      	adds	r0, #12
   87850:	f000 fe16 	bl	88480 <memcpy>
   87854:	4629      	mov	r1, r5
   87856:	2201      	movs	r2, #1
   87858:	4620      	mov	r0, r4
   8785a:	f001 f8fb 	bl	88a54 <__lshift>
   8785e:	4682      	mov	sl, r0
   87860:	e622      	b.n	874a8 <_dtoa_r+0x704>
   87862:	2500      	movs	r5, #0
   87864:	4620      	mov	r0, r4
   87866:	6465      	str	r5, [r4, #68]	; 0x44
   87868:	4629      	mov	r1, r5
   8786a:	f000 fee5 	bl	88638 <_Balloc>
   8786e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
   87872:	9314      	str	r3, [sp, #80]	; 0x50
   87874:	9308      	str	r3, [sp, #32]
   87876:	2301      	movs	r3, #1
   87878:	4681      	mov	r9, r0
   8787a:	9523      	str	r5, [sp, #140]	; 0x8c
   8787c:	6420      	str	r0, [r4, #64]	; 0x40
   8787e:	9309      	str	r3, [sp, #36]	; 0x24
   87880:	e4b5      	b.n	871ee <_dtoa_r+0x44a>
   87882:	f000 ff09 	bl	88698 <__multadd>
   87886:	46a8      	mov	r8, r5
   87888:	4606      	mov	r6, r0
   8788a:	4682      	mov	sl, r0
   8788c:	e618      	b.n	874c0 <_dtoa_r+0x71c>
   8788e:	4620      	mov	r0, r4
   87890:	f000 fef8 	bl	88684 <_Bfree>
   87894:	2201      	movs	r2, #1
   87896:	e63c      	b.n	87512 <_dtoa_r+0x76e>
   87898:	9b22      	ldr	r3, [sp, #136]	; 0x88
   8789a:	2b02      	cmp	r3, #2
   8789c:	f77f adf7 	ble.w	8748e <_dtoa_r+0x6ea>
   878a0:	9b08      	ldr	r3, [sp, #32]
   878a2:	2b00      	cmp	r3, #0
   878a4:	f000 80d7 	beq.w	87a56 <_dtoa_r+0xcb2>
   878a8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
   878aa:	464d      	mov	r5, r9
   878ac:	43db      	mvns	r3, r3
   878ae:	9305      	str	r3, [sp, #20]
   878b0:	e78d      	b.n	877ce <_dtoa_r+0xa2a>
   878b2:	2331      	movs	r3, #49	; 0x31
   878b4:	9a05      	ldr	r2, [sp, #20]
   878b6:	f889 3000 	strb.w	r3, [r9]
   878ba:	3201      	adds	r2, #1
   878bc:	9205      	str	r2, [sp, #20]
   878be:	e6b5      	b.n	8762c <_dtoa_r+0x888>
   878c0:	2501      	movs	r5, #1
   878c2:	9523      	str	r5, [sp, #140]	; 0x8c
   878c4:	9508      	str	r5, [sp, #32]
   878c6:	f7ff bb89 	b.w	86fdc <_dtoa_r+0x238>
   878ca:	4638      	mov	r0, r7
   878cc:	f7fc fee0 	bl	84690 <__aeabi_i2d>
   878d0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   878d4:	f7fc ff46 	bl	84764 <__aeabi_dmul>
   878d8:	2200      	movs	r2, #0
   878da:	4b6c      	ldr	r3, [pc, #432]	; (87a8c <_dtoa_r+0xce8>)
   878dc:	f7fc fd8c 	bl	843f8 <__adddf3>
   878e0:	4605      	mov	r5, r0
   878e2:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   878e6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   878ea:	2200      	movs	r2, #0
   878ec:	4b64      	ldr	r3, [pc, #400]	; (87a80 <_dtoa_r+0xcdc>)
   878ee:	f7fc fd81 	bl	843f4 <__aeabi_dsub>
   878f2:	462a      	mov	r2, r5
   878f4:	4633      	mov	r3, r6
   878f6:	e9cd 0102 	strd	r0, r1, [sp, #8]
   878fa:	f7fd f9c3 	bl	84c84 <__aeabi_dcmpgt>
   878fe:	4607      	mov	r7, r0
   87900:	2800      	cmp	r0, #0
   87902:	d158      	bne.n	879b6 <_dtoa_r+0xc12>
   87904:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   87908:	462a      	mov	r2, r5
   8790a:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
   8790e:	f7fd f99b 	bl	84c48 <__aeabi_dcmplt>
   87912:	2800      	cmp	r0, #0
   87914:	f43f ac67 	beq.w	871e6 <_dtoa_r+0x442>
   87918:	463e      	mov	r6, r7
   8791a:	e7c5      	b.n	878a8 <_dtoa_r+0xb04>
   8791c:	2301      	movs	r3, #1
   8791e:	9309      	str	r3, [sp, #36]	; 0x24
   87920:	e6ca      	b.n	876b8 <_dtoa_r+0x914>
   87922:	4659      	mov	r1, fp
   87924:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
   87926:	4620      	mov	r0, r4
   87928:	f001 f844 	bl	889b4 <__pow5mult>
   8792c:	4683      	mov	fp, r0
   8792e:	e574      	b.n	8741a <_dtoa_r+0x676>
   87930:	f8dd b008 	ldr.w	fp, [sp, #8]
   87934:	e68a      	b.n	8764c <_dtoa_r+0x8a8>
   87936:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   87938:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   8793a:	eba8 0303 	sub.w	r3, r8, r3
   8793e:	441a      	add	r2, r3
   87940:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
   87944:	920c      	str	r2, [sp, #48]	; 0x30
   87946:	f04f 0800 	mov.w	r8, #0
   8794a:	e50d      	b.n	87368 <_dtoa_r+0x5c4>
   8794c:	2a00      	cmp	r2, #0
   8794e:	464b      	mov	r3, r9
   87950:	f108 0501 	add.w	r5, r8, #1
   87954:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
   87958:	f300 80c5 	bgt.w	87ae6 <_dtoa_r+0xd42>
   8795c:	9602      	str	r6, [sp, #8]
   8795e:	f888 3000 	strb.w	r3, [r8]
   87962:	4656      	mov	r6, sl
   87964:	e662      	b.n	8762c <_dtoa_r+0x888>
   87966:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
   8796a:	2702      	movs	r7, #2
   8796c:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
   87970:	f7ff bb65 	b.w	8703e <_dtoa_r+0x29a>
   87974:	464b      	mov	r3, r9
   87976:	2b39      	cmp	r3, #57	; 0x39
   87978:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
   8797c:	f000 80c5 	beq.w	87b0a <_dtoa_r+0xd66>
   87980:	3301      	adds	r3, #1
   87982:	9602      	str	r6, [sp, #8]
   87984:	f888 3000 	strb.w	r3, [r8]
   87988:	4656      	mov	r6, sl
   8798a:	e64f      	b.n	8762c <_dtoa_r+0x888>
   8798c:	9b06      	ldr	r3, [sp, #24]
   8798e:	9a08      	ldr	r2, [sp, #32]
   87990:	1a9b      	subs	r3, r3, r2
   87992:	930a      	str	r3, [sp, #40]	; 0x28
   87994:	e4f1      	b.n	8737a <_dtoa_r+0x5d6>
   87996:	464b      	mov	r3, r9
   87998:	9602      	str	r6, [sp, #8]
   8799a:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
   8799e:	4656      	mov	r6, sl
   879a0:	e61d      	b.n	875de <_dtoa_r+0x83a>
   879a2:	2330      	movs	r3, #48	; 0x30
   879a4:	f889 3000 	strb.w	r3, [r9]
   879a8:	9b05      	ldr	r3, [sp, #20]
   879aa:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   879ae:	3301      	adds	r3, #1
   879b0:	9305      	str	r3, [sp, #20]
   879b2:	464b      	mov	r3, r9
   879b4:	e4c3      	b.n	8733e <_dtoa_r+0x59a>
   879b6:	2700      	movs	r7, #0
   879b8:	463e      	mov	r6, r7
   879ba:	e700      	b.n	877be <_dtoa_r+0xa1a>
   879bc:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
   879c0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   879c4:	f7fc fece 	bl	84764 <__aeabi_dmul>
   879c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
   879ca:	e9cd 0102 	strd	r0, r1, [sp, #8]
   879ce:	2b01      	cmp	r3, #1
   879d0:	f889 8000 	strb.w	r8, [r9]
   879d4:	d021      	beq.n	87a1a <_dtoa_r+0xc76>
   879d6:	9b10      	ldr	r3, [sp, #64]	; 0x40
   879d8:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
   879dc:	444b      	add	r3, r9
   879de:	469a      	mov	sl, r3
   879e0:	2200      	movs	r2, #0
   879e2:	4b2b      	ldr	r3, [pc, #172]	; (87a90 <_dtoa_r+0xcec>)
   879e4:	4630      	mov	r0, r6
   879e6:	4639      	mov	r1, r7
   879e8:	f7fc febc 	bl	84764 <__aeabi_dmul>
   879ec:	460f      	mov	r7, r1
   879ee:	4606      	mov	r6, r0
   879f0:	f7fd f952 	bl	84c98 <__aeabi_d2iz>
   879f4:	4680      	mov	r8, r0
   879f6:	f7fc fe4b 	bl	84690 <__aeabi_i2d>
   879fa:	4602      	mov	r2, r0
   879fc:	460b      	mov	r3, r1
   879fe:	4630      	mov	r0, r6
   87a00:	4639      	mov	r1, r7
   87a02:	f7fc fcf7 	bl	843f4 <__aeabi_dsub>
   87a06:	f108 0830 	add.w	r8, r8, #48	; 0x30
   87a0a:	f805 8b01 	strb.w	r8, [r5], #1
   87a0e:	4555      	cmp	r5, sl
   87a10:	4606      	mov	r6, r0
   87a12:	460f      	mov	r7, r1
   87a14:	d1e4      	bne.n	879e0 <_dtoa_r+0xc3c>
   87a16:	f8dd a040 	ldr.w	sl, [sp, #64]	; 0x40
   87a1a:	2200      	movs	r2, #0
   87a1c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   87a20:	4b1c      	ldr	r3, [pc, #112]	; (87a94 <_dtoa_r+0xcf0>)
   87a22:	f7fc fce9 	bl	843f8 <__adddf3>
   87a26:	4632      	mov	r2, r6
   87a28:	463b      	mov	r3, r7
   87a2a:	f7fd f90d 	bl	84c48 <__aeabi_dcmplt>
   87a2e:	2800      	cmp	r0, #0
   87a30:	d071      	beq.n	87b16 <_dtoa_r+0xd72>
   87a32:	9b15      	ldr	r3, [sp, #84]	; 0x54
   87a34:	9305      	str	r3, [sp, #20]
   87a36:	f815 8c01 	ldrb.w	r8, [r5, #-1]
   87a3a:	e47b      	b.n	87334 <_dtoa_r+0x590>
   87a3c:	9b16      	ldr	r3, [sp, #88]	; 0x58
   87a3e:	9a06      	ldr	r2, [sp, #24]
   87a40:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   87a44:	920a      	str	r2, [sp, #40]	; 0x28
   87a46:	441a      	add	r2, r3
   87a48:	449a      	add	sl, r3
   87a4a:	9206      	str	r2, [sp, #24]
   87a4c:	f8dd 802c 	ldr.w	r8, [sp, #44]	; 0x2c
   87a50:	e493      	b.n	8737a <_dtoa_r+0x5d6>
   87a52:	2300      	movs	r3, #0
   87a54:	e66f      	b.n	87736 <_dtoa_r+0x992>
   87a56:	4639      	mov	r1, r7
   87a58:	2205      	movs	r2, #5
   87a5a:	4620      	mov	r0, r4
   87a5c:	f000 fe1c 	bl	88698 <__multadd>
   87a60:	4601      	mov	r1, r0
   87a62:	4607      	mov	r7, r0
   87a64:	4658      	mov	r0, fp
   87a66:	f001 f84f 	bl	88b08 <__mcmp>
   87a6a:	2800      	cmp	r0, #0
   87a6c:	f73f aea7 	bgt.w	877be <_dtoa_r+0xa1a>
   87a70:	e71a      	b.n	878a8 <_dtoa_r+0xb04>
   87a72:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
   87a76:	2702      	movs	r7, #2
   87a78:	e9cd 2302 	strd	r2, r3, [sp, #8]
   87a7c:	f7ff baf8 	b.w	87070 <_dtoa_r+0x2cc>
   87a80:	40140000 	.word	0x40140000
   87a84:	0008a200 	.word	0x0008a200
   87a88:	0008a2f0 	.word	0x0008a2f0
   87a8c:	401c0000 	.word	0x401c0000
   87a90:	40240000 	.word	0x40240000
   87a94:	3fe00000 	.word	0x3fe00000
   87a98:	9b08      	ldr	r3, [sp, #32]
   87a9a:	2b00      	cmp	r3, #0
   87a9c:	f43f af15 	beq.w	878ca <_dtoa_r+0xb26>
   87aa0:	9b14      	ldr	r3, [sp, #80]	; 0x50
   87aa2:	2b00      	cmp	r3, #0
   87aa4:	f77f ab9f 	ble.w	871e6 <_dtoa_r+0x442>
   87aa8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
   87aac:	2200      	movs	r2, #0
   87aae:	4b45      	ldr	r3, [pc, #276]	; (87bc4 <_dtoa_r+0xe20>)
   87ab0:	f7fc fe58 	bl	84764 <__aeabi_dmul>
   87ab4:	4605      	mov	r5, r0
   87ab6:	460e      	mov	r6, r1
   87ab8:	1c78      	adds	r0, r7, #1
   87aba:	e9cd 5602 	strd	r5, r6, [sp, #8]
   87abe:	f7fc fde7 	bl	84690 <__aeabi_i2d>
   87ac2:	462a      	mov	r2, r5
   87ac4:	4633      	mov	r3, r6
   87ac6:	f7fc fe4d 	bl	84764 <__aeabi_dmul>
   87aca:	2200      	movs	r2, #0
   87acc:	4b3e      	ldr	r3, [pc, #248]	; (87bc8 <_dtoa_r+0xe24>)
   87ace:	f7fc fc93 	bl	843f8 <__adddf3>
   87ad2:	9a05      	ldr	r2, [sp, #20]
   87ad4:	9b14      	ldr	r3, [sp, #80]	; 0x50
   87ad6:	3a01      	subs	r2, #1
   87ad8:	4605      	mov	r5, r0
   87ada:	9215      	str	r2, [sp, #84]	; 0x54
   87adc:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
   87ae0:	9310      	str	r3, [sp, #64]	; 0x40
   87ae2:	f7ff bae6 	b.w	870b2 <_dtoa_r+0x30e>
   87ae6:	4659      	mov	r1, fp
   87ae8:	2201      	movs	r2, #1
   87aea:	4620      	mov	r0, r4
   87aec:	9302      	str	r3, [sp, #8]
   87aee:	f000 ffb1 	bl	88a54 <__lshift>
   87af2:	4639      	mov	r1, r7
   87af4:	4683      	mov	fp, r0
   87af6:	f001 f807 	bl	88b08 <__mcmp>
   87afa:	2800      	cmp	r0, #0
   87afc:	9b02      	ldr	r3, [sp, #8]
   87afe:	dd36      	ble.n	87b6e <_dtoa_r+0xdca>
   87b00:	2b39      	cmp	r3, #57	; 0x39
   87b02:	d002      	beq.n	87b0a <_dtoa_r+0xd66>
   87b04:	9b09      	ldr	r3, [sp, #36]	; 0x24
   87b06:	3331      	adds	r3, #49	; 0x31
   87b08:	e728      	b.n	8795c <_dtoa_r+0xbb8>
   87b0a:	2239      	movs	r2, #57	; 0x39
   87b0c:	9602      	str	r6, [sp, #8]
   87b0e:	f888 2000 	strb.w	r2, [r8]
   87b12:	4656      	mov	r6, sl
   87b14:	e584      	b.n	87620 <_dtoa_r+0x87c>
   87b16:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
   87b1a:	2000      	movs	r0, #0
   87b1c:	492b      	ldr	r1, [pc, #172]	; (87bcc <_dtoa_r+0xe28>)
   87b1e:	f7fc fc69 	bl	843f4 <__aeabi_dsub>
   87b22:	4632      	mov	r2, r6
   87b24:	463b      	mov	r3, r7
   87b26:	f7fd f8ad 	bl	84c84 <__aeabi_dcmpgt>
   87b2a:	b910      	cbnz	r0, 87b32 <_dtoa_r+0xd8e>
   87b2c:	f7ff bb5b 	b.w	871e6 <_dtoa_r+0x442>
   87b30:	4615      	mov	r5, r2
   87b32:	f815 3c01 	ldrb.w	r3, [r5, #-1]
   87b36:	1e6a      	subs	r2, r5, #1
   87b38:	2b30      	cmp	r3, #48	; 0x30
   87b3a:	d0f9      	beq.n	87b30 <_dtoa_r+0xd8c>
   87b3c:	9b15      	ldr	r3, [sp, #84]	; 0x54
   87b3e:	9305      	str	r3, [sp, #20]
   87b40:	e584      	b.n	8764c <_dtoa_r+0x8a8>
   87b42:	4643      	mov	r3, r8
   87b44:	46a0      	mov	r8, r4
   87b46:	461c      	mov	r4, r3
   87b48:	f8dd b040 	ldr.w	fp, [sp, #64]	; 0x40
   87b4c:	f8dd 9008 	ldr.w	r9, [sp, #8]
   87b50:	9b15      	ldr	r3, [sp, #84]	; 0x54
   87b52:	9305      	str	r3, [sp, #20]
   87b54:	f7ff bbee 	b.w	87334 <_dtoa_r+0x590>
   87b58:	464b      	mov	r3, r9
   87b5a:	2b39      	cmp	r3, #57	; 0x39
   87b5c:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
   87b60:	f108 0501 	add.w	r5, r8, #1
   87b64:	d0d1      	beq.n	87b0a <_dtoa_r+0xd66>
   87b66:	9a02      	ldr	r2, [sp, #8]
   87b68:	2a00      	cmp	r2, #0
   87b6a:	dccb      	bgt.n	87b04 <_dtoa_r+0xd60>
   87b6c:	e6f6      	b.n	8795c <_dtoa_r+0xbb8>
   87b6e:	f47f aef5 	bne.w	8795c <_dtoa_r+0xbb8>
   87b72:	07da      	lsls	r2, r3, #31
   87b74:	f57f aef2 	bpl.w	8795c <_dtoa_r+0xbb8>
   87b78:	e7c2      	b.n	87b00 <_dtoa_r+0xd5c>
   87b7a:	4631      	mov	r1, r6
   87b7c:	2300      	movs	r3, #0
   87b7e:	220a      	movs	r2, #10
   87b80:	4620      	mov	r0, r4
   87b82:	f000 fd89 	bl	88698 <__multadd>
   87b86:	9b14      	ldr	r3, [sp, #80]	; 0x50
   87b88:	4606      	mov	r6, r0
   87b8a:	2b00      	cmp	r3, #0
   87b8c:	dd0c      	ble.n	87ba8 <_dtoa_r+0xe04>
   87b8e:	9308      	str	r3, [sp, #32]
   87b90:	e481      	b.n	87496 <_dtoa_r+0x6f2>
   87b92:	2700      	movs	r7, #0
   87b94:	463e      	mov	r6, r7
   87b96:	e687      	b.n	878a8 <_dtoa_r+0xb04>
   87b98:	9b22      	ldr	r3, [sp, #136]	; 0x88
   87b9a:	2b02      	cmp	r3, #2
   87b9c:	dc0e      	bgt.n	87bbc <_dtoa_r+0xe18>
   87b9e:	9b14      	ldr	r3, [sp, #80]	; 0x50
   87ba0:	e501      	b.n	875a6 <_dtoa_r+0x802>
   87ba2:	2702      	movs	r7, #2
   87ba4:	f7ff ba64 	b.w	87070 <_dtoa_r+0x2cc>
   87ba8:	9b22      	ldr	r3, [sp, #136]	; 0x88
   87baa:	2b02      	cmp	r3, #2
   87bac:	dc06      	bgt.n	87bbc <_dtoa_r+0xe18>
   87bae:	9b14      	ldr	r3, [sp, #80]	; 0x50
   87bb0:	e7ed      	b.n	87b8e <_dtoa_r+0xdea>
   87bb2:	f43f ac53 	beq.w	8745c <_dtoa_r+0x6b8>
   87bb6:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
   87bba:	e448      	b.n	8744e <_dtoa_r+0x6aa>
   87bbc:	9b14      	ldr	r3, [sp, #80]	; 0x50
   87bbe:	9308      	str	r3, [sp, #32]
   87bc0:	e66e      	b.n	878a0 <_dtoa_r+0xafc>
   87bc2:	bf00      	nop
   87bc4:	40240000 	.word	0x40240000
   87bc8:	401c0000 	.word	0x401c0000
   87bcc:	3fe00000 	.word	0x3fe00000

00087bd0 <_malloc_trim_r>:
   87bd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   87bd2:	460c      	mov	r4, r1
   87bd4:	4f23      	ldr	r7, [pc, #140]	; (87c64 <_malloc_trim_r+0x94>)
   87bd6:	4606      	mov	r6, r0
   87bd8:	f000 fd2a 	bl	88630 <__malloc_lock>
   87bdc:	68bb      	ldr	r3, [r7, #8]
   87bde:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
   87be2:	685d      	ldr	r5, [r3, #4]
   87be4:	310f      	adds	r1, #15
   87be6:	f025 0503 	bic.w	r5, r5, #3
   87bea:	4429      	add	r1, r5
   87bec:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   87bf0:	f021 010f 	bic.w	r1, r1, #15
   87bf4:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
   87bf8:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
   87bfc:	db07      	blt.n	87c0e <_malloc_trim_r+0x3e>
   87bfe:	2100      	movs	r1, #0
   87c00:	4630      	mov	r0, r6
   87c02:	f001 fb47 	bl	89294 <_sbrk_r>
   87c06:	68bb      	ldr	r3, [r7, #8]
   87c08:	442b      	add	r3, r5
   87c0a:	4298      	cmp	r0, r3
   87c0c:	d004      	beq.n	87c18 <_malloc_trim_r+0x48>
   87c0e:	4630      	mov	r0, r6
   87c10:	f000 fd10 	bl	88634 <__malloc_unlock>
   87c14:	2000      	movs	r0, #0
   87c16:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   87c18:	4261      	negs	r1, r4
   87c1a:	4630      	mov	r0, r6
   87c1c:	f001 fb3a 	bl	89294 <_sbrk_r>
   87c20:	3001      	adds	r0, #1
   87c22:	d00d      	beq.n	87c40 <_malloc_trim_r+0x70>
   87c24:	4b10      	ldr	r3, [pc, #64]	; (87c68 <_malloc_trim_r+0x98>)
   87c26:	68ba      	ldr	r2, [r7, #8]
   87c28:	6819      	ldr	r1, [r3, #0]
   87c2a:	1b2d      	subs	r5, r5, r4
   87c2c:	f045 0501 	orr.w	r5, r5, #1
   87c30:	4630      	mov	r0, r6
   87c32:	1b09      	subs	r1, r1, r4
   87c34:	6055      	str	r5, [r2, #4]
   87c36:	6019      	str	r1, [r3, #0]
   87c38:	f000 fcfc 	bl	88634 <__malloc_unlock>
   87c3c:	2001      	movs	r0, #1
   87c3e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   87c40:	2100      	movs	r1, #0
   87c42:	4630      	mov	r0, r6
   87c44:	f001 fb26 	bl	89294 <_sbrk_r>
   87c48:	68ba      	ldr	r2, [r7, #8]
   87c4a:	1a83      	subs	r3, r0, r2
   87c4c:	2b0f      	cmp	r3, #15
   87c4e:	ddde      	ble.n	87c0e <_malloc_trim_r+0x3e>
   87c50:	4906      	ldr	r1, [pc, #24]	; (87c6c <_malloc_trim_r+0x9c>)
   87c52:	f043 0301 	orr.w	r3, r3, #1
   87c56:	680c      	ldr	r4, [r1, #0]
   87c58:	4903      	ldr	r1, [pc, #12]	; (87c68 <_malloc_trim_r+0x98>)
   87c5a:	1b00      	subs	r0, r0, r4
   87c5c:	6053      	str	r3, [r2, #4]
   87c5e:	6008      	str	r0, [r1, #0]
   87c60:	e7d5      	b.n	87c0e <_malloc_trim_r+0x3e>
   87c62:	bf00      	nop
   87c64:	20070994 	.word	0x20070994
   87c68:	20070de8 	.word	0x20070de8
   87c6c:	20070d9c 	.word	0x20070d9c

00087c70 <_free_r>:
   87c70:	2900      	cmp	r1, #0
   87c72:	d053      	beq.n	87d1c <_free_r+0xac>
   87c74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   87c76:	460d      	mov	r5, r1
   87c78:	4606      	mov	r6, r0
   87c7a:	f000 fcd9 	bl	88630 <__malloc_lock>
   87c7e:	f855 cc04 	ldr.w	ip, [r5, #-4]
   87c82:	4f71      	ldr	r7, [pc, #452]	; (87e48 <_free_r+0x1d8>)
   87c84:	f1a5 0108 	sub.w	r1, r5, #8
   87c88:	f02c 0301 	bic.w	r3, ip, #1
   87c8c:	18ca      	adds	r2, r1, r3
   87c8e:	68b8      	ldr	r0, [r7, #8]
   87c90:	6854      	ldr	r4, [r2, #4]
   87c92:	4290      	cmp	r0, r2
   87c94:	f024 0403 	bic.w	r4, r4, #3
   87c98:	d053      	beq.n	87d42 <_free_r+0xd2>
   87c9a:	f01c 0f01 	tst.w	ip, #1
   87c9e:	6054      	str	r4, [r2, #4]
   87ca0:	eb02 0004 	add.w	r0, r2, r4
   87ca4:	d13b      	bne.n	87d1e <_free_r+0xae>
   87ca6:	f855 cc08 	ldr.w	ip, [r5, #-8]
   87caa:	6840      	ldr	r0, [r0, #4]
   87cac:	eba1 010c 	sub.w	r1, r1, ip
   87cb0:	688d      	ldr	r5, [r1, #8]
   87cb2:	f107 0e08 	add.w	lr, r7, #8
   87cb6:	4575      	cmp	r5, lr
   87cb8:	4463      	add	r3, ip
   87cba:	f000 0001 	and.w	r0, r0, #1
   87cbe:	d075      	beq.n	87dac <_free_r+0x13c>
   87cc0:	f8d1 c00c 	ldr.w	ip, [r1, #12]
   87cc4:	f8c5 c00c 	str.w	ip, [r5, #12]
   87cc8:	f8cc 5008 	str.w	r5, [ip, #8]
   87ccc:	b360      	cbz	r0, 87d28 <_free_r+0xb8>
   87cce:	f043 0201 	orr.w	r2, r3, #1
   87cd2:	604a      	str	r2, [r1, #4]
   87cd4:	50cb      	str	r3, [r1, r3]
   87cd6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   87cda:	d350      	bcc.n	87d7e <_free_r+0x10e>
   87cdc:	0a5a      	lsrs	r2, r3, #9
   87cde:	2a04      	cmp	r2, #4
   87ce0:	d870      	bhi.n	87dc4 <_free_r+0x154>
   87ce2:	099a      	lsrs	r2, r3, #6
   87ce4:	f102 0539 	add.w	r5, r2, #57	; 0x39
   87ce8:	00ed      	lsls	r5, r5, #3
   87cea:	f102 0038 	add.w	r0, r2, #56	; 0x38
   87cee:	197c      	adds	r4, r7, r5
   87cf0:	597a      	ldr	r2, [r7, r5]
   87cf2:	3c08      	subs	r4, #8
   87cf4:	4294      	cmp	r4, r2
   87cf6:	d078      	beq.n	87dea <_free_r+0x17a>
   87cf8:	6850      	ldr	r0, [r2, #4]
   87cfa:	f020 0003 	bic.w	r0, r0, #3
   87cfe:	4298      	cmp	r0, r3
   87d00:	d971      	bls.n	87de6 <_free_r+0x176>
   87d02:	6892      	ldr	r2, [r2, #8]
   87d04:	4294      	cmp	r4, r2
   87d06:	d1f7      	bne.n	87cf8 <_free_r+0x88>
   87d08:	68e3      	ldr	r3, [r4, #12]
   87d0a:	e9c1 4302 	strd	r4, r3, [r1, #8]
   87d0e:	4630      	mov	r0, r6
   87d10:	6099      	str	r1, [r3, #8]
   87d12:	60e1      	str	r1, [r4, #12]
   87d14:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   87d18:	f000 bc8c 	b.w	88634 <__malloc_unlock>
   87d1c:	4770      	bx	lr
   87d1e:	6840      	ldr	r0, [r0, #4]
   87d20:	f000 0001 	and.w	r0, r0, #1
   87d24:	2800      	cmp	r0, #0
   87d26:	d1d2      	bne.n	87cce <_free_r+0x5e>
   87d28:	6890      	ldr	r0, [r2, #8]
   87d2a:	4d48      	ldr	r5, [pc, #288]	; (87e4c <_free_r+0x1dc>)
   87d2c:	4423      	add	r3, r4
   87d2e:	42a8      	cmp	r0, r5
   87d30:	f043 0401 	orr.w	r4, r3, #1
   87d34:	d062      	beq.n	87dfc <_free_r+0x18c>
   87d36:	68d2      	ldr	r2, [r2, #12]
   87d38:	60c2      	str	r2, [r0, #12]
   87d3a:	6090      	str	r0, [r2, #8]
   87d3c:	604c      	str	r4, [r1, #4]
   87d3e:	50cb      	str	r3, [r1, r3]
   87d40:	e7c9      	b.n	87cd6 <_free_r+0x66>
   87d42:	f01c 0f01 	tst.w	ip, #1
   87d46:	4423      	add	r3, r4
   87d48:	d107      	bne.n	87d5a <_free_r+0xea>
   87d4a:	f855 4c08 	ldr.w	r4, [r5, #-8]
   87d4e:	1b09      	subs	r1, r1, r4
   87d50:	e9d1 0202 	ldrd	r0, r2, [r1, #8]
   87d54:	4423      	add	r3, r4
   87d56:	60c2      	str	r2, [r0, #12]
   87d58:	6090      	str	r0, [r2, #8]
   87d5a:	4a3d      	ldr	r2, [pc, #244]	; (87e50 <_free_r+0x1e0>)
   87d5c:	f043 0001 	orr.w	r0, r3, #1
   87d60:	6812      	ldr	r2, [r2, #0]
   87d62:	6048      	str	r0, [r1, #4]
   87d64:	429a      	cmp	r2, r3
   87d66:	60b9      	str	r1, [r7, #8]
   87d68:	d804      	bhi.n	87d74 <_free_r+0x104>
   87d6a:	4b3a      	ldr	r3, [pc, #232]	; (87e54 <_free_r+0x1e4>)
   87d6c:	4630      	mov	r0, r6
   87d6e:	6819      	ldr	r1, [r3, #0]
   87d70:	f7ff ff2e 	bl	87bd0 <_malloc_trim_r>
   87d74:	4630      	mov	r0, r6
   87d76:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   87d7a:	f000 bc5b 	b.w	88634 <__malloc_unlock>
   87d7e:	2201      	movs	r2, #1
   87d80:	08db      	lsrs	r3, r3, #3
   87d82:	687c      	ldr	r4, [r7, #4]
   87d84:	1098      	asrs	r0, r3, #2
   87d86:	4413      	add	r3, r2
   87d88:	4082      	lsls	r2, r0
   87d8a:	4322      	orrs	r2, r4
   87d8c:	eb07 00c3 	add.w	r0, r7, r3, lsl #3
   87d90:	f857 4033 	ldr.w	r4, [r7, r3, lsl #3]
   87d94:	3808      	subs	r0, #8
   87d96:	e9c1 4002 	strd	r4, r0, [r1, #8]
   87d9a:	607a      	str	r2, [r7, #4]
   87d9c:	4630      	mov	r0, r6
   87d9e:	f847 1033 	str.w	r1, [r7, r3, lsl #3]
   87da2:	60e1      	str	r1, [r4, #12]
   87da4:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   87da8:	f000 bc44 	b.w	88634 <__malloc_unlock>
   87dac:	2800      	cmp	r0, #0
   87dae:	d145      	bne.n	87e3c <_free_r+0x1cc>
   87db0:	e9d2 0202 	ldrd	r0, r2, [r2, #8]
   87db4:	4423      	add	r3, r4
   87db6:	f043 0401 	orr.w	r4, r3, #1
   87dba:	60c2      	str	r2, [r0, #12]
   87dbc:	6090      	str	r0, [r2, #8]
   87dbe:	604c      	str	r4, [r1, #4]
   87dc0:	50cb      	str	r3, [r1, r3]
   87dc2:	e7d7      	b.n	87d74 <_free_r+0x104>
   87dc4:	2a14      	cmp	r2, #20
   87dc6:	d908      	bls.n	87dda <_free_r+0x16a>
   87dc8:	2a54      	cmp	r2, #84	; 0x54
   87dca:	d81e      	bhi.n	87e0a <_free_r+0x19a>
   87dcc:	0b1a      	lsrs	r2, r3, #12
   87dce:	f102 056f 	add.w	r5, r2, #111	; 0x6f
   87dd2:	00ed      	lsls	r5, r5, #3
   87dd4:	f102 006e 	add.w	r0, r2, #110	; 0x6e
   87dd8:	e789      	b.n	87cee <_free_r+0x7e>
   87dda:	f102 055c 	add.w	r5, r2, #92	; 0x5c
   87dde:	00ed      	lsls	r5, r5, #3
   87de0:	f102 005b 	add.w	r0, r2, #91	; 0x5b
   87de4:	e783      	b.n	87cee <_free_r+0x7e>
   87de6:	4614      	mov	r4, r2
   87de8:	e78e      	b.n	87d08 <_free_r+0x98>
   87dea:	2301      	movs	r3, #1
   87dec:	1082      	asrs	r2, r0, #2
   87dee:	6878      	ldr	r0, [r7, #4]
   87df0:	fa03 f202 	lsl.w	r2, r3, r2
   87df4:	4302      	orrs	r2, r0
   87df6:	607a      	str	r2, [r7, #4]
   87df8:	4623      	mov	r3, r4
   87dfa:	e786      	b.n	87d0a <_free_r+0x9a>
   87dfc:	e9c7 1104 	strd	r1, r1, [r7, #16]
   87e00:	e9c1 0002 	strd	r0, r0, [r1, #8]
   87e04:	604c      	str	r4, [r1, #4]
   87e06:	50cb      	str	r3, [r1, r3]
   87e08:	e7b4      	b.n	87d74 <_free_r+0x104>
   87e0a:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   87e0e:	d806      	bhi.n	87e1e <_free_r+0x1ae>
   87e10:	0bda      	lsrs	r2, r3, #15
   87e12:	f102 0578 	add.w	r5, r2, #120	; 0x78
   87e16:	00ed      	lsls	r5, r5, #3
   87e18:	f102 0077 	add.w	r0, r2, #119	; 0x77
   87e1c:	e767      	b.n	87cee <_free_r+0x7e>
   87e1e:	f240 5054 	movw	r0, #1364	; 0x554
   87e22:	4282      	cmp	r2, r0
   87e24:	d806      	bhi.n	87e34 <_free_r+0x1c4>
   87e26:	0c9a      	lsrs	r2, r3, #18
   87e28:	f102 057d 	add.w	r5, r2, #125	; 0x7d
   87e2c:	00ed      	lsls	r5, r5, #3
   87e2e:	f102 007c 	add.w	r0, r2, #124	; 0x7c
   87e32:	e75c      	b.n	87cee <_free_r+0x7e>
   87e34:	f44f 757e 	mov.w	r5, #1016	; 0x3f8
   87e38:	207e      	movs	r0, #126	; 0x7e
   87e3a:	e758      	b.n	87cee <_free_r+0x7e>
   87e3c:	f043 0001 	orr.w	r0, r3, #1
   87e40:	6048      	str	r0, [r1, #4]
   87e42:	6013      	str	r3, [r2, #0]
   87e44:	e796      	b.n	87d74 <_free_r+0x104>
   87e46:	bf00      	nop
   87e48:	20070994 	.word	0x20070994
   87e4c:	2007099c 	.word	0x2007099c
   87e50:	20070da0 	.word	0x20070da0
   87e54:	20070de4 	.word	0x20070de4

00087e58 <__localeconv_l>:
   87e58:	30f0      	adds	r0, #240	; 0xf0
   87e5a:	4770      	bx	lr

00087e5c <_localeconv_r>:
   87e5c:	4800      	ldr	r0, [pc, #0]	; (87e60 <_localeconv_r+0x4>)
   87e5e:	4770      	bx	lr
   87e60:	20070918 	.word	0x20070918

00087e64 <localeconv>:
   87e64:	4800      	ldr	r0, [pc, #0]	; (87e68 <localeconv+0x4>)
   87e66:	4770      	bx	lr
   87e68:	20070918 	.word	0x20070918

00087e6c <_malloc_r>:
   87e6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   87e70:	f101 050b 	add.w	r5, r1, #11
   87e74:	2d16      	cmp	r5, #22
   87e76:	b083      	sub	sp, #12
   87e78:	4606      	mov	r6, r0
   87e7a:	d823      	bhi.n	87ec4 <_malloc_r+0x58>
   87e7c:	2910      	cmp	r1, #16
   87e7e:	f200 80b6 	bhi.w	87fee <_malloc_r+0x182>
   87e82:	f000 fbd5 	bl	88630 <__malloc_lock>
   87e86:	2510      	movs	r5, #16
   87e88:	2318      	movs	r3, #24
   87e8a:	2002      	movs	r0, #2
   87e8c:	4fd1      	ldr	r7, [pc, #836]	; (881d4 <_malloc_r+0x368>)
   87e8e:	443b      	add	r3, r7
   87e90:	685c      	ldr	r4, [r3, #4]
   87e92:	f1a3 0208 	sub.w	r2, r3, #8
   87e96:	4294      	cmp	r4, r2
   87e98:	f000 815f 	beq.w	8815a <_malloc_r+0x2ee>
   87e9c:	6863      	ldr	r3, [r4, #4]
   87e9e:	68e1      	ldr	r1, [r4, #12]
   87ea0:	f023 0303 	bic.w	r3, r3, #3
   87ea4:	4423      	add	r3, r4
   87ea6:	685a      	ldr	r2, [r3, #4]
   87ea8:	68a5      	ldr	r5, [r4, #8]
   87eaa:	f042 0201 	orr.w	r2, r2, #1
   87eae:	60e9      	str	r1, [r5, #12]
   87eb0:	4630      	mov	r0, r6
   87eb2:	608d      	str	r5, [r1, #8]
   87eb4:	605a      	str	r2, [r3, #4]
   87eb6:	f000 fbbd 	bl	88634 <__malloc_unlock>
   87eba:	3408      	adds	r4, #8
   87ebc:	4620      	mov	r0, r4
   87ebe:	b003      	add	sp, #12
   87ec0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   87ec4:	f035 0507 	bics.w	r5, r5, #7
   87ec8:	f100 8091 	bmi.w	87fee <_malloc_r+0x182>
   87ecc:	42a9      	cmp	r1, r5
   87ece:	f200 808e 	bhi.w	87fee <_malloc_r+0x182>
   87ed2:	f000 fbad 	bl	88630 <__malloc_lock>
   87ed6:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
   87eda:	f0c0 816d 	bcc.w	881b8 <_malloc_r+0x34c>
   87ede:	0a6b      	lsrs	r3, r5, #9
   87ee0:	f000 808c 	beq.w	87ffc <_malloc_r+0x190>
   87ee4:	2b04      	cmp	r3, #4
   87ee6:	f200 813f 	bhi.w	88168 <_malloc_r+0x2fc>
   87eea:	09ab      	lsrs	r3, r5, #6
   87eec:	f103 0039 	add.w	r0, r3, #57	; 0x39
   87ef0:	f103 0c38 	add.w	ip, r3, #56	; 0x38
   87ef4:	00c1      	lsls	r1, r0, #3
   87ef6:	4fb7      	ldr	r7, [pc, #732]	; (881d4 <_malloc_r+0x368>)
   87ef8:	4439      	add	r1, r7
   87efa:	684c      	ldr	r4, [r1, #4]
   87efc:	3908      	subs	r1, #8
   87efe:	42a1      	cmp	r1, r4
   87f00:	d106      	bne.n	87f10 <_malloc_r+0xa4>
   87f02:	e00c      	b.n	87f1e <_malloc_r+0xb2>
   87f04:	2a00      	cmp	r2, #0
   87f06:	f280 8124 	bge.w	88152 <_malloc_r+0x2e6>
   87f0a:	68e4      	ldr	r4, [r4, #12]
   87f0c:	42a1      	cmp	r1, r4
   87f0e:	d006      	beq.n	87f1e <_malloc_r+0xb2>
   87f10:	6863      	ldr	r3, [r4, #4]
   87f12:	f023 0303 	bic.w	r3, r3, #3
   87f16:	1b5a      	subs	r2, r3, r5
   87f18:	2a0f      	cmp	r2, #15
   87f1a:	ddf3      	ble.n	87f04 <_malloc_r+0x98>
   87f1c:	4660      	mov	r0, ip
   87f1e:	693c      	ldr	r4, [r7, #16]
   87f20:	f8df c2b4 	ldr.w	ip, [pc, #692]	; 881d8 <_malloc_r+0x36c>
   87f24:	4564      	cmp	r4, ip
   87f26:	d06f      	beq.n	88008 <_malloc_r+0x19c>
   87f28:	6863      	ldr	r3, [r4, #4]
   87f2a:	f023 0303 	bic.w	r3, r3, #3
   87f2e:	1b5a      	subs	r2, r3, r5
   87f30:	2a0f      	cmp	r2, #15
   87f32:	f300 812f 	bgt.w	88194 <_malloc_r+0x328>
   87f36:	2a00      	cmp	r2, #0
   87f38:	e9c7 cc04 	strd	ip, ip, [r7, #16]
   87f3c:	f280 8120 	bge.w	88180 <_malloc_r+0x314>
   87f40:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   87f44:	f080 815b 	bcs.w	881fe <_malloc_r+0x392>
   87f48:	2201      	movs	r2, #1
   87f4a:	08db      	lsrs	r3, r3, #3
   87f4c:	1099      	asrs	r1, r3, #2
   87f4e:	4413      	add	r3, r2
   87f50:	408a      	lsls	r2, r1
   87f52:	6879      	ldr	r1, [r7, #4]
   87f54:	f857 e033 	ldr.w	lr, [r7, r3, lsl #3]
   87f58:	eb07 08c3 	add.w	r8, r7, r3, lsl #3
   87f5c:	430a      	orrs	r2, r1
   87f5e:	f1a8 0108 	sub.w	r1, r8, #8
   87f62:	e9c4 e102 	strd	lr, r1, [r4, #8]
   87f66:	607a      	str	r2, [r7, #4]
   87f68:	f847 4033 	str.w	r4, [r7, r3, lsl #3]
   87f6c:	f8ce 400c 	str.w	r4, [lr, #12]
   87f70:	2401      	movs	r4, #1
   87f72:	1083      	asrs	r3, r0, #2
   87f74:	409c      	lsls	r4, r3
   87f76:	4294      	cmp	r4, r2
   87f78:	d84c      	bhi.n	88014 <_malloc_r+0x1a8>
   87f7a:	4214      	tst	r4, r2
   87f7c:	d106      	bne.n	87f8c <_malloc_r+0x120>
   87f7e:	f020 0003 	bic.w	r0, r0, #3
   87f82:	0064      	lsls	r4, r4, #1
   87f84:	4214      	tst	r4, r2
   87f86:	f100 0004 	add.w	r0, r0, #4
   87f8a:	d0fa      	beq.n	87f82 <_malloc_r+0x116>
   87f8c:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
   87f90:	46ce      	mov	lr, r9
   87f92:	4680      	mov	r8, r0
   87f94:	f8de 300c 	ldr.w	r3, [lr, #12]
   87f98:	459e      	cmp	lr, r3
   87f9a:	d107      	bne.n	87fac <_malloc_r+0x140>
   87f9c:	e110      	b.n	881c0 <_malloc_r+0x354>
   87f9e:	2a00      	cmp	r2, #0
   87fa0:	f280 811e 	bge.w	881e0 <_malloc_r+0x374>
   87fa4:	68db      	ldr	r3, [r3, #12]
   87fa6:	459e      	cmp	lr, r3
   87fa8:	f000 810a 	beq.w	881c0 <_malloc_r+0x354>
   87fac:	6859      	ldr	r1, [r3, #4]
   87fae:	f021 0103 	bic.w	r1, r1, #3
   87fb2:	1b4a      	subs	r2, r1, r5
   87fb4:	2a0f      	cmp	r2, #15
   87fb6:	ddf2      	ble.n	87f9e <_malloc_r+0x132>
   87fb8:	f045 0801 	orr.w	r8, r5, #1
   87fbc:	4630      	mov	r0, r6
   87fbe:	e9d3 e402 	ldrd	lr, r4, [r3, #8]
   87fc2:	441d      	add	r5, r3
   87fc4:	f042 0601 	orr.w	r6, r2, #1
   87fc8:	f8c3 8004 	str.w	r8, [r3, #4]
   87fcc:	f8ce 400c 	str.w	r4, [lr, #12]
   87fd0:	f8c4 e008 	str.w	lr, [r4, #8]
   87fd4:	e9c7 5504 	strd	r5, r5, [r7, #16]
   87fd8:	e9c5 cc02 	strd	ip, ip, [r5, #8]
   87fdc:	606e      	str	r6, [r5, #4]
   87fde:	505a      	str	r2, [r3, r1]
   87fe0:	9300      	str	r3, [sp, #0]
   87fe2:	f000 fb27 	bl	88634 <__malloc_unlock>
   87fe6:	9b00      	ldr	r3, [sp, #0]
   87fe8:	f103 0408 	add.w	r4, r3, #8
   87fec:	e766      	b.n	87ebc <_malloc_r+0x50>
   87fee:	2400      	movs	r4, #0
   87ff0:	230c      	movs	r3, #12
   87ff2:	4620      	mov	r0, r4
   87ff4:	6033      	str	r3, [r6, #0]
   87ff6:	b003      	add	sp, #12
   87ff8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   87ffc:	f44f 7100 	mov.w	r1, #512	; 0x200
   88000:	2040      	movs	r0, #64	; 0x40
   88002:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
   88006:	e776      	b.n	87ef6 <_malloc_r+0x8a>
   88008:	2401      	movs	r4, #1
   8800a:	687a      	ldr	r2, [r7, #4]
   8800c:	1083      	asrs	r3, r0, #2
   8800e:	409c      	lsls	r4, r3
   88010:	4294      	cmp	r4, r2
   88012:	d9b2      	bls.n	87f7a <_malloc_r+0x10e>
   88014:	68bc      	ldr	r4, [r7, #8]
   88016:	6863      	ldr	r3, [r4, #4]
   88018:	f023 0903 	bic.w	r9, r3, #3
   8801c:	45a9      	cmp	r9, r5
   8801e:	d304      	bcc.n	8802a <_malloc_r+0x1be>
   88020:	eba9 0305 	sub.w	r3, r9, r5
   88024:	2b0f      	cmp	r3, #15
   88026:	f300 8084 	bgt.w	88132 <_malloc_r+0x2c6>
   8802a:	f8df a1b0 	ldr.w	sl, [pc, #432]	; 881dc <_malloc_r+0x370>
   8802e:	f8d7 2408 	ldr.w	r2, [r7, #1032]	; 0x408
   88032:	f8da 3000 	ldr.w	r3, [sl]
   88036:	3201      	adds	r2, #1
   88038:	eb05 0803 	add.w	r8, r5, r3
   8803c:	f000 813b 	beq.w	882b6 <_malloc_r+0x44a>
   88040:	f508 5880 	add.w	r8, r8, #4096	; 0x1000
   88044:	f108 080f 	add.w	r8, r8, #15
   88048:	f428 687f 	bic.w	r8, r8, #4080	; 0xff0
   8804c:	f028 080f 	bic.w	r8, r8, #15
   88050:	4641      	mov	r1, r8
   88052:	4630      	mov	r0, r6
   88054:	f001 f91e 	bl	89294 <_sbrk_r>
   88058:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
   8805c:	4683      	mov	fp, r0
   8805e:	f000 80f7 	beq.w	88250 <_malloc_r+0x3e4>
   88062:	eb04 0009 	add.w	r0, r4, r9
   88066:	4558      	cmp	r0, fp
   88068:	f200 80f0 	bhi.w	8824c <_malloc_r+0x3e0>
   8806c:	f8da 2004 	ldr.w	r2, [sl, #4]
   88070:	eb08 0102 	add.w	r1, r8, r2
   88074:	f8ca 1004 	str.w	r1, [sl, #4]
   88078:	f000 814e 	beq.w	88318 <_malloc_r+0x4ac>
   8807c:	f8d7 3408 	ldr.w	r3, [r7, #1032]	; 0x408
   88080:	3301      	adds	r3, #1
   88082:	bf1b      	ittet	ne
   88084:	ebab 0200 	subne.w	r2, fp, r0
   88088:	1852      	addne	r2, r2, r1
   8808a:	f8c7 b408 	streq.w	fp, [r7, #1032]	; 0x408
   8808e:	f8ca 2004 	strne.w	r2, [sl, #4]
   88092:	f01b 0307 	ands.w	r3, fp, #7
   88096:	f000 8124 	beq.w	882e2 <_malloc_r+0x476>
   8809a:	f1c3 0208 	rsb	r2, r3, #8
   8809e:	4493      	add	fp, r2
   880a0:	f5c3 5280 	rsb	r2, r3, #4096	; 0x1000
   880a4:	44d8      	add	r8, fp
   880a6:	3208      	adds	r2, #8
   880a8:	eba2 0208 	sub.w	r2, r2, r8
   880ac:	f3c2 020b 	ubfx	r2, r2, #0, #12
   880b0:	4611      	mov	r1, r2
   880b2:	4630      	mov	r0, r6
   880b4:	9301      	str	r3, [sp, #4]
   880b6:	9200      	str	r2, [sp, #0]
   880b8:	f001 f8ec 	bl	89294 <_sbrk_r>
   880bc:	1c42      	adds	r2, r0, #1
   880be:	e9dd 2300 	ldrd	r2, r3, [sp]
   880c2:	f000 815a 	beq.w	8837a <_malloc_r+0x50e>
   880c6:	f8da 1004 	ldr.w	r1, [sl, #4]
   880ca:	eba0 030b 	sub.w	r3, r0, fp
   880ce:	4413      	add	r3, r2
   880d0:	f043 0301 	orr.w	r3, r3, #1
   880d4:	4411      	add	r1, r2
   880d6:	42bc      	cmp	r4, r7
   880d8:	f8c7 b008 	str.w	fp, [r7, #8]
   880dc:	f8ca 1004 	str.w	r1, [sl, #4]
   880e0:	f8cb 3004 	str.w	r3, [fp, #4]
   880e4:	d014      	beq.n	88110 <_malloc_r+0x2a4>
   880e6:	f1b9 0f0f 	cmp.w	r9, #15
   880ea:	f240 812c 	bls.w	88346 <_malloc_r+0x4da>
   880ee:	f04f 0c05 	mov.w	ip, #5
   880f2:	6863      	ldr	r3, [r4, #4]
   880f4:	f1a9 020c 	sub.w	r2, r9, #12
   880f8:	f022 0207 	bic.w	r2, r2, #7
   880fc:	f003 0301 	and.w	r3, r3, #1
   88100:	4313      	orrs	r3, r2
   88102:	18a0      	adds	r0, r4, r2
   88104:	2a0f      	cmp	r2, #15
   88106:	6063      	str	r3, [r4, #4]
   88108:	e9c0 cc01 	strd	ip, ip, [r0, #4]
   8810c:	f200 813a 	bhi.w	88384 <_malloc_r+0x518>
   88110:	f8da 302c 	ldr.w	r3, [sl, #44]	; 0x2c
   88114:	68bc      	ldr	r4, [r7, #8]
   88116:	4299      	cmp	r1, r3
   88118:	f8da 3030 	ldr.w	r3, [sl, #48]	; 0x30
   8811c:	6862      	ldr	r2, [r4, #4]
   8811e:	bf88      	it	hi
   88120:	f8ca 102c 	strhi.w	r1, [sl, #44]	; 0x2c
   88124:	4299      	cmp	r1, r3
   88126:	f022 0203 	bic.w	r2, r2, #3
   8812a:	bf88      	it	hi
   8812c:	f8ca 1030 	strhi.w	r1, [sl, #48]	; 0x30
   88130:	e092      	b.n	88258 <_malloc_r+0x3ec>
   88132:	f045 0201 	orr.w	r2, r5, #1
   88136:	f043 0301 	orr.w	r3, r3, #1
   8813a:	4425      	add	r5, r4
   8813c:	6062      	str	r2, [r4, #4]
   8813e:	4630      	mov	r0, r6
   88140:	60bd      	str	r5, [r7, #8]
   88142:	3408      	adds	r4, #8
   88144:	606b      	str	r3, [r5, #4]
   88146:	f000 fa75 	bl	88634 <__malloc_unlock>
   8814a:	4620      	mov	r0, r4
   8814c:	b003      	add	sp, #12
   8814e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   88152:	4423      	add	r3, r4
   88154:	685a      	ldr	r2, [r3, #4]
   88156:	68e1      	ldr	r1, [r4, #12]
   88158:	e6a6      	b.n	87ea8 <_malloc_r+0x3c>
   8815a:	68dc      	ldr	r4, [r3, #12]
   8815c:	42a3      	cmp	r3, r4
   8815e:	bf08      	it	eq
   88160:	3002      	addeq	r0, #2
   88162:	f43f aedc 	beq.w	87f1e <_malloc_r+0xb2>
   88166:	e699      	b.n	87e9c <_malloc_r+0x30>
   88168:	2b14      	cmp	r3, #20
   8816a:	d969      	bls.n	88240 <_malloc_r+0x3d4>
   8816c:	2b54      	cmp	r3, #84	; 0x54
   8816e:	f200 80a5 	bhi.w	882bc <_malloc_r+0x450>
   88172:	0b2b      	lsrs	r3, r5, #12
   88174:	f103 006f 	add.w	r0, r3, #111	; 0x6f
   88178:	f103 0c6e 	add.w	ip, r3, #110	; 0x6e
   8817c:	00c1      	lsls	r1, r0, #3
   8817e:	e6ba      	b.n	87ef6 <_malloc_r+0x8a>
   88180:	4423      	add	r3, r4
   88182:	685a      	ldr	r2, [r3, #4]
   88184:	4630      	mov	r0, r6
   88186:	f042 0201 	orr.w	r2, r2, #1
   8818a:	605a      	str	r2, [r3, #4]
   8818c:	3408      	adds	r4, #8
   8818e:	f000 fa51 	bl	88634 <__malloc_unlock>
   88192:	e693      	b.n	87ebc <_malloc_r+0x50>
   88194:	f045 0e01 	orr.w	lr, r5, #1
   88198:	f042 0101 	orr.w	r1, r2, #1
   8819c:	4425      	add	r5, r4
   8819e:	f8c4 e004 	str.w	lr, [r4, #4]
   881a2:	4630      	mov	r0, r6
   881a4:	e9c7 5504 	strd	r5, r5, [r7, #16]
   881a8:	e9c5 cc02 	strd	ip, ip, [r5, #8]
   881ac:	6069      	str	r1, [r5, #4]
   881ae:	50e2      	str	r2, [r4, r3]
   881b0:	f000 fa40 	bl	88634 <__malloc_unlock>
   881b4:	3408      	adds	r4, #8
   881b6:	e681      	b.n	87ebc <_malloc_r+0x50>
   881b8:	08e8      	lsrs	r0, r5, #3
   881ba:	f105 0308 	add.w	r3, r5, #8
   881be:	e665      	b.n	87e8c <_malloc_r+0x20>
   881c0:	f108 0801 	add.w	r8, r8, #1
   881c4:	f018 0f03 	tst.w	r8, #3
   881c8:	f10e 0e08 	add.w	lr, lr, #8
   881cc:	f47f aee2 	bne.w	87f94 <_malloc_r+0x128>
   881d0:	e059      	b.n	88286 <_malloc_r+0x41a>
   881d2:	bf00      	nop
   881d4:	20070994 	.word	0x20070994
   881d8:	2007099c 	.word	0x2007099c
   881dc:	20070de4 	.word	0x20070de4
   881e0:	461c      	mov	r4, r3
   881e2:	4419      	add	r1, r3
   881e4:	684a      	ldr	r2, [r1, #4]
   881e6:	68db      	ldr	r3, [r3, #12]
   881e8:	f854 5f08 	ldr.w	r5, [r4, #8]!
   881ec:	f042 0201 	orr.w	r2, r2, #1
   881f0:	604a      	str	r2, [r1, #4]
   881f2:	4630      	mov	r0, r6
   881f4:	60eb      	str	r3, [r5, #12]
   881f6:	609d      	str	r5, [r3, #8]
   881f8:	f000 fa1c 	bl	88634 <__malloc_unlock>
   881fc:	e65e      	b.n	87ebc <_malloc_r+0x50>
   881fe:	0a5a      	lsrs	r2, r3, #9
   88200:	2a04      	cmp	r2, #4
   88202:	d935      	bls.n	88270 <_malloc_r+0x404>
   88204:	2a14      	cmp	r2, #20
   88206:	d87f      	bhi.n	88308 <_malloc_r+0x49c>
   88208:	f102 015c 	add.w	r1, r2, #92	; 0x5c
   8820c:	00c9      	lsls	r1, r1, #3
   8820e:	325b      	adds	r2, #91	; 0x5b
   88210:	eb07 0e01 	add.w	lr, r7, r1
   88214:	5879      	ldr	r1, [r7, r1]
   88216:	f1ae 0e08 	sub.w	lr, lr, #8
   8821a:	458e      	cmp	lr, r1
   8821c:	d058      	beq.n	882d0 <_malloc_r+0x464>
   8821e:	684a      	ldr	r2, [r1, #4]
   88220:	f022 0203 	bic.w	r2, r2, #3
   88224:	429a      	cmp	r2, r3
   88226:	d902      	bls.n	8822e <_malloc_r+0x3c2>
   88228:	6889      	ldr	r1, [r1, #8]
   8822a:	458e      	cmp	lr, r1
   8822c:	d1f7      	bne.n	8821e <_malloc_r+0x3b2>
   8822e:	f8d1 e00c 	ldr.w	lr, [r1, #12]
   88232:	687a      	ldr	r2, [r7, #4]
   88234:	e9c4 1e02 	strd	r1, lr, [r4, #8]
   88238:	f8ce 4008 	str.w	r4, [lr, #8]
   8823c:	60cc      	str	r4, [r1, #12]
   8823e:	e697      	b.n	87f70 <_malloc_r+0x104>
   88240:	f103 005c 	add.w	r0, r3, #92	; 0x5c
   88244:	f103 0c5b 	add.w	ip, r3, #91	; 0x5b
   88248:	00c1      	lsls	r1, r0, #3
   8824a:	e654      	b.n	87ef6 <_malloc_r+0x8a>
   8824c:	42bc      	cmp	r4, r7
   8824e:	d07e      	beq.n	8834e <_malloc_r+0x4e2>
   88250:	68bc      	ldr	r4, [r7, #8]
   88252:	6862      	ldr	r2, [r4, #4]
   88254:	f022 0203 	bic.w	r2, r2, #3
   88258:	4295      	cmp	r5, r2
   8825a:	eba2 0305 	sub.w	r3, r2, r5
   8825e:	d802      	bhi.n	88266 <_malloc_r+0x3fa>
   88260:	2b0f      	cmp	r3, #15
   88262:	f73f af66 	bgt.w	88132 <_malloc_r+0x2c6>
   88266:	4630      	mov	r0, r6
   88268:	f000 f9e4 	bl	88634 <__malloc_unlock>
   8826c:	2400      	movs	r4, #0
   8826e:	e625      	b.n	87ebc <_malloc_r+0x50>
   88270:	099a      	lsrs	r2, r3, #6
   88272:	f102 0139 	add.w	r1, r2, #57	; 0x39
   88276:	00c9      	lsls	r1, r1, #3
   88278:	3238      	adds	r2, #56	; 0x38
   8827a:	e7c9      	b.n	88210 <_malloc_r+0x3a4>
   8827c:	f8d9 9000 	ldr.w	r9, [r9]
   88280:	4599      	cmp	r9, r3
   88282:	f040 8095 	bne.w	883b0 <_malloc_r+0x544>
   88286:	f010 0f03 	tst.w	r0, #3
   8828a:	f1a9 0308 	sub.w	r3, r9, #8
   8828e:	f100 30ff 	add.w	r0, r0, #4294967295	; 0xffffffff
   88292:	d1f3      	bne.n	8827c <_malloc_r+0x410>
   88294:	687b      	ldr	r3, [r7, #4]
   88296:	ea23 0304 	bic.w	r3, r3, r4
   8829a:	607b      	str	r3, [r7, #4]
   8829c:	0064      	lsls	r4, r4, #1
   8829e:	429c      	cmp	r4, r3
   882a0:	f63f aeb8 	bhi.w	88014 <_malloc_r+0x1a8>
   882a4:	b91c      	cbnz	r4, 882ae <_malloc_r+0x442>
   882a6:	e6b5      	b.n	88014 <_malloc_r+0x1a8>
   882a8:	0064      	lsls	r4, r4, #1
   882aa:	f108 0804 	add.w	r8, r8, #4
   882ae:	421c      	tst	r4, r3
   882b0:	d0fa      	beq.n	882a8 <_malloc_r+0x43c>
   882b2:	4640      	mov	r0, r8
   882b4:	e66a      	b.n	87f8c <_malloc_r+0x120>
   882b6:	f108 0810 	add.w	r8, r8, #16
   882ba:	e6c9      	b.n	88050 <_malloc_r+0x1e4>
   882bc:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   882c0:	d836      	bhi.n	88330 <_malloc_r+0x4c4>
   882c2:	0beb      	lsrs	r3, r5, #15
   882c4:	f103 0078 	add.w	r0, r3, #120	; 0x78
   882c8:	f103 0c77 	add.w	ip, r3, #119	; 0x77
   882cc:	00c1      	lsls	r1, r0, #3
   882ce:	e612      	b.n	87ef6 <_malloc_r+0x8a>
   882d0:	f04f 0801 	mov.w	r8, #1
   882d4:	687b      	ldr	r3, [r7, #4]
   882d6:	1092      	asrs	r2, r2, #2
   882d8:	fa08 f202 	lsl.w	r2, r8, r2
   882dc:	431a      	orrs	r2, r3
   882de:	607a      	str	r2, [r7, #4]
   882e0:	e7a8      	b.n	88234 <_malloc_r+0x3c8>
   882e2:	44d8      	add	r8, fp
   882e4:	f1c8 0200 	rsb	r2, r8, #0
   882e8:	f3c2 020b 	ubfx	r2, r2, #0, #12
   882ec:	4611      	mov	r1, r2
   882ee:	4630      	mov	r0, r6
   882f0:	9301      	str	r3, [sp, #4]
   882f2:	9200      	str	r2, [sp, #0]
   882f4:	f000 ffce 	bl	89294 <_sbrk_r>
   882f8:	1c43      	adds	r3, r0, #1
   882fa:	e9dd 2300 	ldrd	r2, r3, [sp]
   882fe:	f47f aee2 	bne.w	880c6 <_malloc_r+0x25a>
   88302:	4640      	mov	r0, r8
   88304:	461a      	mov	r2, r3
   88306:	e6de      	b.n	880c6 <_malloc_r+0x25a>
   88308:	2a54      	cmp	r2, #84	; 0x54
   8830a:	d827      	bhi.n	8835c <_malloc_r+0x4f0>
   8830c:	0b1a      	lsrs	r2, r3, #12
   8830e:	f102 016f 	add.w	r1, r2, #111	; 0x6f
   88312:	00c9      	lsls	r1, r1, #3
   88314:	326e      	adds	r2, #110	; 0x6e
   88316:	e77b      	b.n	88210 <_malloc_r+0x3a4>
   88318:	f3c0 030b 	ubfx	r3, r0, #0, #12
   8831c:	2b00      	cmp	r3, #0
   8831e:	f47f aead 	bne.w	8807c <_malloc_r+0x210>
   88322:	eb09 0308 	add.w	r3, r9, r8
   88326:	68ba      	ldr	r2, [r7, #8]
   88328:	f043 0301 	orr.w	r3, r3, #1
   8832c:	6053      	str	r3, [r2, #4]
   8832e:	e6ef      	b.n	88110 <_malloc_r+0x2a4>
   88330:	f240 5254 	movw	r2, #1364	; 0x554
   88334:	4293      	cmp	r3, r2
   88336:	d81a      	bhi.n	8836e <_malloc_r+0x502>
   88338:	0cab      	lsrs	r3, r5, #18
   8833a:	f103 007d 	add.w	r0, r3, #125	; 0x7d
   8833e:	f103 0c7c 	add.w	ip, r3, #124	; 0x7c
   88342:	00c1      	lsls	r1, r0, #3
   88344:	e5d7      	b.n	87ef6 <_malloc_r+0x8a>
   88346:	2301      	movs	r3, #1
   88348:	f8cb 3004 	str.w	r3, [fp, #4]
   8834c:	e78b      	b.n	88266 <_malloc_r+0x3fa>
   8834e:	f8da 2004 	ldr.w	r2, [sl, #4]
   88352:	eb08 0102 	add.w	r1, r8, r2
   88356:	f8ca 1004 	str.w	r1, [sl, #4]
   8835a:	e68f      	b.n	8807c <_malloc_r+0x210>
   8835c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   88360:	d818      	bhi.n	88394 <_malloc_r+0x528>
   88362:	0bda      	lsrs	r2, r3, #15
   88364:	f102 0178 	add.w	r1, r2, #120	; 0x78
   88368:	00c9      	lsls	r1, r1, #3
   8836a:	3277      	adds	r2, #119	; 0x77
   8836c:	e750      	b.n	88210 <_malloc_r+0x3a4>
   8836e:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   88372:	207f      	movs	r0, #127	; 0x7f
   88374:	f04f 0c7e 	mov.w	ip, #126	; 0x7e
   88378:	e5bd      	b.n	87ef6 <_malloc_r+0x8a>
   8837a:	3b08      	subs	r3, #8
   8837c:	2200      	movs	r2, #0
   8837e:	eb08 0003 	add.w	r0, r8, r3
   88382:	e6a0      	b.n	880c6 <_malloc_r+0x25a>
   88384:	f104 0108 	add.w	r1, r4, #8
   88388:	4630      	mov	r0, r6
   8838a:	f7ff fc71 	bl	87c70 <_free_r>
   8838e:	f8da 1004 	ldr.w	r1, [sl, #4]
   88392:	e6bd      	b.n	88110 <_malloc_r+0x2a4>
   88394:	f240 5154 	movw	r1, #1364	; 0x554
   88398:	428a      	cmp	r2, r1
   8839a:	d805      	bhi.n	883a8 <_malloc_r+0x53c>
   8839c:	0c9a      	lsrs	r2, r3, #18
   8839e:	f102 017d 	add.w	r1, r2, #125	; 0x7d
   883a2:	00c9      	lsls	r1, r1, #3
   883a4:	327c      	adds	r2, #124	; 0x7c
   883a6:	e733      	b.n	88210 <_malloc_r+0x3a4>
   883a8:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
   883ac:	227e      	movs	r2, #126	; 0x7e
   883ae:	e72f      	b.n	88210 <_malloc_r+0x3a4>
   883b0:	687b      	ldr	r3, [r7, #4]
   883b2:	e773      	b.n	8829c <_malloc_r+0x430>

000883b4 <_mbtowc_r>:
   883b4:	b410      	push	{r4}
   883b6:	4c03      	ldr	r4, [pc, #12]	; (883c4 <_mbtowc_r+0x10>)
   883b8:	f8d4 40e4 	ldr.w	r4, [r4, #228]	; 0xe4
   883bc:	46a4      	mov	ip, r4
   883be:	bc10      	pop	{r4}
   883c0:	4760      	bx	ip
   883c2:	bf00      	nop
   883c4:	20070828 	.word	0x20070828

000883c8 <__ascii_mbtowc>:
   883c8:	b082      	sub	sp, #8
   883ca:	b149      	cbz	r1, 883e0 <__ascii_mbtowc+0x18>
   883cc:	b15a      	cbz	r2, 883e6 <__ascii_mbtowc+0x1e>
   883ce:	b16b      	cbz	r3, 883ec <__ascii_mbtowc+0x24>
   883d0:	7813      	ldrb	r3, [r2, #0]
   883d2:	600b      	str	r3, [r1, #0]
   883d4:	7812      	ldrb	r2, [r2, #0]
   883d6:	1c10      	adds	r0, r2, #0
   883d8:	bf18      	it	ne
   883da:	2001      	movne	r0, #1
   883dc:	b002      	add	sp, #8
   883de:	4770      	bx	lr
   883e0:	a901      	add	r1, sp, #4
   883e2:	2a00      	cmp	r2, #0
   883e4:	d1f3      	bne.n	883ce <__ascii_mbtowc+0x6>
   883e6:	4610      	mov	r0, r2
   883e8:	b002      	add	sp, #8
   883ea:	4770      	bx	lr
   883ec:	f06f 0001 	mvn.w	r0, #1
   883f0:	e7f4      	b.n	883dc <__ascii_mbtowc+0x14>
   883f2:	bf00      	nop

000883f4 <memchr>:
   883f4:	0783      	lsls	r3, r0, #30
   883f6:	b470      	push	{r4, r5, r6}
   883f8:	b2cd      	uxtb	r5, r1
   883fa:	d03d      	beq.n	88478 <memchr+0x84>
   883fc:	1e54      	subs	r4, r2, #1
   883fe:	b30a      	cbz	r2, 88444 <memchr+0x50>
   88400:	7803      	ldrb	r3, [r0, #0]
   88402:	42ab      	cmp	r3, r5
   88404:	d01f      	beq.n	88446 <memchr+0x52>
   88406:	1c43      	adds	r3, r0, #1
   88408:	e005      	b.n	88416 <memchr+0x22>
   8840a:	f114 34ff 	adds.w	r4, r4, #4294967295	; 0xffffffff
   8840e:	d319      	bcc.n	88444 <memchr+0x50>
   88410:	7802      	ldrb	r2, [r0, #0]
   88412:	42aa      	cmp	r2, r5
   88414:	d017      	beq.n	88446 <memchr+0x52>
   88416:	f013 0f03 	tst.w	r3, #3
   8841a:	4618      	mov	r0, r3
   8841c:	f103 0301 	add.w	r3, r3, #1
   88420:	d1f3      	bne.n	8840a <memchr+0x16>
   88422:	2c03      	cmp	r4, #3
   88424:	d811      	bhi.n	8844a <memchr+0x56>
   88426:	b34c      	cbz	r4, 8847c <memchr+0x88>
   88428:	7803      	ldrb	r3, [r0, #0]
   8842a:	42ab      	cmp	r3, r5
   8842c:	d00b      	beq.n	88446 <memchr+0x52>
   8842e:	4404      	add	r4, r0
   88430:	1c43      	adds	r3, r0, #1
   88432:	e002      	b.n	8843a <memchr+0x46>
   88434:	7802      	ldrb	r2, [r0, #0]
   88436:	42aa      	cmp	r2, r5
   88438:	d005      	beq.n	88446 <memchr+0x52>
   8843a:	429c      	cmp	r4, r3
   8843c:	4618      	mov	r0, r3
   8843e:	f103 0301 	add.w	r3, r3, #1
   88442:	d1f7      	bne.n	88434 <memchr+0x40>
   88444:	2000      	movs	r0, #0
   88446:	bc70      	pop	{r4, r5, r6}
   88448:	4770      	bx	lr
   8844a:	4606      	mov	r6, r0
   8844c:	020a      	lsls	r2, r1, #8
   8844e:	b292      	uxth	r2, r2
   88450:	432a      	orrs	r2, r5
   88452:	ea42 4202 	orr.w	r2, r2, r2, lsl #16
   88456:	6833      	ldr	r3, [r6, #0]
   88458:	4630      	mov	r0, r6
   8845a:	4053      	eors	r3, r2
   8845c:	f1a3 3101 	sub.w	r1, r3, #16843009	; 0x1010101
   88460:	ea21 0303 	bic.w	r3, r1, r3
   88464:	f013 3f80 	tst.w	r3, #2155905152	; 0x80808080
   88468:	f106 0604 	add.w	r6, r6, #4
   8846c:	d1dc      	bne.n	88428 <memchr+0x34>
   8846e:	3c04      	subs	r4, #4
   88470:	2c03      	cmp	r4, #3
   88472:	4630      	mov	r0, r6
   88474:	d8ef      	bhi.n	88456 <memchr+0x62>
   88476:	e7d6      	b.n	88426 <memchr+0x32>
   88478:	4614      	mov	r4, r2
   8847a:	e7d2      	b.n	88422 <memchr+0x2e>
   8847c:	4620      	mov	r0, r4
   8847e:	e7e2      	b.n	88446 <memchr+0x52>

00088480 <memcpy>:
   88480:	4684      	mov	ip, r0
   88482:	ea41 0300 	orr.w	r3, r1, r0
   88486:	f013 0303 	ands.w	r3, r3, #3
   8848a:	d149      	bne.n	88520 <memcpy+0xa0>
   8848c:	3a40      	subs	r2, #64	; 0x40
   8848e:	d323      	bcc.n	884d8 <memcpy+0x58>
   88490:	680b      	ldr	r3, [r1, #0]
   88492:	6003      	str	r3, [r0, #0]
   88494:	684b      	ldr	r3, [r1, #4]
   88496:	6043      	str	r3, [r0, #4]
   88498:	688b      	ldr	r3, [r1, #8]
   8849a:	6083      	str	r3, [r0, #8]
   8849c:	68cb      	ldr	r3, [r1, #12]
   8849e:	60c3      	str	r3, [r0, #12]
   884a0:	690b      	ldr	r3, [r1, #16]
   884a2:	6103      	str	r3, [r0, #16]
   884a4:	694b      	ldr	r3, [r1, #20]
   884a6:	6143      	str	r3, [r0, #20]
   884a8:	698b      	ldr	r3, [r1, #24]
   884aa:	6183      	str	r3, [r0, #24]
   884ac:	69cb      	ldr	r3, [r1, #28]
   884ae:	61c3      	str	r3, [r0, #28]
   884b0:	6a0b      	ldr	r3, [r1, #32]
   884b2:	6203      	str	r3, [r0, #32]
   884b4:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   884b6:	6243      	str	r3, [r0, #36]	; 0x24
   884b8:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   884ba:	6283      	str	r3, [r0, #40]	; 0x28
   884bc:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   884be:	62c3      	str	r3, [r0, #44]	; 0x2c
   884c0:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   884c2:	6303      	str	r3, [r0, #48]	; 0x30
   884c4:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   884c6:	6343      	str	r3, [r0, #52]	; 0x34
   884c8:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   884ca:	6383      	str	r3, [r0, #56]	; 0x38
   884cc:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   884ce:	63c3      	str	r3, [r0, #60]	; 0x3c
   884d0:	3040      	adds	r0, #64	; 0x40
   884d2:	3140      	adds	r1, #64	; 0x40
   884d4:	3a40      	subs	r2, #64	; 0x40
   884d6:	d2db      	bcs.n	88490 <memcpy+0x10>
   884d8:	3230      	adds	r2, #48	; 0x30
   884da:	d30b      	bcc.n	884f4 <memcpy+0x74>
   884dc:	680b      	ldr	r3, [r1, #0]
   884de:	6003      	str	r3, [r0, #0]
   884e0:	684b      	ldr	r3, [r1, #4]
   884e2:	6043      	str	r3, [r0, #4]
   884e4:	688b      	ldr	r3, [r1, #8]
   884e6:	6083      	str	r3, [r0, #8]
   884e8:	68cb      	ldr	r3, [r1, #12]
   884ea:	60c3      	str	r3, [r0, #12]
   884ec:	3010      	adds	r0, #16
   884ee:	3110      	adds	r1, #16
   884f0:	3a10      	subs	r2, #16
   884f2:	d2f3      	bcs.n	884dc <memcpy+0x5c>
   884f4:	320c      	adds	r2, #12
   884f6:	d305      	bcc.n	88504 <memcpy+0x84>
   884f8:	f851 3b04 	ldr.w	r3, [r1], #4
   884fc:	f840 3b04 	str.w	r3, [r0], #4
   88500:	3a04      	subs	r2, #4
   88502:	d2f9      	bcs.n	884f8 <memcpy+0x78>
   88504:	3204      	adds	r2, #4
   88506:	d008      	beq.n	8851a <memcpy+0x9a>
   88508:	07d2      	lsls	r2, r2, #31
   8850a:	bf1c      	itt	ne
   8850c:	f811 3b01 	ldrbne.w	r3, [r1], #1
   88510:	f800 3b01 	strbne.w	r3, [r0], #1
   88514:	d301      	bcc.n	8851a <memcpy+0x9a>
   88516:	880b      	ldrh	r3, [r1, #0]
   88518:	8003      	strh	r3, [r0, #0]
   8851a:	4660      	mov	r0, ip
   8851c:	4770      	bx	lr
   8851e:	bf00      	nop
   88520:	2a08      	cmp	r2, #8
   88522:	d313      	bcc.n	8854c <memcpy+0xcc>
   88524:	078b      	lsls	r3, r1, #30
   88526:	d0b1      	beq.n	8848c <memcpy+0xc>
   88528:	f010 0303 	ands.w	r3, r0, #3
   8852c:	d0ae      	beq.n	8848c <memcpy+0xc>
   8852e:	f1c3 0304 	rsb	r3, r3, #4
   88532:	1ad2      	subs	r2, r2, r3
   88534:	07db      	lsls	r3, r3, #31
   88536:	bf1c      	itt	ne
   88538:	f811 3b01 	ldrbne.w	r3, [r1], #1
   8853c:	f800 3b01 	strbne.w	r3, [r0], #1
   88540:	d3a4      	bcc.n	8848c <memcpy+0xc>
   88542:	f831 3b02 	ldrh.w	r3, [r1], #2
   88546:	f820 3b02 	strh.w	r3, [r0], #2
   8854a:	e79f      	b.n	8848c <memcpy+0xc>
   8854c:	3a04      	subs	r2, #4
   8854e:	d3d9      	bcc.n	88504 <memcpy+0x84>
   88550:	3a01      	subs	r2, #1
   88552:	f811 3b01 	ldrb.w	r3, [r1], #1
   88556:	f800 3b01 	strb.w	r3, [r0], #1
   8855a:	d2f9      	bcs.n	88550 <memcpy+0xd0>
   8855c:	780b      	ldrb	r3, [r1, #0]
   8855e:	7003      	strb	r3, [r0, #0]
   88560:	784b      	ldrb	r3, [r1, #1]
   88562:	7043      	strb	r3, [r0, #1]
   88564:	788b      	ldrb	r3, [r1, #2]
   88566:	7083      	strb	r3, [r0, #2]
   88568:	4660      	mov	r0, ip
   8856a:	4770      	bx	lr

0008856c <memmove>:
   8856c:	4288      	cmp	r0, r1
   8856e:	b4f0      	push	{r4, r5, r6, r7}
   88570:	d90d      	bls.n	8858e <memmove+0x22>
   88572:	188b      	adds	r3, r1, r2
   88574:	4283      	cmp	r3, r0
   88576:	d90a      	bls.n	8858e <memmove+0x22>
   88578:	1884      	adds	r4, r0, r2
   8857a:	b132      	cbz	r2, 8858a <memmove+0x1e>
   8857c:	4622      	mov	r2, r4
   8857e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
   88582:	4299      	cmp	r1, r3
   88584:	f802 4d01 	strb.w	r4, [r2, #-1]!
   88588:	d1f9      	bne.n	8857e <memmove+0x12>
   8858a:	bcf0      	pop	{r4, r5, r6, r7}
   8858c:	4770      	bx	lr
   8858e:	2a0f      	cmp	r2, #15
   88590:	d948      	bls.n	88624 <memmove+0xb8>
   88592:	ea40 0301 	orr.w	r3, r0, r1
   88596:	079b      	lsls	r3, r3, #30
   88598:	d146      	bne.n	88628 <memmove+0xbc>
   8859a:	f1a2 0310 	sub.w	r3, r2, #16
   8859e:	091b      	lsrs	r3, r3, #4
   885a0:	f101 0720 	add.w	r7, r1, #32
   885a4:	eb07 1703 	add.w	r7, r7, r3, lsl #4
   885a8:	f101 0410 	add.w	r4, r1, #16
   885ac:	f100 0510 	add.w	r5, r0, #16
   885b0:	f854 6c10 	ldr.w	r6, [r4, #-16]
   885b4:	3410      	adds	r4, #16
   885b6:	f845 6c10 	str.w	r6, [r5, #-16]
   885ba:	f854 6c1c 	ldr.w	r6, [r4, #-28]
   885be:	3510      	adds	r5, #16
   885c0:	f845 6c1c 	str.w	r6, [r5, #-28]
   885c4:	f854 6c18 	ldr.w	r6, [r4, #-24]
   885c8:	f845 6c18 	str.w	r6, [r5, #-24]
   885cc:	f854 6c14 	ldr.w	r6, [r4, #-20]
   885d0:	42bc      	cmp	r4, r7
   885d2:	f845 6c14 	str.w	r6, [r5, #-20]
   885d6:	d1eb      	bne.n	885b0 <memmove+0x44>
   885d8:	3301      	adds	r3, #1
   885da:	f002 050f 	and.w	r5, r2, #15
   885de:	011b      	lsls	r3, r3, #4
   885e0:	2d03      	cmp	r5, #3
   885e2:	4419      	add	r1, r3
   885e4:	4403      	add	r3, r0
   885e6:	d921      	bls.n	8862c <memmove+0xc0>
   885e8:	460f      	mov	r7, r1
   885ea:	462c      	mov	r4, r5
   885ec:	1f1e      	subs	r6, r3, #4
   885ee:	f857 cb04 	ldr.w	ip, [r7], #4
   885f2:	3c04      	subs	r4, #4
   885f4:	2c03      	cmp	r4, #3
   885f6:	f846 cf04 	str.w	ip, [r6, #4]!
   885fa:	d8f8      	bhi.n	885ee <memmove+0x82>
   885fc:	1f2c      	subs	r4, r5, #4
   885fe:	f024 0403 	bic.w	r4, r4, #3
   88602:	3404      	adds	r4, #4
   88604:	4423      	add	r3, r4
   88606:	4421      	add	r1, r4
   88608:	f002 0203 	and.w	r2, r2, #3
   8860c:	2a00      	cmp	r2, #0
   8860e:	d0bc      	beq.n	8858a <memmove+0x1e>
   88610:	3b01      	subs	r3, #1
   88612:	440a      	add	r2, r1
   88614:	f811 4b01 	ldrb.w	r4, [r1], #1
   88618:	4291      	cmp	r1, r2
   8861a:	f803 4f01 	strb.w	r4, [r3, #1]!
   8861e:	d1f9      	bne.n	88614 <memmove+0xa8>
   88620:	bcf0      	pop	{r4, r5, r6, r7}
   88622:	4770      	bx	lr
   88624:	4603      	mov	r3, r0
   88626:	e7f1      	b.n	8860c <memmove+0xa0>
   88628:	4603      	mov	r3, r0
   8862a:	e7f1      	b.n	88610 <memmove+0xa4>
   8862c:	462a      	mov	r2, r5
   8862e:	e7ed      	b.n	8860c <memmove+0xa0>

00088630 <__malloc_lock>:
   88630:	4770      	bx	lr
   88632:	bf00      	nop

00088634 <__malloc_unlock>:
   88634:	4770      	bx	lr
   88636:	bf00      	nop

00088638 <_Balloc>:
   88638:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   8863a:	b570      	push	{r4, r5, r6, lr}
   8863c:	4605      	mov	r5, r0
   8863e:	460c      	mov	r4, r1
   88640:	b14b      	cbz	r3, 88656 <_Balloc+0x1e>
   88642:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
   88646:	b180      	cbz	r0, 8866a <_Balloc+0x32>
   88648:	6802      	ldr	r2, [r0, #0]
   8864a:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
   8864e:	2300      	movs	r3, #0
   88650:	e9c0 3303 	strd	r3, r3, [r0, #12]
   88654:	bd70      	pop	{r4, r5, r6, pc}
   88656:	2221      	movs	r2, #33	; 0x21
   88658:	2104      	movs	r1, #4
   8865a:	f001 fbf3 	bl	89e44 <_calloc_r>
   8865e:	4603      	mov	r3, r0
   88660:	64e8      	str	r0, [r5, #76]	; 0x4c
   88662:	2800      	cmp	r0, #0
   88664:	d1ed      	bne.n	88642 <_Balloc+0xa>
   88666:	2000      	movs	r0, #0
   88668:	bd70      	pop	{r4, r5, r6, pc}
   8866a:	2101      	movs	r1, #1
   8866c:	fa01 f604 	lsl.w	r6, r1, r4
   88670:	1d72      	adds	r2, r6, #5
   88672:	4628      	mov	r0, r5
   88674:	0092      	lsls	r2, r2, #2
   88676:	f001 fbe5 	bl	89e44 <_calloc_r>
   8867a:	2800      	cmp	r0, #0
   8867c:	d0f3      	beq.n	88666 <_Balloc+0x2e>
   8867e:	e9c0 4601 	strd	r4, r6, [r0, #4]
   88682:	e7e4      	b.n	8864e <_Balloc+0x16>

00088684 <_Bfree>:
   88684:	b131      	cbz	r1, 88694 <_Bfree+0x10>
   88686:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   88688:	684a      	ldr	r2, [r1, #4]
   8868a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   8868e:	6008      	str	r0, [r1, #0]
   88690:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   88694:	4770      	bx	lr
   88696:	bf00      	nop

00088698 <__multadd>:
   88698:	b5f0      	push	{r4, r5, r6, r7, lr}
   8869a:	f04f 0c00 	mov.w	ip, #0
   8869e:	460c      	mov	r4, r1
   886a0:	4605      	mov	r5, r0
   886a2:	690e      	ldr	r6, [r1, #16]
   886a4:	b083      	sub	sp, #12
   886a6:	f101 0714 	add.w	r7, r1, #20
   886aa:	6838      	ldr	r0, [r7, #0]
   886ac:	f10c 0c01 	add.w	ip, ip, #1
   886b0:	b281      	uxth	r1, r0
   886b2:	fb02 3301 	mla	r3, r2, r1, r3
   886b6:	0c01      	lsrs	r1, r0, #16
   886b8:	0c18      	lsrs	r0, r3, #16
   886ba:	fb02 0101 	mla	r1, r2, r1, r0
   886be:	b29b      	uxth	r3, r3
   886c0:	eb03 4301 	add.w	r3, r3, r1, lsl #16
   886c4:	4566      	cmp	r6, ip
   886c6:	f847 3b04 	str.w	r3, [r7], #4
   886ca:	ea4f 4311 	mov.w	r3, r1, lsr #16
   886ce:	dcec      	bgt.n	886aa <__multadd+0x12>
   886d0:	b13b      	cbz	r3, 886e2 <__multadd+0x4a>
   886d2:	68a2      	ldr	r2, [r4, #8]
   886d4:	42b2      	cmp	r2, r6
   886d6:	dd07      	ble.n	886e8 <__multadd+0x50>
   886d8:	eb04 0286 	add.w	r2, r4, r6, lsl #2
   886dc:	3601      	adds	r6, #1
   886de:	6153      	str	r3, [r2, #20]
   886e0:	6126      	str	r6, [r4, #16]
   886e2:	4620      	mov	r0, r4
   886e4:	b003      	add	sp, #12
   886e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
   886e8:	6861      	ldr	r1, [r4, #4]
   886ea:	4628      	mov	r0, r5
   886ec:	3101      	adds	r1, #1
   886ee:	9301      	str	r3, [sp, #4]
   886f0:	f7ff ffa2 	bl	88638 <_Balloc>
   886f4:	4607      	mov	r7, r0
   886f6:	6922      	ldr	r2, [r4, #16]
   886f8:	f104 010c 	add.w	r1, r4, #12
   886fc:	3202      	adds	r2, #2
   886fe:	0092      	lsls	r2, r2, #2
   88700:	300c      	adds	r0, #12
   88702:	f7ff febd 	bl	88480 <memcpy>
   88706:	6cea      	ldr	r2, [r5, #76]	; 0x4c
   88708:	6861      	ldr	r1, [r4, #4]
   8870a:	9b01      	ldr	r3, [sp, #4]
   8870c:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
   88710:	6020      	str	r0, [r4, #0]
   88712:	f842 4021 	str.w	r4, [r2, r1, lsl #2]
   88716:	463c      	mov	r4, r7
   88718:	e7de      	b.n	886d8 <__multadd+0x40>
   8871a:	bf00      	nop

0008871c <__s2b>:
   8871c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   88720:	4c23      	ldr	r4, [pc, #140]	; (887b0 <__s2b+0x94>)
   88722:	461e      	mov	r6, r3
   88724:	3308      	adds	r3, #8
   88726:	fb84 4c03 	smull	r4, ip, r4, r3
   8872a:	17db      	asrs	r3, r3, #31
   8872c:	ebc3 0c6c 	rsb	ip, r3, ip, asr #1
   88730:	f1bc 0f01 	cmp.w	ip, #1
   88734:	4607      	mov	r7, r0
   88736:	460c      	mov	r4, r1
   88738:	4690      	mov	r8, r2
   8873a:	9d08      	ldr	r5, [sp, #32]
   8873c:	dd35      	ble.n	887aa <__s2b+0x8e>
   8873e:	2301      	movs	r3, #1
   88740:	2100      	movs	r1, #0
   88742:	005b      	lsls	r3, r3, #1
   88744:	459c      	cmp	ip, r3
   88746:	f101 0101 	add.w	r1, r1, #1
   8874a:	dcfa      	bgt.n	88742 <__s2b+0x26>
   8874c:	4638      	mov	r0, r7
   8874e:	f7ff ff73 	bl	88638 <_Balloc>
   88752:	2301      	movs	r3, #1
   88754:	f1b8 0f09 	cmp.w	r8, #9
   88758:	e9c0 3504 	strd	r3, r5, [r0, #16]
   8875c:	dd21      	ble.n	887a2 <__s2b+0x86>
   8875e:	f104 0909 	add.w	r9, r4, #9
   88762:	464d      	mov	r5, r9
   88764:	4444      	add	r4, r8
   88766:	f815 3b01 	ldrb.w	r3, [r5], #1
   8876a:	4601      	mov	r1, r0
   8876c:	3b30      	subs	r3, #48	; 0x30
   8876e:	220a      	movs	r2, #10
   88770:	4638      	mov	r0, r7
   88772:	f7ff ff91 	bl	88698 <__multadd>
   88776:	42ac      	cmp	r4, r5
   88778:	d1f5      	bne.n	88766 <__s2b+0x4a>
   8877a:	eb09 0408 	add.w	r4, r9, r8
   8877e:	3c08      	subs	r4, #8
   88780:	4546      	cmp	r6, r8
   88782:	dd0c      	ble.n	8879e <__s2b+0x82>
   88784:	eba6 0608 	sub.w	r6, r6, r8
   88788:	4426      	add	r6, r4
   8878a:	f814 3b01 	ldrb.w	r3, [r4], #1
   8878e:	4601      	mov	r1, r0
   88790:	3b30      	subs	r3, #48	; 0x30
   88792:	220a      	movs	r2, #10
   88794:	4638      	mov	r0, r7
   88796:	f7ff ff7f 	bl	88698 <__multadd>
   8879a:	42a6      	cmp	r6, r4
   8879c:	d1f5      	bne.n	8878a <__s2b+0x6e>
   8879e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   887a2:	f04f 0809 	mov.w	r8, #9
   887a6:	340a      	adds	r4, #10
   887a8:	e7ea      	b.n	88780 <__s2b+0x64>
   887aa:	2100      	movs	r1, #0
   887ac:	e7ce      	b.n	8874c <__s2b+0x30>
   887ae:	bf00      	nop
   887b0:	38e38e39 	.word	0x38e38e39

000887b4 <__hi0bits>:
   887b4:	0c02      	lsrs	r2, r0, #16
   887b6:	0412      	lsls	r2, r2, #16
   887b8:	4603      	mov	r3, r0
   887ba:	b9c2      	cbnz	r2, 887ee <__hi0bits+0x3a>
   887bc:	0403      	lsls	r3, r0, #16
   887be:	2010      	movs	r0, #16
   887c0:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
   887c4:	bf04      	itt	eq
   887c6:	021b      	lsleq	r3, r3, #8
   887c8:	3008      	addeq	r0, #8
   887ca:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
   887ce:	bf04      	itt	eq
   887d0:	011b      	lsleq	r3, r3, #4
   887d2:	3004      	addeq	r0, #4
   887d4:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
   887d8:	bf04      	itt	eq
   887da:	009b      	lsleq	r3, r3, #2
   887dc:	3002      	addeq	r0, #2
   887de:	2b00      	cmp	r3, #0
   887e0:	db04      	blt.n	887ec <__hi0bits+0x38>
   887e2:	005b      	lsls	r3, r3, #1
   887e4:	d501      	bpl.n	887ea <__hi0bits+0x36>
   887e6:	3001      	adds	r0, #1
   887e8:	4770      	bx	lr
   887ea:	2020      	movs	r0, #32
   887ec:	4770      	bx	lr
   887ee:	2000      	movs	r0, #0
   887f0:	e7e6      	b.n	887c0 <__hi0bits+0xc>
   887f2:	bf00      	nop

000887f4 <__lo0bits>:
   887f4:	6803      	ldr	r3, [r0, #0]
   887f6:	4601      	mov	r1, r0
   887f8:	f013 0207 	ands.w	r2, r3, #7
   887fc:	d007      	beq.n	8880e <__lo0bits+0x1a>
   887fe:	07da      	lsls	r2, r3, #31
   88800:	d41f      	bmi.n	88842 <__lo0bits+0x4e>
   88802:	0798      	lsls	r0, r3, #30
   88804:	d51f      	bpl.n	88846 <__lo0bits+0x52>
   88806:	085b      	lsrs	r3, r3, #1
   88808:	600b      	str	r3, [r1, #0]
   8880a:	2001      	movs	r0, #1
   8880c:	4770      	bx	lr
   8880e:	b298      	uxth	r0, r3
   88810:	b1a0      	cbz	r0, 8883c <__lo0bits+0x48>
   88812:	4610      	mov	r0, r2
   88814:	f013 0fff 	tst.w	r3, #255	; 0xff
   88818:	bf04      	itt	eq
   8881a:	0a1b      	lsreq	r3, r3, #8
   8881c:	3008      	addeq	r0, #8
   8881e:	071a      	lsls	r2, r3, #28
   88820:	bf04      	itt	eq
   88822:	091b      	lsreq	r3, r3, #4
   88824:	3004      	addeq	r0, #4
   88826:	079a      	lsls	r2, r3, #30
   88828:	bf04      	itt	eq
   8882a:	089b      	lsreq	r3, r3, #2
   8882c:	3002      	addeq	r0, #2
   8882e:	07da      	lsls	r2, r3, #31
   88830:	d402      	bmi.n	88838 <__lo0bits+0x44>
   88832:	085b      	lsrs	r3, r3, #1
   88834:	d00b      	beq.n	8884e <__lo0bits+0x5a>
   88836:	3001      	adds	r0, #1
   88838:	600b      	str	r3, [r1, #0]
   8883a:	4770      	bx	lr
   8883c:	0c1b      	lsrs	r3, r3, #16
   8883e:	2010      	movs	r0, #16
   88840:	e7e8      	b.n	88814 <__lo0bits+0x20>
   88842:	2000      	movs	r0, #0
   88844:	4770      	bx	lr
   88846:	089b      	lsrs	r3, r3, #2
   88848:	600b      	str	r3, [r1, #0]
   8884a:	2002      	movs	r0, #2
   8884c:	4770      	bx	lr
   8884e:	2020      	movs	r0, #32
   88850:	4770      	bx	lr
   88852:	bf00      	nop

00088854 <__i2b>:
   88854:	b510      	push	{r4, lr}
   88856:	460c      	mov	r4, r1
   88858:	2101      	movs	r1, #1
   8885a:	f7ff feed 	bl	88638 <_Balloc>
   8885e:	2201      	movs	r2, #1
   88860:	e9c0 2404 	strd	r2, r4, [r0, #16]
   88864:	bd10      	pop	{r4, pc}
   88866:	bf00      	nop

00088868 <__multiply>:
   88868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8886c:	690d      	ldr	r5, [r1, #16]
   8886e:	6914      	ldr	r4, [r2, #16]
   88870:	b085      	sub	sp, #20
   88872:	42a5      	cmp	r5, r4
   88874:	460e      	mov	r6, r1
   88876:	4691      	mov	r9, r2
   88878:	da04      	bge.n	88884 <__multiply+0x1c>
   8887a:	462a      	mov	r2, r5
   8887c:	464e      	mov	r6, r9
   8887e:	4625      	mov	r5, r4
   88880:	4689      	mov	r9, r1
   88882:	4614      	mov	r4, r2
   88884:	68b3      	ldr	r3, [r6, #8]
   88886:	eb05 0804 	add.w	r8, r5, r4
   8888a:	6871      	ldr	r1, [r6, #4]
   8888c:	4543      	cmp	r3, r8
   8888e:	bfb8      	it	lt
   88890:	3101      	addlt	r1, #1
   88892:	f7ff fed1 	bl	88638 <_Balloc>
   88896:	f100 0b14 	add.w	fp, r0, #20
   8889a:	eb0b 0a88 	add.w	sl, fp, r8, lsl #2
   8889e:	45d3      	cmp	fp, sl
   888a0:	9001      	str	r0, [sp, #4]
   888a2:	d205      	bcs.n	888b0 <__multiply+0x48>
   888a4:	465b      	mov	r3, fp
   888a6:	2200      	movs	r2, #0
   888a8:	f843 2b04 	str.w	r2, [r3], #4
   888ac:	459a      	cmp	sl, r3
   888ae:	d8fb      	bhi.n	888a8 <__multiply+0x40>
   888b0:	f109 0314 	add.w	r3, r9, #20
   888b4:	eb03 0484 	add.w	r4, r3, r4, lsl #2
   888b8:	f106 0214 	add.w	r2, r6, #20
   888bc:	42a3      	cmp	r3, r4
   888be:	eb02 0e85 	add.w	lr, r2, r5, lsl #2
   888c2:	d262      	bcs.n	8898a <__multiply+0x122>
   888c4:	eba4 0409 	sub.w	r4, r4, r9
   888c8:	3c15      	subs	r4, #21
   888ca:	f024 0403 	bic.w	r4, r4, #3
   888ce:	4423      	add	r3, r4
   888d0:	e9cd a802 	strd	sl, r8, [sp, #8]
   888d4:	f109 0910 	add.w	r9, r9, #16
   888d8:	4690      	mov	r8, r2
   888da:	469a      	mov	sl, r3
   888dc:	e005      	b.n	888ea <__multiply+0x82>
   888de:	0c09      	lsrs	r1, r1, #16
   888e0:	d12c      	bne.n	8893c <__multiply+0xd4>
   888e2:	45ca      	cmp	sl, r9
   888e4:	f10b 0b04 	add.w	fp, fp, #4
   888e8:	d04d      	beq.n	88986 <__multiply+0x11e>
   888ea:	f859 1f04 	ldr.w	r1, [r9, #4]!
   888ee:	fa1f fc81 	uxth.w	ip, r1
   888f2:	f1bc 0f00 	cmp.w	ip, #0
   888f6:	d0f2      	beq.n	888de <__multiply+0x76>
   888f8:	4647      	mov	r7, r8
   888fa:	465e      	mov	r6, fp
   888fc:	2100      	movs	r1, #0
   888fe:	e000      	b.n	88902 <__multiply+0x9a>
   88900:	4606      	mov	r6, r0
   88902:	4630      	mov	r0, r6
   88904:	f857 2b04 	ldr.w	r2, [r7], #4
   88908:	6834      	ldr	r4, [r6, #0]
   8890a:	b293      	uxth	r3, r2
   8890c:	b2a5      	uxth	r5, r4
   8890e:	0c12      	lsrs	r2, r2, #16
   88910:	fb0c 5303 	mla	r3, ip, r3, r5
   88914:	0c24      	lsrs	r4, r4, #16
   88916:	fb0c 4202 	mla	r2, ip, r2, r4
   8891a:	440b      	add	r3, r1
   8891c:	eb02 4113 	add.w	r1, r2, r3, lsr #16
   88920:	b29b      	uxth	r3, r3
   88922:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
   88926:	45be      	cmp	lr, r7
   88928:	ea4f 4111 	mov.w	r1, r1, lsr #16
   8892c:	f840 3b04 	str.w	r3, [r0], #4
   88930:	d8e6      	bhi.n	88900 <__multiply+0x98>
   88932:	6071      	str	r1, [r6, #4]
   88934:	f8d9 1000 	ldr.w	r1, [r9]
   88938:	0c09      	lsrs	r1, r1, #16
   8893a:	d0d2      	beq.n	888e2 <__multiply+0x7a>
   8893c:	f8db 3000 	ldr.w	r3, [fp]
   88940:	4640      	mov	r0, r8
   88942:	461e      	mov	r6, r3
   88944:	465d      	mov	r5, fp
   88946:	2200      	movs	r2, #0
   88948:	e000      	b.n	8894c <__multiply+0xe4>
   8894a:	4625      	mov	r5, r4
   8894c:	462c      	mov	r4, r5
   8894e:	8807      	ldrh	r7, [r0, #0]
   88950:	0c36      	lsrs	r6, r6, #16
   88952:	fb01 6607 	mla	r6, r1, r7, r6
   88956:	b29b      	uxth	r3, r3
   88958:	4432      	add	r2, r6
   8895a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   8895e:	f844 3b04 	str.w	r3, [r4], #4
   88962:	f850 3b04 	ldr.w	r3, [r0], #4
   88966:	686e      	ldr	r6, [r5, #4]
   88968:	0c1b      	lsrs	r3, r3, #16
   8896a:	b2b7      	uxth	r7, r6
   8896c:	fb01 7303 	mla	r3, r1, r3, r7
   88970:	4586      	cmp	lr, r0
   88972:	eb03 4312 	add.w	r3, r3, r2, lsr #16
   88976:	ea4f 4213 	mov.w	r2, r3, lsr #16
   8897a:	d8e6      	bhi.n	8894a <__multiply+0xe2>
   8897c:	45ca      	cmp	sl, r9
   8897e:	606b      	str	r3, [r5, #4]
   88980:	f10b 0b04 	add.w	fp, fp, #4
   88984:	d1b1      	bne.n	888ea <__multiply+0x82>
   88986:	e9dd a802 	ldrd	sl, r8, [sp, #8]
   8898a:	f1b8 0f00 	cmp.w	r8, #0
   8898e:	dd0b      	ble.n	889a8 <__multiply+0x140>
   88990:	f85a 3c04 	ldr.w	r3, [sl, #-4]
   88994:	f1aa 0a04 	sub.w	sl, sl, #4
   88998:	b11b      	cbz	r3, 889a2 <__multiply+0x13a>
   8899a:	e005      	b.n	889a8 <__multiply+0x140>
   8899c:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
   889a0:	b913      	cbnz	r3, 889a8 <__multiply+0x140>
   889a2:	f1b8 0801 	subs.w	r8, r8, #1
   889a6:	d1f9      	bne.n	8899c <__multiply+0x134>
   889a8:	9801      	ldr	r0, [sp, #4]
   889aa:	f8c0 8010 	str.w	r8, [r0, #16]
   889ae:	b005      	add	sp, #20
   889b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

000889b4 <__pow5mult>:
   889b4:	f012 0303 	ands.w	r3, r2, #3
   889b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   889bc:	4614      	mov	r4, r2
   889be:	4607      	mov	r7, r0
   889c0:	d12e      	bne.n	88a20 <__pow5mult+0x6c>
   889c2:	460d      	mov	r5, r1
   889c4:	10a4      	asrs	r4, r4, #2
   889c6:	d01c      	beq.n	88a02 <__pow5mult+0x4e>
   889c8:	6cbe      	ldr	r6, [r7, #72]	; 0x48
   889ca:	b396      	cbz	r6, 88a32 <__pow5mult+0x7e>
   889cc:	07e3      	lsls	r3, r4, #31
   889ce:	f04f 0800 	mov.w	r8, #0
   889d2:	d406      	bmi.n	889e2 <__pow5mult+0x2e>
   889d4:	1064      	asrs	r4, r4, #1
   889d6:	d014      	beq.n	88a02 <__pow5mult+0x4e>
   889d8:	6830      	ldr	r0, [r6, #0]
   889da:	b1a8      	cbz	r0, 88a08 <__pow5mult+0x54>
   889dc:	4606      	mov	r6, r0
   889de:	07e3      	lsls	r3, r4, #31
   889e0:	d5f8      	bpl.n	889d4 <__pow5mult+0x20>
   889e2:	4632      	mov	r2, r6
   889e4:	4629      	mov	r1, r5
   889e6:	4638      	mov	r0, r7
   889e8:	f7ff ff3e 	bl	88868 <__multiply>
   889ec:	b1b5      	cbz	r5, 88a1c <__pow5mult+0x68>
   889ee:	686a      	ldr	r2, [r5, #4]
   889f0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   889f2:	1064      	asrs	r4, r4, #1
   889f4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   889f8:	6029      	str	r1, [r5, #0]
   889fa:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
   889fe:	4605      	mov	r5, r0
   88a00:	d1ea      	bne.n	889d8 <__pow5mult+0x24>
   88a02:	4628      	mov	r0, r5
   88a04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   88a08:	4632      	mov	r2, r6
   88a0a:	4631      	mov	r1, r6
   88a0c:	4638      	mov	r0, r7
   88a0e:	f7ff ff2b 	bl	88868 <__multiply>
   88a12:	6030      	str	r0, [r6, #0]
   88a14:	f8c0 8000 	str.w	r8, [r0]
   88a18:	4606      	mov	r6, r0
   88a1a:	e7e0      	b.n	889de <__pow5mult+0x2a>
   88a1c:	4605      	mov	r5, r0
   88a1e:	e7d9      	b.n	889d4 <__pow5mult+0x20>
   88a20:	4a0b      	ldr	r2, [pc, #44]	; (88a50 <__pow5mult+0x9c>)
   88a22:	3b01      	subs	r3, #1
   88a24:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   88a28:	2300      	movs	r3, #0
   88a2a:	f7ff fe35 	bl	88698 <__multadd>
   88a2e:	4605      	mov	r5, r0
   88a30:	e7c8      	b.n	889c4 <__pow5mult+0x10>
   88a32:	2101      	movs	r1, #1
   88a34:	4638      	mov	r0, r7
   88a36:	f7ff fdff 	bl	88638 <_Balloc>
   88a3a:	f240 2171 	movw	r1, #625	; 0x271
   88a3e:	2201      	movs	r2, #1
   88a40:	2300      	movs	r3, #0
   88a42:	e9c0 2104 	strd	r2, r1, [r0, #16]
   88a46:	4606      	mov	r6, r0
   88a48:	64b8      	str	r0, [r7, #72]	; 0x48
   88a4a:	6003      	str	r3, [r0, #0]
   88a4c:	e7be      	b.n	889cc <__pow5mult+0x18>
   88a4e:	bf00      	nop
   88a50:	0008a1f0 	.word	0x0008a1f0

00088a54 <__lshift>:
   88a54:	690b      	ldr	r3, [r1, #16]
   88a56:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   88a5a:	1154      	asrs	r4, r2, #5
   88a5c:	eb04 0803 	add.w	r8, r4, r3
   88a60:	688b      	ldr	r3, [r1, #8]
   88a62:	f108 0501 	add.w	r5, r8, #1
   88a66:	429d      	cmp	r5, r3
   88a68:	460e      	mov	r6, r1
   88a6a:	4691      	mov	r9, r2
   88a6c:	4607      	mov	r7, r0
   88a6e:	6849      	ldr	r1, [r1, #4]
   88a70:	dd04      	ble.n	88a7c <__lshift+0x28>
   88a72:	005b      	lsls	r3, r3, #1
   88a74:	429d      	cmp	r5, r3
   88a76:	f101 0101 	add.w	r1, r1, #1
   88a7a:	dcfa      	bgt.n	88a72 <__lshift+0x1e>
   88a7c:	4638      	mov	r0, r7
   88a7e:	f7ff fddb 	bl	88638 <_Balloc>
   88a82:	2c00      	cmp	r4, #0
   88a84:	f100 0314 	add.w	r3, r0, #20
   88a88:	dd3c      	ble.n	88b04 <__lshift+0xb0>
   88a8a:	2200      	movs	r2, #0
   88a8c:	eb03 0184 	add.w	r1, r3, r4, lsl #2
   88a90:	f843 2b04 	str.w	r2, [r3], #4
   88a94:	428b      	cmp	r3, r1
   88a96:	d1fb      	bne.n	88a90 <__lshift+0x3c>
   88a98:	6934      	ldr	r4, [r6, #16]
   88a9a:	f106 0314 	add.w	r3, r6, #20
   88a9e:	f019 091f 	ands.w	r9, r9, #31
   88aa2:	eb03 0c84 	add.w	ip, r3, r4, lsl #2
   88aa6:	d025      	beq.n	88af4 <__lshift+0xa0>
   88aa8:	f1c9 0220 	rsb	r2, r9, #32
   88aac:	f04f 0a00 	mov.w	sl, #0
   88ab0:	e000      	b.n	88ab4 <__lshift+0x60>
   88ab2:	4671      	mov	r1, lr
   88ab4:	468e      	mov	lr, r1
   88ab6:	681c      	ldr	r4, [r3, #0]
   88ab8:	fa04 f409 	lsl.w	r4, r4, r9
   88abc:	ea44 040a 	orr.w	r4, r4, sl
   88ac0:	f84e 4b04 	str.w	r4, [lr], #4
   88ac4:	f853 4b04 	ldr.w	r4, [r3], #4
   88ac8:	4563      	cmp	r3, ip
   88aca:	fa24 fa02 	lsr.w	sl, r4, r2
   88ace:	d3f0      	bcc.n	88ab2 <__lshift+0x5e>
   88ad0:	f8c1 a004 	str.w	sl, [r1, #4]
   88ad4:	f1ba 0f00 	cmp.w	sl, #0
   88ad8:	d001      	beq.n	88ade <__lshift+0x8a>
   88ada:	f108 0502 	add.w	r5, r8, #2
   88ade:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   88ae0:	6872      	ldr	r2, [r6, #4]
   88ae2:	3d01      	subs	r5, #1
   88ae4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   88ae8:	6105      	str	r5, [r0, #16]
   88aea:	6031      	str	r1, [r6, #0]
   88aec:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   88af0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   88af4:	3904      	subs	r1, #4
   88af6:	f853 2b04 	ldr.w	r2, [r3], #4
   88afa:	459c      	cmp	ip, r3
   88afc:	f841 2f04 	str.w	r2, [r1, #4]!
   88b00:	d8f9      	bhi.n	88af6 <__lshift+0xa2>
   88b02:	e7ec      	b.n	88ade <__lshift+0x8a>
   88b04:	4619      	mov	r1, r3
   88b06:	e7c7      	b.n	88a98 <__lshift+0x44>

00088b08 <__mcmp>:
   88b08:	b430      	push	{r4, r5}
   88b0a:	690b      	ldr	r3, [r1, #16]
   88b0c:	4605      	mov	r5, r0
   88b0e:	6900      	ldr	r0, [r0, #16]
   88b10:	1ac0      	subs	r0, r0, r3
   88b12:	d10f      	bne.n	88b34 <__mcmp+0x2c>
   88b14:	009b      	lsls	r3, r3, #2
   88b16:	3514      	adds	r5, #20
   88b18:	3114      	adds	r1, #20
   88b1a:	4419      	add	r1, r3
   88b1c:	442b      	add	r3, r5
   88b1e:	e001      	b.n	88b24 <__mcmp+0x1c>
   88b20:	429d      	cmp	r5, r3
   88b22:	d207      	bcs.n	88b34 <__mcmp+0x2c>
   88b24:	f853 4d04 	ldr.w	r4, [r3, #-4]!
   88b28:	f851 2d04 	ldr.w	r2, [r1, #-4]!
   88b2c:	4294      	cmp	r4, r2
   88b2e:	d0f7      	beq.n	88b20 <__mcmp+0x18>
   88b30:	d302      	bcc.n	88b38 <__mcmp+0x30>
   88b32:	2001      	movs	r0, #1
   88b34:	bc30      	pop	{r4, r5}
   88b36:	4770      	bx	lr
   88b38:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   88b3c:	e7fa      	b.n	88b34 <__mcmp+0x2c>
   88b3e:	bf00      	nop

00088b40 <__mdiff>:
   88b40:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   88b44:	690c      	ldr	r4, [r1, #16]
   88b46:	6913      	ldr	r3, [r2, #16]
   88b48:	4689      	mov	r9, r1
   88b4a:	1ae4      	subs	r4, r4, r3
   88b4c:	2c00      	cmp	r4, #0
   88b4e:	4692      	mov	sl, r2
   88b50:	f101 0714 	add.w	r7, r1, #20
   88b54:	f102 0b14 	add.w	fp, r2, #20
   88b58:	d114      	bne.n	88b84 <__mdiff+0x44>
   88b5a:	009b      	lsls	r3, r3, #2
   88b5c:	18fa      	adds	r2, r7, r3
   88b5e:	445b      	add	r3, fp
   88b60:	e001      	b.n	88b66 <__mdiff+0x26>
   88b62:	42ba      	cmp	r2, r7
   88b64:	d962      	bls.n	88c2c <__mdiff+0xec>
   88b66:	f852 5d04 	ldr.w	r5, [r2, #-4]!
   88b6a:	f853 1d04 	ldr.w	r1, [r3, #-4]!
   88b6e:	428d      	cmp	r5, r1
   88b70:	d0f7      	beq.n	88b62 <__mdiff+0x22>
   88b72:	d209      	bcs.n	88b88 <__mdiff+0x48>
   88b74:	463a      	mov	r2, r7
   88b76:	464b      	mov	r3, r9
   88b78:	465f      	mov	r7, fp
   88b7a:	46d1      	mov	r9, sl
   88b7c:	4693      	mov	fp, r2
   88b7e:	469a      	mov	sl, r3
   88b80:	2401      	movs	r4, #1
   88b82:	e001      	b.n	88b88 <__mdiff+0x48>
   88b84:	dbf6      	blt.n	88b74 <__mdiff+0x34>
   88b86:	2400      	movs	r4, #0
   88b88:	f8d9 1004 	ldr.w	r1, [r9, #4]
   88b8c:	f7ff fd54 	bl	88638 <_Balloc>
   88b90:	465e      	mov	r6, fp
   88b92:	f04f 0800 	mov.w	r8, #0
   88b96:	f8d9 c010 	ldr.w	ip, [r9, #16]
   88b9a:	f8da 3010 	ldr.w	r3, [sl, #16]
   88b9e:	463d      	mov	r5, r7
   88ba0:	60c4      	str	r4, [r0, #12]
   88ba2:	eb0b 0e83 	add.w	lr, fp, r3, lsl #2
   88ba6:	eb07 078c 	add.w	r7, r7, ip, lsl #2
   88baa:	f100 0414 	add.w	r4, r0, #20
   88bae:	f855 9b04 	ldr.w	r9, [r5], #4
   88bb2:	f856 2b04 	ldr.w	r2, [r6], #4
   88bb6:	fa1f f389 	uxth.w	r3, r9
   88bba:	4443      	add	r3, r8
   88bbc:	fa1f f882 	uxth.w	r8, r2
   88bc0:	0c12      	lsrs	r2, r2, #16
   88bc2:	eba3 0308 	sub.w	r3, r3, r8
   88bc6:	ebc2 4219 	rsb	r2, r2, r9, lsr #16
   88bca:	eb02 4223 	add.w	r2, r2, r3, asr #16
   88bce:	b29b      	uxth	r3, r3
   88bd0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
   88bd4:	45b6      	cmp	lr, r6
   88bd6:	f844 3b04 	str.w	r3, [r4], #4
   88bda:	ea4f 4822 	mov.w	r8, r2, asr #16
   88bde:	d8e6      	bhi.n	88bae <__mdiff+0x6e>
   88be0:	42af      	cmp	r7, r5
   88be2:	d917      	bls.n	88c14 <__mdiff+0xd4>
   88be4:	46a6      	mov	lr, r4
   88be6:	462e      	mov	r6, r5
   88be8:	f856 3b04 	ldr.w	r3, [r6], #4
   88bec:	b299      	uxth	r1, r3
   88bee:	4441      	add	r1, r8
   88bf0:	140a      	asrs	r2, r1, #16
   88bf2:	eb02 4213 	add.w	r2, r2, r3, lsr #16
   88bf6:	b289      	uxth	r1, r1
   88bf8:	ea41 4302 	orr.w	r3, r1, r2, lsl #16
   88bfc:	42b7      	cmp	r7, r6
   88bfe:	f84e 3b04 	str.w	r3, [lr], #4
   88c02:	ea4f 4822 	mov.w	r8, r2, asr #16
   88c06:	d8ef      	bhi.n	88be8 <__mdiff+0xa8>
   88c08:	43ed      	mvns	r5, r5
   88c0a:	442f      	add	r7, r5
   88c0c:	f027 0703 	bic.w	r7, r7, #3
   88c10:	3704      	adds	r7, #4
   88c12:	443c      	add	r4, r7
   88c14:	3c04      	subs	r4, #4
   88c16:	b92b      	cbnz	r3, 88c24 <__mdiff+0xe4>
   88c18:	f854 3d04 	ldr.w	r3, [r4, #-4]!
   88c1c:	f10c 3cff 	add.w	ip, ip, #4294967295	; 0xffffffff
   88c20:	2b00      	cmp	r3, #0
   88c22:	d0f9      	beq.n	88c18 <__mdiff+0xd8>
   88c24:	f8c0 c010 	str.w	ip, [r0, #16]
   88c28:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   88c2c:	2100      	movs	r1, #0
   88c2e:	f7ff fd03 	bl	88638 <_Balloc>
   88c32:	2201      	movs	r2, #1
   88c34:	2300      	movs	r3, #0
   88c36:	e9c0 2304 	strd	r2, r3, [r0, #16]
   88c3a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   88c3e:	bf00      	nop

00088c40 <__ulp>:
   88c40:	4b0f      	ldr	r3, [pc, #60]	; (88c80 <__ulp+0x40>)
   88c42:	400b      	ands	r3, r1
   88c44:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
   88c48:	2b00      	cmp	r3, #0
   88c4a:	dd02      	ble.n	88c52 <__ulp+0x12>
   88c4c:	2000      	movs	r0, #0
   88c4e:	4619      	mov	r1, r3
   88c50:	4770      	bx	lr
   88c52:	425b      	negs	r3, r3
   88c54:	151b      	asrs	r3, r3, #20
   88c56:	2b13      	cmp	r3, #19
   88c58:	dd0b      	ble.n	88c72 <__ulp+0x32>
   88c5a:	3b14      	subs	r3, #20
   88c5c:	2b1e      	cmp	r3, #30
   88c5e:	bfd7      	itett	le
   88c60:	2201      	movle	r2, #1
   88c62:	2301      	movgt	r3, #1
   88c64:	f1c3 031f 	rsble	r3, r3, #31
   88c68:	fa02 f303 	lslle.w	r3, r2, r3
   88c6c:	2100      	movs	r1, #0
   88c6e:	4618      	mov	r0, r3
   88c70:	4770      	bx	lr
   88c72:	f44f 2200 	mov.w	r2, #524288	; 0x80000
   88c76:	2000      	movs	r0, #0
   88c78:	fa42 f103 	asr.w	r1, r2, r3
   88c7c:	4770      	bx	lr
   88c7e:	bf00      	nop
   88c80:	7ff00000 	.word	0x7ff00000

00088c84 <__b2d>:
   88c84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   88c88:	6907      	ldr	r7, [r0, #16]
   88c8a:	f100 0614 	add.w	r6, r0, #20
   88c8e:	eb06 0787 	add.w	r7, r6, r7, lsl #2
   88c92:	f857 8c04 	ldr.w	r8, [r7, #-4]
   88c96:	4640      	mov	r0, r8
   88c98:	f7ff fd8c 	bl	887b4 <__hi0bits>
   88c9c:	f1c0 0320 	rsb	r3, r0, #32
   88ca0:	280a      	cmp	r0, #10
   88ca2:	600b      	str	r3, [r1, #0]
   88ca4:	f1a7 0204 	sub.w	r2, r7, #4
   88ca8:	dc18      	bgt.n	88cdc <__b2d+0x58>
   88caa:	4296      	cmp	r6, r2
   88cac:	bf2c      	ite	cs
   88cae:	2200      	movcs	r2, #0
   88cb0:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
   88cb4:	f1c0 030b 	rsb	r3, r0, #11
   88cb8:	fa28 f103 	lsr.w	r1, r8, r3
   88cbc:	bf38      	it	cc
   88cbe:	40da      	lsrcc	r2, r3
   88cc0:	f100 0315 	add.w	r3, r0, #21
   88cc4:	f041 557f 	orr.w	r5, r1, #1069547520	; 0x3fc00000
   88cc8:	fa08 f303 	lsl.w	r3, r8, r3
   88ccc:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
   88cd0:	ea43 0402 	orr.w	r4, r3, r2
   88cd4:	4620      	mov	r0, r4
   88cd6:	4629      	mov	r1, r5
   88cd8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   88cdc:	4296      	cmp	r6, r2
   88cde:	f1a0 030b 	sub.w	r3, r0, #11
   88ce2:	d21d      	bcs.n	88d20 <__b2d+0x9c>
   88ce4:	f857 0c08 	ldr.w	r0, [r7, #-8]
   88ce8:	b1e3      	cbz	r3, 88d24 <__b2d+0xa0>
   88cea:	fa08 f803 	lsl.w	r8, r8, r3
   88cee:	f048 587f 	orr.w	r8, r8, #1069547520	; 0x3fc00000
   88cf2:	f1c3 0120 	rsb	r1, r3, #32
   88cf6:	f1a7 0208 	sub.w	r2, r7, #8
   88cfa:	fa20 fc01 	lsr.w	ip, r0, r1
   88cfe:	f448 1840 	orr.w	r8, r8, #3145728	; 0x300000
   88d02:	4296      	cmp	r6, r2
   88d04:	fa00 f003 	lsl.w	r0, r0, r3
   88d08:	ea48 050c 	orr.w	r5, r8, ip
   88d0c:	d203      	bcs.n	88d16 <__b2d+0x92>
   88d0e:	f857 3c0c 	ldr.w	r3, [r7, #-12]
   88d12:	40cb      	lsrs	r3, r1
   88d14:	4318      	orrs	r0, r3
   88d16:	4604      	mov	r4, r0
   88d18:	4620      	mov	r0, r4
   88d1a:	4629      	mov	r1, r5
   88d1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   88d20:	b933      	cbnz	r3, 88d30 <__b2d+0xac>
   88d22:	4618      	mov	r0, r3
   88d24:	f048 557f 	orr.w	r5, r8, #1069547520	; 0x3fc00000
   88d28:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
   88d2c:	4604      	mov	r4, r0
   88d2e:	e7f3      	b.n	88d18 <__b2d+0x94>
   88d30:	2000      	movs	r0, #0
   88d32:	fa08 f303 	lsl.w	r3, r8, r3
   88d36:	f043 557f 	orr.w	r5, r3, #1069547520	; 0x3fc00000
   88d3a:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
   88d3e:	4604      	mov	r4, r0
   88d40:	e7ea      	b.n	88d18 <__b2d+0x94>
   88d42:	bf00      	nop

00088d44 <__d2b>:
   88d44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   88d48:	461c      	mov	r4, r3
   88d4a:	b082      	sub	sp, #8
   88d4c:	2101      	movs	r1, #1
   88d4e:	e9dd 6508 	ldrd	r6, r5, [sp, #32]
   88d52:	4690      	mov	r8, r2
   88d54:	f7ff fc70 	bl	88638 <_Balloc>
   88d58:	4623      	mov	r3, r4
   88d5a:	f3c4 540a 	ubfx	r4, r4, #20, #11
   88d5e:	4607      	mov	r7, r0
   88d60:	f3c3 0313 	ubfx	r3, r3, #0, #20
   88d64:	b10c      	cbz	r4, 88d6a <__d2b+0x26>
   88d66:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   88d6a:	f1b8 0200 	subs.w	r2, r8, #0
   88d6e:	9301      	str	r3, [sp, #4]
   88d70:	d01e      	beq.n	88db0 <__d2b+0x6c>
   88d72:	a802      	add	r0, sp, #8
   88d74:	f840 2d08 	str.w	r2, [r0, #-8]!
   88d78:	f7ff fd3c 	bl	887f4 <__lo0bits>
   88d7c:	bb70      	cbnz	r0, 88ddc <__d2b+0x98>
   88d7e:	e9dd 2300 	ldrd	r2, r3, [sp]
   88d82:	617a      	str	r2, [r7, #20]
   88d84:	2b00      	cmp	r3, #0
   88d86:	bf0c      	ite	eq
   88d88:	2101      	moveq	r1, #1
   88d8a:	2102      	movne	r1, #2
   88d8c:	61bb      	str	r3, [r7, #24]
   88d8e:	6139      	str	r1, [r7, #16]
   88d90:	b9cc      	cbnz	r4, 88dc6 <__d2b+0x82>
   88d92:	eb07 0381 	add.w	r3, r7, r1, lsl #2
   88d96:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   88d9a:	6030      	str	r0, [r6, #0]
   88d9c:	6918      	ldr	r0, [r3, #16]
   88d9e:	f7ff fd09 	bl	887b4 <__hi0bits>
   88da2:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
   88da6:	6028      	str	r0, [r5, #0]
   88da8:	4638      	mov	r0, r7
   88daa:	b002      	add	sp, #8
   88dac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   88db0:	a801      	add	r0, sp, #4
   88db2:	f7ff fd1f 	bl	887f4 <__lo0bits>
   88db6:	2201      	movs	r2, #1
   88db8:	9b01      	ldr	r3, [sp, #4]
   88dba:	4611      	mov	r1, r2
   88dbc:	3020      	adds	r0, #32
   88dbe:	e9c7 2304 	strd	r2, r3, [r7, #16]
   88dc2:	2c00      	cmp	r4, #0
   88dc4:	d0e5      	beq.n	88d92 <__d2b+0x4e>
   88dc6:	f2a4 4333 	subw	r3, r4, #1075	; 0x433
   88dca:	4403      	add	r3, r0
   88dcc:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   88dd0:	6033      	str	r3, [r6, #0]
   88dd2:	6028      	str	r0, [r5, #0]
   88dd4:	4638      	mov	r0, r7
   88dd6:	b002      	add	sp, #8
   88dd8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   88ddc:	9b01      	ldr	r3, [sp, #4]
   88dde:	f1c0 0220 	rsb	r2, r0, #32
   88de2:	9900      	ldr	r1, [sp, #0]
   88de4:	fa03 f202 	lsl.w	r2, r3, r2
   88de8:	430a      	orrs	r2, r1
   88dea:	40c3      	lsrs	r3, r0
   88dec:	9301      	str	r3, [sp, #4]
   88dee:	617a      	str	r2, [r7, #20]
   88df0:	e7c8      	b.n	88d84 <__d2b+0x40>
   88df2:	bf00      	nop

00088df4 <__ratio>:
   88df4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   88df8:	b083      	sub	sp, #12
   88dfa:	460f      	mov	r7, r1
   88dfc:	4669      	mov	r1, sp
   88dfe:	4606      	mov	r6, r0
   88e00:	f7ff ff40 	bl	88c84 <__b2d>
   88e04:	4604      	mov	r4, r0
   88e06:	460d      	mov	r5, r1
   88e08:	4638      	mov	r0, r7
   88e0a:	a901      	add	r1, sp, #4
   88e0c:	f7ff ff3a 	bl	88c84 <__b2d>
   88e10:	6936      	ldr	r6, [r6, #16]
   88e12:	693a      	ldr	r2, [r7, #16]
   88e14:	4689      	mov	r9, r1
   88e16:	e9dd 1300 	ldrd	r1, r3, [sp]
   88e1a:	1ab6      	subs	r6, r6, r2
   88e1c:	1acb      	subs	r3, r1, r3
   88e1e:	eb03 1346 	add.w	r3, r3, r6, lsl #5
   88e22:	2b00      	cmp	r3, #0
   88e24:	4680      	mov	r8, r0
   88e26:	dd0b      	ble.n	88e40 <__ratio+0x4c>
   88e28:	eb05 5703 	add.w	r7, r5, r3, lsl #20
   88e2c:	463d      	mov	r5, r7
   88e2e:	4642      	mov	r2, r8
   88e30:	464b      	mov	r3, r9
   88e32:	4620      	mov	r0, r4
   88e34:	4629      	mov	r1, r5
   88e36:	f7fb fdbf 	bl	849b8 <__aeabi_ddiv>
   88e3a:	b003      	add	sp, #12
   88e3c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   88e40:	ebc3 3303 	rsb	r3, r3, r3, lsl #12
   88e44:	eb09 5103 	add.w	r1, r9, r3, lsl #20
   88e48:	4689      	mov	r9, r1
   88e4a:	e7f0      	b.n	88e2e <__ratio+0x3a>

00088e4c <_mprec_log10>:
   88e4c:	2817      	cmp	r0, #23
   88e4e:	b5d0      	push	{r4, r6, r7, lr}
   88e50:	4604      	mov	r4, r0
   88e52:	dd0a      	ble.n	88e6a <_mprec_log10+0x1e>
   88e54:	2000      	movs	r0, #0
   88e56:	2600      	movs	r6, #0
   88e58:	4907      	ldr	r1, [pc, #28]	; (88e78 <_mprec_log10+0x2c>)
   88e5a:	4f08      	ldr	r7, [pc, #32]	; (88e7c <_mprec_log10+0x30>)
   88e5c:	4632      	mov	r2, r6
   88e5e:	463b      	mov	r3, r7
   88e60:	f7fb fc80 	bl	84764 <__aeabi_dmul>
   88e64:	3c01      	subs	r4, #1
   88e66:	d1f9      	bne.n	88e5c <_mprec_log10+0x10>
   88e68:	bdd0      	pop	{r4, r6, r7, pc}
   88e6a:	4b05      	ldr	r3, [pc, #20]	; (88e80 <_mprec_log10+0x34>)
   88e6c:	eb03 04c0 	add.w	r4, r3, r0, lsl #3
   88e70:	e9d4 0104 	ldrd	r0, r1, [r4, #16]
   88e74:	bdd0      	pop	{r4, r6, r7, pc}
   88e76:	bf00      	nop
   88e78:	3ff00000 	.word	0x3ff00000
   88e7c:	40240000 	.word	0x40240000
   88e80:	0008a1f0 	.word	0x0008a1f0

00088e84 <__copybits>:
   88e84:	b470      	push	{r4, r5, r6}
   88e86:	6914      	ldr	r4, [r2, #16]
   88e88:	1e4d      	subs	r5, r1, #1
   88e8a:	f102 0314 	add.w	r3, r2, #20
   88e8e:	eb03 0184 	add.w	r1, r3, r4, lsl #2
   88e92:	116d      	asrs	r5, r5, #5
   88e94:	3501      	adds	r5, #1
   88e96:	428b      	cmp	r3, r1
   88e98:	eb00 0485 	add.w	r4, r0, r5, lsl #2
   88e9c:	d20c      	bcs.n	88eb8 <__copybits+0x34>
   88e9e:	1f05      	subs	r5, r0, #4
   88ea0:	f853 6b04 	ldr.w	r6, [r3], #4
   88ea4:	4299      	cmp	r1, r3
   88ea6:	f845 6f04 	str.w	r6, [r5, #4]!
   88eaa:	d8f9      	bhi.n	88ea0 <__copybits+0x1c>
   88eac:	1a8b      	subs	r3, r1, r2
   88eae:	3b15      	subs	r3, #21
   88eb0:	f023 0303 	bic.w	r3, r3, #3
   88eb4:	3304      	adds	r3, #4
   88eb6:	4418      	add	r0, r3
   88eb8:	4284      	cmp	r4, r0
   88eba:	d904      	bls.n	88ec6 <__copybits+0x42>
   88ebc:	2300      	movs	r3, #0
   88ebe:	f840 3b04 	str.w	r3, [r0], #4
   88ec2:	4284      	cmp	r4, r0
   88ec4:	d8fb      	bhi.n	88ebe <__copybits+0x3a>
   88ec6:	bc70      	pop	{r4, r5, r6}
   88ec8:	4770      	bx	lr
   88eca:	bf00      	nop

00088ecc <__any_on>:
   88ecc:	6903      	ldr	r3, [r0, #16]
   88ece:	b410      	push	{r4}
   88ed0:	114c      	asrs	r4, r1, #5
   88ed2:	42a3      	cmp	r3, r4
   88ed4:	f100 0214 	add.w	r2, r0, #20
   88ed8:	da0f      	bge.n	88efa <__any_on+0x2e>
   88eda:	eb02 0383 	add.w	r3, r2, r3, lsl #2
   88ede:	429a      	cmp	r2, r3
   88ee0:	d21c      	bcs.n	88f1c <__any_on+0x50>
   88ee2:	f853 0c04 	ldr.w	r0, [r3, #-4]
   88ee6:	3b04      	subs	r3, #4
   88ee8:	b118      	cbz	r0, 88ef2 <__any_on+0x26>
   88eea:	e014      	b.n	88f16 <__any_on+0x4a>
   88eec:	f853 1d04 	ldr.w	r1, [r3, #-4]!
   88ef0:	b989      	cbnz	r1, 88f16 <__any_on+0x4a>
   88ef2:	429a      	cmp	r2, r3
   88ef4:	d3fa      	bcc.n	88eec <__any_on+0x20>
   88ef6:	bc10      	pop	{r4}
   88ef8:	4770      	bx	lr
   88efa:	eb02 0384 	add.w	r3, r2, r4, lsl #2
   88efe:	ddee      	ble.n	88ede <__any_on+0x12>
   88f00:	f011 011f 	ands.w	r1, r1, #31
   88f04:	d0eb      	beq.n	88ede <__any_on+0x12>
   88f06:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
   88f0a:	fa24 f001 	lsr.w	r0, r4, r1
   88f0e:	fa00 f101 	lsl.w	r1, r0, r1
   88f12:	428c      	cmp	r4, r1
   88f14:	d0e3      	beq.n	88ede <__any_on+0x12>
   88f16:	2001      	movs	r0, #1
   88f18:	bc10      	pop	{r4}
   88f1a:	4770      	bx	lr
   88f1c:	2000      	movs	r0, #0
   88f1e:	e7ea      	b.n	88ef6 <__any_on+0x2a>

00088f20 <_realloc_r>:
   88f20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   88f24:	4692      	mov	sl, r2
   88f26:	b083      	sub	sp, #12
   88f28:	2900      	cmp	r1, #0
   88f2a:	f000 80a1 	beq.w	89070 <_realloc_r+0x150>
   88f2e:	460d      	mov	r5, r1
   88f30:	4680      	mov	r8, r0
   88f32:	f10a 040b 	add.w	r4, sl, #11
   88f36:	f7ff fb7b 	bl	88630 <__malloc_lock>
   88f3a:	f855 2c04 	ldr.w	r2, [r5, #-4]
   88f3e:	2c16      	cmp	r4, #22
   88f40:	f022 0603 	bic.w	r6, r2, #3
   88f44:	f1a5 0708 	sub.w	r7, r5, #8
   88f48:	d83e      	bhi.n	88fc8 <_realloc_r+0xa8>
   88f4a:	2410      	movs	r4, #16
   88f4c:	4621      	mov	r1, r4
   88f4e:	45a2      	cmp	sl, r4
   88f50:	d83f      	bhi.n	88fd2 <_realloc_r+0xb2>
   88f52:	428e      	cmp	r6, r1
   88f54:	eb07 0906 	add.w	r9, r7, r6
   88f58:	da74      	bge.n	89044 <_realloc_r+0x124>
   88f5a:	4bc8      	ldr	r3, [pc, #800]	; (8927c <_realloc_r+0x35c>)
   88f5c:	6898      	ldr	r0, [r3, #8]
   88f5e:	4548      	cmp	r0, r9
   88f60:	f000 80aa 	beq.w	890b8 <_realloc_r+0x198>
   88f64:	f8d9 0004 	ldr.w	r0, [r9, #4]
   88f68:	f020 0301 	bic.w	r3, r0, #1
   88f6c:	444b      	add	r3, r9
   88f6e:	685b      	ldr	r3, [r3, #4]
   88f70:	07db      	lsls	r3, r3, #31
   88f72:	f140 8083 	bpl.w	8907c <_realloc_r+0x15c>
   88f76:	07d2      	lsls	r2, r2, #31
   88f78:	d534      	bpl.n	88fe4 <_realloc_r+0xc4>
   88f7a:	4651      	mov	r1, sl
   88f7c:	4640      	mov	r0, r8
   88f7e:	f7fe ff75 	bl	87e6c <_malloc_r>
   88f82:	4682      	mov	sl, r0
   88f84:	b1e0      	cbz	r0, 88fc0 <_realloc_r+0xa0>
   88f86:	f855 3c04 	ldr.w	r3, [r5, #-4]
   88f8a:	f1a0 0208 	sub.w	r2, r0, #8
   88f8e:	f023 0301 	bic.w	r3, r3, #1
   88f92:	443b      	add	r3, r7
   88f94:	4293      	cmp	r3, r2
   88f96:	f000 810e 	beq.w	891b6 <_realloc_r+0x296>
   88f9a:	1f32      	subs	r2, r6, #4
   88f9c:	2a24      	cmp	r2, #36	; 0x24
   88f9e:	f200 8114 	bhi.w	891ca <_realloc_r+0x2aa>
   88fa2:	2a13      	cmp	r2, #19
   88fa4:	6829      	ldr	r1, [r5, #0]
   88fa6:	f200 80fb 	bhi.w	891a0 <_realloc_r+0x280>
   88faa:	4603      	mov	r3, r0
   88fac:	462a      	mov	r2, r5
   88fae:	6019      	str	r1, [r3, #0]
   88fb0:	6851      	ldr	r1, [r2, #4]
   88fb2:	6059      	str	r1, [r3, #4]
   88fb4:	6892      	ldr	r2, [r2, #8]
   88fb6:	609a      	str	r2, [r3, #8]
   88fb8:	4629      	mov	r1, r5
   88fba:	4640      	mov	r0, r8
   88fbc:	f7fe fe58 	bl	87c70 <_free_r>
   88fc0:	4640      	mov	r0, r8
   88fc2:	f7ff fb37 	bl	88634 <__malloc_unlock>
   88fc6:	e04f      	b.n	89068 <_realloc_r+0x148>
   88fc8:	f024 0407 	bic.w	r4, r4, #7
   88fcc:	2c00      	cmp	r4, #0
   88fce:	4621      	mov	r1, r4
   88fd0:	dabd      	bge.n	88f4e <_realloc_r+0x2e>
   88fd2:	f04f 0a00 	mov.w	sl, #0
   88fd6:	230c      	movs	r3, #12
   88fd8:	4650      	mov	r0, sl
   88fda:	f8c8 3000 	str.w	r3, [r8]
   88fde:	b003      	add	sp, #12
   88fe0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   88fe4:	f855 3c08 	ldr.w	r3, [r5, #-8]
   88fe8:	eba7 0b03 	sub.w	fp, r7, r3
   88fec:	f8db 2004 	ldr.w	r2, [fp, #4]
   88ff0:	f022 0203 	bic.w	r2, r2, #3
   88ff4:	18b3      	adds	r3, r6, r2
   88ff6:	428b      	cmp	r3, r1
   88ff8:	dbbf      	blt.n	88f7a <_realloc_r+0x5a>
   88ffa:	46da      	mov	sl, fp
   88ffc:	f8db 100c 	ldr.w	r1, [fp, #12]
   89000:	f85a 0f08 	ldr.w	r0, [sl, #8]!
   89004:	1f32      	subs	r2, r6, #4
   89006:	2a24      	cmp	r2, #36	; 0x24
   89008:	60c1      	str	r1, [r0, #12]
   8900a:	eb0b 0903 	add.w	r9, fp, r3
   8900e:	6088      	str	r0, [r1, #8]
   89010:	f200 80be 	bhi.w	89190 <_realloc_r+0x270>
   89014:	2a13      	cmp	r2, #19
   89016:	6829      	ldr	r1, [r5, #0]
   89018:	f240 80d5 	bls.w	891c6 <_realloc_r+0x2a6>
   8901c:	f8cb 1008 	str.w	r1, [fp, #8]
   89020:	6869      	ldr	r1, [r5, #4]
   89022:	2a1b      	cmp	r2, #27
   89024:	f8cb 100c 	str.w	r1, [fp, #12]
   89028:	68a9      	ldr	r1, [r5, #8]
   8902a:	f200 80e5 	bhi.w	891f8 <_realloc_r+0x2d8>
   8902e:	f10b 0210 	add.w	r2, fp, #16
   89032:	3508      	adds	r5, #8
   89034:	6011      	str	r1, [r2, #0]
   89036:	6869      	ldr	r1, [r5, #4]
   89038:	461e      	mov	r6, r3
   8903a:	6051      	str	r1, [r2, #4]
   8903c:	68ab      	ldr	r3, [r5, #8]
   8903e:	465f      	mov	r7, fp
   89040:	4655      	mov	r5, sl
   89042:	6093      	str	r3, [r2, #8]
   89044:	687a      	ldr	r2, [r7, #4]
   89046:	1b33      	subs	r3, r6, r4
   89048:	2b0f      	cmp	r3, #15
   8904a:	f002 0201 	and.w	r2, r2, #1
   8904e:	d822      	bhi.n	89096 <_realloc_r+0x176>
   89050:	4332      	orrs	r2, r6
   89052:	607a      	str	r2, [r7, #4]
   89054:	f8d9 3004 	ldr.w	r3, [r9, #4]
   89058:	f043 0301 	orr.w	r3, r3, #1
   8905c:	f8c9 3004 	str.w	r3, [r9, #4]
   89060:	4640      	mov	r0, r8
   89062:	f7ff fae7 	bl	88634 <__malloc_unlock>
   89066:	46aa      	mov	sl, r5
   89068:	4650      	mov	r0, sl
   8906a:	b003      	add	sp, #12
   8906c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   89070:	4611      	mov	r1, r2
   89072:	b003      	add	sp, #12
   89074:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   89078:	f7fe bef8 	b.w	87e6c <_malloc_r>
   8907c:	f020 0003 	bic.w	r0, r0, #3
   89080:	1833      	adds	r3, r6, r0
   89082:	428b      	cmp	r3, r1
   89084:	db63      	blt.n	8914e <_realloc_r+0x22e>
   89086:	e9d9 1202 	ldrd	r1, r2, [r9, #8]
   8908a:	461e      	mov	r6, r3
   8908c:	60ca      	str	r2, [r1, #12]
   8908e:	eb07 0903 	add.w	r9, r7, r3
   89092:	6091      	str	r1, [r2, #8]
   89094:	e7d6      	b.n	89044 <_realloc_r+0x124>
   89096:	1939      	adds	r1, r7, r4
   89098:	4322      	orrs	r2, r4
   8909a:	f043 0301 	orr.w	r3, r3, #1
   8909e:	607a      	str	r2, [r7, #4]
   890a0:	604b      	str	r3, [r1, #4]
   890a2:	f8d9 3004 	ldr.w	r3, [r9, #4]
   890a6:	3108      	adds	r1, #8
   890a8:	f043 0301 	orr.w	r3, r3, #1
   890ac:	f8c9 3004 	str.w	r3, [r9, #4]
   890b0:	4640      	mov	r0, r8
   890b2:	f7fe fddd 	bl	87c70 <_free_r>
   890b6:	e7d3      	b.n	89060 <_realloc_r+0x140>
   890b8:	f8d0 9004 	ldr.w	r9, [r0, #4]
   890bc:	f104 0010 	add.w	r0, r4, #16
   890c0:	f029 0903 	bic.w	r9, r9, #3
   890c4:	44b1      	add	r9, r6
   890c6:	4581      	cmp	r9, r0
   890c8:	f280 8083 	bge.w	891d2 <_realloc_r+0x2b2>
   890cc:	07d2      	lsls	r2, r2, #31
   890ce:	f53f af54 	bmi.w	88f7a <_realloc_r+0x5a>
   890d2:	f855 2c08 	ldr.w	r2, [r5, #-8]
   890d6:	eba7 0b02 	sub.w	fp, r7, r2
   890da:	f8db 2004 	ldr.w	r2, [fp, #4]
   890de:	f022 0203 	bic.w	r2, r2, #3
   890e2:	4491      	add	r9, r2
   890e4:	4548      	cmp	r0, r9
   890e6:	dc85      	bgt.n	88ff4 <_realloc_r+0xd4>
   890e8:	46da      	mov	sl, fp
   890ea:	f8db 100c 	ldr.w	r1, [fp, #12]
   890ee:	f85a 0f08 	ldr.w	r0, [sl, #8]!
   890f2:	1f32      	subs	r2, r6, #4
   890f4:	2a24      	cmp	r2, #36	; 0x24
   890f6:	60c1      	str	r1, [r0, #12]
   890f8:	6088      	str	r0, [r1, #8]
   890fa:	f200 80ab 	bhi.w	89254 <_realloc_r+0x334>
   890fe:	2a13      	cmp	r2, #19
   89100:	6829      	ldr	r1, [r5, #0]
   89102:	f240 80a5 	bls.w	89250 <_realloc_r+0x330>
   89106:	f8cb 1008 	str.w	r1, [fp, #8]
   8910a:	6869      	ldr	r1, [r5, #4]
   8910c:	2a1b      	cmp	r2, #27
   8910e:	f8cb 100c 	str.w	r1, [fp, #12]
   89112:	68a9      	ldr	r1, [r5, #8]
   89114:	f200 80a5 	bhi.w	89262 <_realloc_r+0x342>
   89118:	f10b 0210 	add.w	r2, fp, #16
   8911c:	3508      	adds	r5, #8
   8911e:	6011      	str	r1, [r2, #0]
   89120:	6869      	ldr	r1, [r5, #4]
   89122:	6051      	str	r1, [r2, #4]
   89124:	68a9      	ldr	r1, [r5, #8]
   89126:	6091      	str	r1, [r2, #8]
   89128:	eba9 0204 	sub.w	r2, r9, r4
   8912c:	eb0b 0104 	add.w	r1, fp, r4
   89130:	f042 0201 	orr.w	r2, r2, #1
   89134:	6099      	str	r1, [r3, #8]
   89136:	604a      	str	r2, [r1, #4]
   89138:	f8db 3004 	ldr.w	r3, [fp, #4]
   8913c:	4640      	mov	r0, r8
   8913e:	f003 0301 	and.w	r3, r3, #1
   89142:	431c      	orrs	r4, r3
   89144:	f8cb 4004 	str.w	r4, [fp, #4]
   89148:	f7ff fa74 	bl	88634 <__malloc_unlock>
   8914c:	e78c      	b.n	89068 <_realloc_r+0x148>
   8914e:	07d3      	lsls	r3, r2, #31
   89150:	f53f af13 	bmi.w	88f7a <_realloc_r+0x5a>
   89154:	f855 3c08 	ldr.w	r3, [r5, #-8]
   89158:	eba7 0b03 	sub.w	fp, r7, r3
   8915c:	f8db 2004 	ldr.w	r2, [fp, #4]
   89160:	f022 0203 	bic.w	r2, r2, #3
   89164:	4410      	add	r0, r2
   89166:	1983      	adds	r3, r0, r6
   89168:	428b      	cmp	r3, r1
   8916a:	f6ff af43 	blt.w	88ff4 <_realloc_r+0xd4>
   8916e:	e9d9 0102 	ldrd	r0, r1, [r9, #8]
   89172:	46da      	mov	sl, fp
   89174:	60c1      	str	r1, [r0, #12]
   89176:	6088      	str	r0, [r1, #8]
   89178:	f85a 0f08 	ldr.w	r0, [sl, #8]!
   8917c:	f8db 100c 	ldr.w	r1, [fp, #12]
   89180:	1f32      	subs	r2, r6, #4
   89182:	2a24      	cmp	r2, #36	; 0x24
   89184:	60c1      	str	r1, [r0, #12]
   89186:	eb0b 0903 	add.w	r9, fp, r3
   8918a:	6088      	str	r0, [r1, #8]
   8918c:	f67f af42 	bls.w	89014 <_realloc_r+0xf4>
   89190:	4629      	mov	r1, r5
   89192:	4650      	mov	r0, sl
   89194:	461e      	mov	r6, r3
   89196:	465f      	mov	r7, fp
   89198:	f7ff f9e8 	bl	8856c <memmove>
   8919c:	4655      	mov	r5, sl
   8919e:	e751      	b.n	89044 <_realloc_r+0x124>
   891a0:	6001      	str	r1, [r0, #0]
   891a2:	686b      	ldr	r3, [r5, #4]
   891a4:	2a1b      	cmp	r2, #27
   891a6:	6043      	str	r3, [r0, #4]
   891a8:	d832      	bhi.n	89210 <_realloc_r+0x2f0>
   891aa:	f105 0208 	add.w	r2, r5, #8
   891ae:	f100 0308 	add.w	r3, r0, #8
   891b2:	68a9      	ldr	r1, [r5, #8]
   891b4:	e6fb      	b.n	88fae <_realloc_r+0x8e>
   891b6:	f850 3c04 	ldr.w	r3, [r0, #-4]
   891ba:	f023 0303 	bic.w	r3, r3, #3
   891be:	441e      	add	r6, r3
   891c0:	eb07 0906 	add.w	r9, r7, r6
   891c4:	e73e      	b.n	89044 <_realloc_r+0x124>
   891c6:	4652      	mov	r2, sl
   891c8:	e734      	b.n	89034 <_realloc_r+0x114>
   891ca:	4629      	mov	r1, r5
   891cc:	f7ff f9ce 	bl	8856c <memmove>
   891d0:	e6f2      	b.n	88fb8 <_realloc_r+0x98>
   891d2:	eba9 0904 	sub.w	r9, r9, r4
   891d6:	4427      	add	r7, r4
   891d8:	f049 0201 	orr.w	r2, r9, #1
   891dc:	609f      	str	r7, [r3, #8]
   891de:	607a      	str	r2, [r7, #4]
   891e0:	f855 3c04 	ldr.w	r3, [r5, #-4]
   891e4:	4640      	mov	r0, r8
   891e6:	f003 0301 	and.w	r3, r3, #1
   891ea:	431c      	orrs	r4, r3
   891ec:	f845 4c04 	str.w	r4, [r5, #-4]
   891f0:	f7ff fa20 	bl	88634 <__malloc_unlock>
   891f4:	46aa      	mov	sl, r5
   891f6:	e737      	b.n	89068 <_realloc_r+0x148>
   891f8:	f8cb 1010 	str.w	r1, [fp, #16]
   891fc:	68e9      	ldr	r1, [r5, #12]
   891fe:	2a24      	cmp	r2, #36	; 0x24
   89200:	f8cb 1014 	str.w	r1, [fp, #20]
   89204:	6929      	ldr	r1, [r5, #16]
   89206:	d00f      	beq.n	89228 <_realloc_r+0x308>
   89208:	f10b 0218 	add.w	r2, fp, #24
   8920c:	3510      	adds	r5, #16
   8920e:	e711      	b.n	89034 <_realloc_r+0x114>
   89210:	68ab      	ldr	r3, [r5, #8]
   89212:	2a24      	cmp	r2, #36	; 0x24
   89214:	6083      	str	r3, [r0, #8]
   89216:	68eb      	ldr	r3, [r5, #12]
   89218:	60c3      	str	r3, [r0, #12]
   8921a:	d00f      	beq.n	8923c <_realloc_r+0x31c>
   8921c:	f105 0210 	add.w	r2, r5, #16
   89220:	f100 0310 	add.w	r3, r0, #16
   89224:	6929      	ldr	r1, [r5, #16]
   89226:	e6c2      	b.n	88fae <_realloc_r+0x8e>
   89228:	f8cb 1018 	str.w	r1, [fp, #24]
   8922c:	6969      	ldr	r1, [r5, #20]
   8922e:	f10b 0220 	add.w	r2, fp, #32
   89232:	f8cb 101c 	str.w	r1, [fp, #28]
   89236:	69a9      	ldr	r1, [r5, #24]
   89238:	3518      	adds	r5, #24
   8923a:	e6fb      	b.n	89034 <_realloc_r+0x114>
   8923c:	692b      	ldr	r3, [r5, #16]
   8923e:	f105 0218 	add.w	r2, r5, #24
   89242:	6103      	str	r3, [r0, #16]
   89244:	6969      	ldr	r1, [r5, #20]
   89246:	f100 0318 	add.w	r3, r0, #24
   8924a:	6141      	str	r1, [r0, #20]
   8924c:	69a9      	ldr	r1, [r5, #24]
   8924e:	e6ae      	b.n	88fae <_realloc_r+0x8e>
   89250:	4652      	mov	r2, sl
   89252:	e764      	b.n	8911e <_realloc_r+0x1fe>
   89254:	4629      	mov	r1, r5
   89256:	4650      	mov	r0, sl
   89258:	9301      	str	r3, [sp, #4]
   8925a:	f7ff f987 	bl	8856c <memmove>
   8925e:	9b01      	ldr	r3, [sp, #4]
   89260:	e762      	b.n	89128 <_realloc_r+0x208>
   89262:	f8cb 1010 	str.w	r1, [fp, #16]
   89266:	68e9      	ldr	r1, [r5, #12]
   89268:	2a24      	cmp	r2, #36	; 0x24
   8926a:	f8cb 1014 	str.w	r1, [fp, #20]
   8926e:	6929      	ldr	r1, [r5, #16]
   89270:	d006      	beq.n	89280 <_realloc_r+0x360>
   89272:	f10b 0218 	add.w	r2, fp, #24
   89276:	3510      	adds	r5, #16
   89278:	e751      	b.n	8911e <_realloc_r+0x1fe>
   8927a:	bf00      	nop
   8927c:	20070994 	.word	0x20070994
   89280:	f8cb 1018 	str.w	r1, [fp, #24]
   89284:	6969      	ldr	r1, [r5, #20]
   89286:	f10b 0220 	add.w	r2, fp, #32
   8928a:	f8cb 101c 	str.w	r1, [fp, #28]
   8928e:	69a9      	ldr	r1, [r5, #24]
   89290:	3518      	adds	r5, #24
   89292:	e744      	b.n	8911e <_realloc_r+0x1fe>

00089294 <_sbrk_r>:
   89294:	b538      	push	{r3, r4, r5, lr}
   89296:	2300      	movs	r3, #0
   89298:	4c06      	ldr	r4, [pc, #24]	; (892b4 <_sbrk_r+0x20>)
   8929a:	4605      	mov	r5, r0
   8929c:	4608      	mov	r0, r1
   8929e:	6023      	str	r3, [r4, #0]
   892a0:	f7f9 fae0 	bl	82864 <_sbrk>
   892a4:	1c43      	adds	r3, r0, #1
   892a6:	d000      	beq.n	892aa <_sbrk_r+0x16>
   892a8:	bd38      	pop	{r3, r4, r5, pc}
   892aa:	6823      	ldr	r3, [r4, #0]
   892ac:	2b00      	cmp	r3, #0
   892ae:	d0fb      	beq.n	892a8 <_sbrk_r+0x14>
   892b0:	602b      	str	r3, [r5, #0]
   892b2:	bd38      	pop	{r3, r4, r5, pc}
   892b4:	20070ea8 	.word	0x20070ea8

000892b8 <__ssprint_r>:
   892b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   892bc:	6893      	ldr	r3, [r2, #8]
   892be:	b083      	sub	sp, #12
   892c0:	4690      	mov	r8, r2
   892c2:	2b00      	cmp	r3, #0
   892c4:	d06c      	beq.n	893a0 <__ssprint_r+0xe8>
   892c6:	6817      	ldr	r7, [r2, #0]
   892c8:	4682      	mov	sl, r0
   892ca:	460c      	mov	r4, r1
   892cc:	6808      	ldr	r0, [r1, #0]
   892ce:	3708      	adds	r7, #8
   892d0:	688d      	ldr	r5, [r1, #8]
   892d2:	e042      	b.n	8935a <__ssprint_r+0xa2>
   892d4:	89a3      	ldrh	r3, [r4, #12]
   892d6:	f413 6f90 	tst.w	r3, #1152	; 0x480
   892da:	d02d      	beq.n	89338 <__ssprint_r+0x80>
   892dc:	e9d4 1504 	ldrd	r1, r5, [r4, #16]
   892e0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
   892e4:	eba0 0b01 	sub.w	fp, r0, r1
   892e8:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
   892ec:	1c70      	adds	r0, r6, #1
   892ee:	106d      	asrs	r5, r5, #1
   892f0:	4458      	add	r0, fp
   892f2:	42a8      	cmp	r0, r5
   892f4:	462a      	mov	r2, r5
   892f6:	bf84      	itt	hi
   892f8:	4605      	movhi	r5, r0
   892fa:	462a      	movhi	r2, r5
   892fc:	055b      	lsls	r3, r3, #21
   892fe:	d536      	bpl.n	8936e <__ssprint_r+0xb6>
   89300:	4611      	mov	r1, r2
   89302:	4650      	mov	r0, sl
   89304:	f7fe fdb2 	bl	87e6c <_malloc_r>
   89308:	2800      	cmp	r0, #0
   8930a:	d03a      	beq.n	89382 <__ssprint_r+0xca>
   8930c:	465a      	mov	r2, fp
   8930e:	6921      	ldr	r1, [r4, #16]
   89310:	9001      	str	r0, [sp, #4]
   89312:	f7ff f8b5 	bl	88480 <memcpy>
   89316:	89a2      	ldrh	r2, [r4, #12]
   89318:	9b01      	ldr	r3, [sp, #4]
   8931a:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   8931e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   89322:	81a2      	strh	r2, [r4, #12]
   89324:	eba5 020b 	sub.w	r2, r5, fp
   89328:	eb03 000b 	add.w	r0, r3, fp
   8932c:	6165      	str	r5, [r4, #20]
   8932e:	46b3      	mov	fp, r6
   89330:	4635      	mov	r5, r6
   89332:	6123      	str	r3, [r4, #16]
   89334:	6020      	str	r0, [r4, #0]
   89336:	60a2      	str	r2, [r4, #8]
   89338:	465a      	mov	r2, fp
   8933a:	4649      	mov	r1, r9
   8933c:	f7ff f916 	bl	8856c <memmove>
   89340:	f8d8 3008 	ldr.w	r3, [r8, #8]
   89344:	68a2      	ldr	r2, [r4, #8]
   89346:	6820      	ldr	r0, [r4, #0]
   89348:	1b55      	subs	r5, r2, r5
   8934a:	4458      	add	r0, fp
   8934c:	1b9e      	subs	r6, r3, r6
   8934e:	60a5      	str	r5, [r4, #8]
   89350:	6020      	str	r0, [r4, #0]
   89352:	f8c8 6008 	str.w	r6, [r8, #8]
   89356:	b31e      	cbz	r6, 893a0 <__ssprint_r+0xe8>
   89358:	3708      	adds	r7, #8
   8935a:	e957 9602 	ldrd	r9, r6, [r7, #-8]
   8935e:	46ab      	mov	fp, r5
   89360:	2e00      	cmp	r6, #0
   89362:	d0f9      	beq.n	89358 <__ssprint_r+0xa0>
   89364:	42ae      	cmp	r6, r5
   89366:	d2b5      	bcs.n	892d4 <__ssprint_r+0x1c>
   89368:	4635      	mov	r5, r6
   8936a:	46b3      	mov	fp, r6
   8936c:	e7e4      	b.n	89338 <__ssprint_r+0x80>
   8936e:	4650      	mov	r0, sl
   89370:	f7ff fdd6 	bl	88f20 <_realloc_r>
   89374:	4603      	mov	r3, r0
   89376:	2800      	cmp	r0, #0
   89378:	d1d4      	bne.n	89324 <__ssprint_r+0x6c>
   8937a:	6921      	ldr	r1, [r4, #16]
   8937c:	4650      	mov	r0, sl
   8937e:	f7fe fc77 	bl	87c70 <_free_r>
   89382:	230c      	movs	r3, #12
   89384:	2200      	movs	r2, #0
   89386:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
   8938a:	f8ca 3000 	str.w	r3, [sl]
   8938e:	89a3      	ldrh	r3, [r4, #12]
   89390:	f043 0340 	orr.w	r3, r3, #64	; 0x40
   89394:	81a3      	strh	r3, [r4, #12]
   89396:	e9c8 2201 	strd	r2, r2, [r8, #4]
   8939a:	b003      	add	sp, #12
   8939c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   893a0:	2000      	movs	r0, #0
   893a2:	f8c8 0004 	str.w	r0, [r8, #4]
   893a6:	b003      	add	sp, #12
   893a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

000893ac <_svfiprintf_r>:
   893ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   893b0:	b0ab      	sub	sp, #172	; 0xac
   893b2:	460c      	mov	r4, r1
   893b4:	9102      	str	r1, [sp, #8]
   893b6:	8989      	ldrh	r1, [r1, #12]
   893b8:	4693      	mov	fp, r2
   893ba:	0609      	lsls	r1, r1, #24
   893bc:	e9cd 0305 	strd	r0, r3, [sp, #20]
   893c0:	d503      	bpl.n	893ca <_svfiprintf_r+0x1e>
   893c2:	6923      	ldr	r3, [r4, #16]
   893c4:	2b00      	cmp	r3, #0
   893c6:	f000 8493 	beq.w	89cf0 <_svfiprintf_r+0x944>
   893ca:	2300      	movs	r3, #0
   893cc:	e9cd 330e 	strd	r3, r3, [sp, #56]	; 0x38
   893d0:	f10d 0a68 	add.w	sl, sp, #104	; 0x68
   893d4:	9308      	str	r3, [sp, #32]
   893d6:	9301      	str	r3, [sp, #4]
   893d8:	f8cd a034 	str.w	sl, [sp, #52]	; 0x34
   893dc:	f89b 3000 	ldrb.w	r3, [fp]
   893e0:	2b00      	cmp	r3, #0
   893e2:	f000 80f0 	beq.w	895c6 <_svfiprintf_r+0x21a>
   893e6:	2b25      	cmp	r3, #37	; 0x25
   893e8:	465c      	mov	r4, fp
   893ea:	d102      	bne.n	893f2 <_svfiprintf_r+0x46>
   893ec:	e01c      	b.n	89428 <_svfiprintf_r+0x7c>
   893ee:	2b25      	cmp	r3, #37	; 0x25
   893f0:	d003      	beq.n	893fa <_svfiprintf_r+0x4e>
   893f2:	f814 3f01 	ldrb.w	r3, [r4, #1]!
   893f6:	2b00      	cmp	r3, #0
   893f8:	d1f9      	bne.n	893ee <_svfiprintf_r+0x42>
   893fa:	eba4 050b 	sub.w	r5, r4, fp
   893fe:	b17d      	cbz	r5, 89420 <_svfiprintf_r+0x74>
   89400:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
   89404:	3301      	adds	r3, #1
   89406:	442a      	add	r2, r5
   89408:	2b07      	cmp	r3, #7
   8940a:	e9ca b500 	strd	fp, r5, [sl]
   8940e:	e9cd 320e 	strd	r3, r2, [sp, #56]	; 0x38
   89412:	f300 80cf 	bgt.w	895b4 <_svfiprintf_r+0x208>
   89416:	f10a 0a08 	add.w	sl, sl, #8
   8941a:	9b01      	ldr	r3, [sp, #4]
   8941c:	442b      	add	r3, r5
   8941e:	9301      	str	r3, [sp, #4]
   89420:	7823      	ldrb	r3, [r4, #0]
   89422:	2b00      	cmp	r3, #0
   89424:	f000 80cf 	beq.w	895c6 <_svfiprintf_r+0x21a>
   89428:	2100      	movs	r1, #0
   8942a:	f04f 0300 	mov.w	r3, #0
   8942e:	4608      	mov	r0, r1
   89430:	4688      	mov	r8, r1
   89432:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
   89436:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
   8943a:	7863      	ldrb	r3, [r4, #1]
   8943c:	9104      	str	r1, [sp, #16]
   8943e:	f104 0b01 	add.w	fp, r4, #1
   89442:	f10b 0b01 	add.w	fp, fp, #1
   89446:	f1a3 0220 	sub.w	r2, r3, #32
   8944a:	2a58      	cmp	r2, #88	; 0x58
   8944c:	f200 8343 	bhi.w	89ad6 <_svfiprintf_r+0x72a>
   89450:	e8df f012 	tbh	[pc, r2, lsl #1]
   89454:	03410117 	.word	0x03410117
   89458:	01120341 	.word	0x01120341
   8945c:	03410341 	.word	0x03410341
   89460:	03410341 	.word	0x03410341
   89464:	03410341 	.word	0x03410341
   89468:	01000105 	.word	0x01000105
   8946c:	00fb0341 	.word	0x00fb0341
   89470:	034100e1 	.word	0x034100e1
   89474:	00cd00dc 	.word	0x00cd00dc
   89478:	00cd00cd 	.word	0x00cd00cd
   8947c:	00cd00cd 	.word	0x00cd00cd
   89480:	00cd00cd 	.word	0x00cd00cd
   89484:	00cd00cd 	.word	0x00cd00cd
   89488:	03410341 	.word	0x03410341
   8948c:	03410341 	.word	0x03410341
   89490:	03410341 	.word	0x03410341
   89494:	03410341 	.word	0x03410341
   89498:	03410341 	.word	0x03410341
   8949c:	034102e3 	.word	0x034102e3
   894a0:	03410341 	.word	0x03410341
   894a4:	03410341 	.word	0x03410341
   894a8:	03410341 	.word	0x03410341
   894ac:	03410341 	.word	0x03410341
   894b0:	009f0341 	.word	0x009f0341
   894b4:	03410341 	.word	0x03410341
   894b8:	03410341 	.word	0x03410341
   894bc:	00590341 	.word	0x00590341
   894c0:	03410341 	.word	0x03410341
   894c4:	034102cb 	.word	0x034102cb
   894c8:	03410341 	.word	0x03410341
   894cc:	03410341 	.word	0x03410341
   894d0:	03410341 	.word	0x03410341
   894d4:	03410341 	.word	0x03410341
   894d8:	01ad0341 	.word	0x01ad0341
   894dc:	03410179 	.word	0x03410179
   894e0:	03410341 	.word	0x03410341
   894e4:	01790174 	.word	0x01790174
   894e8:	03410341 	.word	0x03410341
   894ec:	03410167 	.word	0x03410167
   894f0:	00a10313 	.word	0x00a10313
   894f4:	016202fb 	.word	0x016202fb
   894f8:	01420341 	.word	0x01420341
   894fc:	005b0341 	.word	0x005b0341
   89500:	03410341 	.word	0x03410341
   89504:	011f      	.short	0x011f
   89506:	f048 0810 	orr.w	r8, r8, #16
   8950a:	f018 0f20 	tst.w	r8, #32
   8950e:	f000 82d5 	beq.w	89abc <_svfiprintf_r+0x710>
   89512:	9c06      	ldr	r4, [sp, #24]
   89514:	f1b9 3fff 	cmp.w	r9, #4294967295	; 0xffffffff
   89518:	f104 0407 	add.w	r4, r4, #7
   8951c:	f024 0307 	bic.w	r3, r4, #7
   89520:	f103 0208 	add.w	r2, r3, #8
   89524:	9206      	str	r2, [sp, #24]
   89526:	f04f 0200 	mov.w	r2, #0
   8952a:	e9d3 6700 	ldrd	r6, r7, [r3]
   8952e:	f88d 202f 	strb.w	r2, [sp, #47]	; 0x2f
   89532:	f04f 0301 	mov.w	r3, #1
   89536:	f040 829e 	bne.w	89a76 <_svfiprintf_r+0x6ca>
   8953a:	2400      	movs	r4, #0
   8953c:	f8cd 8000 	str.w	r8, [sp]
   89540:	2b01      	cmp	r3, #1
   89542:	f000 836e 	beq.w	89c22 <_svfiprintf_r+0x876>
   89546:	2b02      	cmp	r3, #2
   89548:	f000 82d5 	beq.w	89af6 <_svfiprintf_r+0x74a>
   8954c:	a91a      	add	r1, sp, #104	; 0x68
   8954e:	e000      	b.n	89552 <_svfiprintf_r+0x1a6>
   89550:	4629      	mov	r1, r5
   89552:	08f2      	lsrs	r2, r6, #3
   89554:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
   89558:	08f8      	lsrs	r0, r7, #3
   8955a:	f006 0307 	and.w	r3, r6, #7
   8955e:	4607      	mov	r7, r0
   89560:	4616      	mov	r6, r2
   89562:	3330      	adds	r3, #48	; 0x30
   89564:	ea56 0207 	orrs.w	r2, r6, r7
   89568:	f801 3c01 	strb.w	r3, [r1, #-1]
   8956c:	f101 35ff 	add.w	r5, r1, #4294967295	; 0xffffffff
   89570:	d1ee      	bne.n	89550 <_svfiprintf_r+0x1a4>
   89572:	9a00      	ldr	r2, [sp, #0]
   89574:	07d2      	lsls	r2, r2, #31
   89576:	f140 82ce 	bpl.w	89b16 <_svfiprintf_r+0x76a>
   8957a:	2b30      	cmp	r3, #48	; 0x30
   8957c:	f000 82cb 	beq.w	89b16 <_svfiprintf_r+0x76a>
   89580:	2330      	movs	r3, #48	; 0x30
   89582:	3902      	subs	r1, #2
   89584:	f805 3c01 	strb.w	r3, [r5, #-1]
   89588:	ab1a      	add	r3, sp, #104	; 0x68
   8958a:	1a5b      	subs	r3, r3, r1
   8958c:	9303      	str	r3, [sp, #12]
   8958e:	460d      	mov	r5, r1
   89590:	e2c4      	b.n	89b1c <_svfiprintf_r+0x770>
   89592:	f048 0810 	orr.w	r8, r8, #16
   89596:	f018 0320 	ands.w	r3, r8, #32
   8959a:	f000 8285 	beq.w	89aa8 <_svfiprintf_r+0x6fc>
   8959e:	9c06      	ldr	r4, [sp, #24]
   895a0:	3407      	adds	r4, #7
   895a2:	f024 0307 	bic.w	r3, r4, #7
   895a6:	f103 0208 	add.w	r2, r3, #8
   895aa:	e9d3 6700 	ldrd	r6, r7, [r3]
   895ae:	9206      	str	r2, [sp, #24]
   895b0:	2300      	movs	r3, #0
   895b2:	e258      	b.n	89a66 <_svfiprintf_r+0x6ba>
   895b4:	aa0d      	add	r2, sp, #52	; 0x34
   895b6:	9902      	ldr	r1, [sp, #8]
   895b8:	9805      	ldr	r0, [sp, #20]
   895ba:	f7ff fe7d 	bl	892b8 <__ssprint_r>
   895be:	b948      	cbnz	r0, 895d4 <_svfiprintf_r+0x228>
   895c0:	f10d 0a68 	add.w	sl, sp, #104	; 0x68
   895c4:	e729      	b.n	8941a <_svfiprintf_r+0x6e>
   895c6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
   895c8:	b123      	cbz	r3, 895d4 <_svfiprintf_r+0x228>
   895ca:	9805      	ldr	r0, [sp, #20]
   895cc:	aa0d      	add	r2, sp, #52	; 0x34
   895ce:	9902      	ldr	r1, [sp, #8]
   895d0:	f7ff fe72 	bl	892b8 <__ssprint_r>
   895d4:	9b02      	ldr	r3, [sp, #8]
   895d6:	899b      	ldrh	r3, [r3, #12]
   895d8:	f013 0f40 	tst.w	r3, #64	; 0x40
   895dc:	9b01      	ldr	r3, [sp, #4]
   895de:	bf18      	it	ne
   895e0:	f04f 33ff 	movne.w	r3, #4294967295	; 0xffffffff
   895e4:	9301      	str	r3, [sp, #4]
   895e6:	9801      	ldr	r0, [sp, #4]
   895e8:	b02b      	add	sp, #172	; 0xac
   895ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   895ee:	2400      	movs	r4, #0
   895f0:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   895f4:	f81b 3b01 	ldrb.w	r3, [fp], #1
   895f8:	eb04 0484 	add.w	r4, r4, r4, lsl #2
   895fc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
   89600:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   89604:	2a09      	cmp	r2, #9
   89606:	d9f5      	bls.n	895f4 <_svfiprintf_r+0x248>
   89608:	9404      	str	r4, [sp, #16]
   8960a:	e71c      	b.n	89446 <_svfiprintf_r+0x9a>
   8960c:	f048 0880 	orr.w	r8, r8, #128	; 0x80
   89610:	f89b 3000 	ldrb.w	r3, [fp]
   89614:	e715      	b.n	89442 <_svfiprintf_r+0x96>
   89616:	f89b 3000 	ldrb.w	r3, [fp]
   8961a:	f10b 0401 	add.w	r4, fp, #1
   8961e:	2b2a      	cmp	r3, #42	; 0x2a
   89620:	f000 83cf 	beq.w	89dc2 <_svfiprintf_r+0xa16>
   89624:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   89628:	2a09      	cmp	r2, #9
   8962a:	f200 83b8 	bhi.w	89d9e <_svfiprintf_r+0x9f2>
   8962e:	f04f 0900 	mov.w	r9, #0
   89632:	f814 3b01 	ldrb.w	r3, [r4], #1
   89636:	eb09 0989 	add.w	r9, r9, r9, lsl #2
   8963a:	eb02 0949 	add.w	r9, r2, r9, lsl #1
   8963e:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
   89642:	2a09      	cmp	r2, #9
   89644:	d9f5      	bls.n	89632 <_svfiprintf_r+0x286>
   89646:	46a3      	mov	fp, r4
   89648:	e6fd      	b.n	89446 <_svfiprintf_r+0x9a>
   8964a:	f89b 3000 	ldrb.w	r3, [fp]
   8964e:	f048 0804 	orr.w	r8, r8, #4
   89652:	e6f6      	b.n	89442 <_svfiprintf_r+0x96>
   89654:	f89b 3000 	ldrb.w	r3, [fp]
   89658:	2101      	movs	r1, #1
   8965a:	202b      	movs	r0, #43	; 0x2b
   8965c:	e6f1      	b.n	89442 <_svfiprintf_r+0x96>
   8965e:	9b06      	ldr	r3, [sp, #24]
   89660:	681c      	ldr	r4, [r3, #0]
   89662:	1d1a      	adds	r2, r3, #4
   89664:	2c00      	cmp	r4, #0
   89666:	9404      	str	r4, [sp, #16]
   89668:	f89b 3000 	ldrb.w	r3, [fp]
   8966c:	9206      	str	r2, [sp, #24]
   8966e:	f6bf aee8 	bge.w	89442 <_svfiprintf_r+0x96>
   89672:	4262      	negs	r2, r4
   89674:	9204      	str	r2, [sp, #16]
   89676:	e7ea      	b.n	8964e <_svfiprintf_r+0x2a2>
   89678:	f048 0801 	orr.w	r8, r8, #1
   8967c:	f89b 3000 	ldrb.w	r3, [fp]
   89680:	e6df      	b.n	89442 <_svfiprintf_r+0x96>
   89682:	f89b 3000 	ldrb.w	r3, [fp]
   89686:	2800      	cmp	r0, #0
   89688:	f47f aedb 	bne.w	89442 <_svfiprintf_r+0x96>
   8968c:	2101      	movs	r1, #1
   8968e:	2020      	movs	r0, #32
   89690:	e6d7      	b.n	89442 <_svfiprintf_r+0x96>
   89692:	2900      	cmp	r1, #0
   89694:	f040 83b7 	bne.w	89e06 <_svfiprintf_r+0xa5a>
   89698:	4ab7      	ldr	r2, [pc, #732]	; (89978 <_svfiprintf_r+0x5cc>)
   8969a:	f018 0f20 	tst.w	r8, #32
   8969e:	9208      	str	r2, [sp, #32]
   896a0:	f000 81ac 	beq.w	899fc <_svfiprintf_r+0x650>
   896a4:	9c06      	ldr	r4, [sp, #24]
   896a6:	3407      	adds	r4, #7
   896a8:	f024 0207 	bic.w	r2, r4, #7
   896ac:	f102 0108 	add.w	r1, r2, #8
   896b0:	9106      	str	r1, [sp, #24]
   896b2:	e9d2 6700 	ldrd	r6, r7, [r2]
   896b6:	f018 0f01 	tst.w	r8, #1
   896ba:	f000 820a 	beq.w	89ad2 <_svfiprintf_r+0x726>
   896be:	ea56 0207 	orrs.w	r2, r6, r7
   896c2:	f000 8206 	beq.w	89ad2 <_svfiprintf_r+0x726>
   896c6:	2230      	movs	r2, #48	; 0x30
   896c8:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
   896cc:	f048 0802 	orr.w	r8, r8, #2
   896d0:	f88d 2030 	strb.w	r2, [sp, #48]	; 0x30
   896d4:	2302      	movs	r3, #2
   896d6:	e1c6      	b.n	89a66 <_svfiprintf_r+0x6ba>
   896d8:	f04f 0200 	mov.w	r2, #0
   896dc:	9b06      	ldr	r3, [sp, #24]
   896de:	f88d 202f 	strb.w	r2, [sp, #47]	; 0x2f
   896e2:	681d      	ldr	r5, [r3, #0]
   896e4:	1d1c      	adds	r4, r3, #4
   896e6:	2d00      	cmp	r5, #0
   896e8:	f000 834d 	beq.w	89d86 <_svfiprintf_r+0x9da>
   896ec:	f1b9 3fff 	cmp.w	r9, #4294967295	; 0xffffffff
   896f0:	f000 830b 	beq.w	89d0a <_svfiprintf_r+0x95e>
   896f4:	464a      	mov	r2, r9
   896f6:	2100      	movs	r1, #0
   896f8:	4628      	mov	r0, r5
   896fa:	f7fe fe7b 	bl	883f4 <memchr>
   896fe:	2800      	cmp	r0, #0
   89700:	f000 8352 	beq.w	89da8 <_svfiprintf_r+0x9fc>
   89704:	1b43      	subs	r3, r0, r5
   89706:	9406      	str	r4, [sp, #24]
   89708:	9303      	str	r3, [sp, #12]
   8970a:	f8cd 8000 	str.w	r8, [sp]
   8970e:	f89d 402f 	ldrb.w	r4, [sp, #47]	; 0x2f
   89712:	f04f 0900 	mov.w	r9, #0
   89716:	e201      	b.n	89b1c <_svfiprintf_r+0x770>
   89718:	f048 0820 	orr.w	r8, r8, #32
   8971c:	f89b 3000 	ldrb.w	r3, [fp]
   89720:	e68f      	b.n	89442 <_svfiprintf_r+0x96>
   89722:	f89b 3000 	ldrb.w	r3, [fp]
   89726:	2b6c      	cmp	r3, #108	; 0x6c
   89728:	bf03      	ittte	eq
   8972a:	f89b 3001 	ldrbeq.w	r3, [fp, #1]
   8972e:	f048 0820 	orreq.w	r8, r8, #32
   89732:	f10b 0b01 	addeq.w	fp, fp, #1
   89736:	f048 0810 	orrne.w	r8, r8, #16
   8973a:	e682      	b.n	89442 <_svfiprintf_r+0x96>
   8973c:	f048 0840 	orr.w	r8, r8, #64	; 0x40
   89740:	f89b 3000 	ldrb.w	r3, [fp]
   89744:	e67d      	b.n	89442 <_svfiprintf_r+0x96>
   89746:	2900      	cmp	r1, #0
   89748:	f040 8357 	bne.w	89dfa <_svfiprintf_r+0xa4e>
   8974c:	f018 0f20 	tst.w	r8, #32
   89750:	f000 816c 	beq.w	89a2c <_svfiprintf_r+0x680>
   89754:	9c06      	ldr	r4, [sp, #24]
   89756:	3407      	adds	r4, #7
   89758:	f024 0307 	bic.w	r3, r4, #7
   8975c:	f103 0208 	add.w	r2, r3, #8
   89760:	9206      	str	r2, [sp, #24]
   89762:	e9d3 6700 	ldrd	r6, r7, [r3]
   89766:	2e00      	cmp	r6, #0
   89768:	f177 0300 	sbcs.w	r3, r7, #0
   8976c:	f2c0 827f 	blt.w	89c6e <_svfiprintf_r+0x8c2>
   89770:	f89d 402f 	ldrb.w	r4, [sp, #47]	; 0x2f
   89774:	f1b9 3fff 	cmp.w	r9, #4294967295	; 0xffffffff
   89778:	f000 8251 	beq.w	89c1e <_svfiprintf_r+0x872>
   8977c:	2301      	movs	r3, #1
   8977e:	f028 0280 	bic.w	r2, r8, #128	; 0x80
   89782:	9200      	str	r2, [sp, #0]
   89784:	ea56 0207 	orrs.w	r2, r6, r7
   89788:	f47f aeda 	bne.w	89540 <_svfiprintf_r+0x194>
   8978c:	f1b9 0f00 	cmp.w	r9, #0
   89790:	f040 82cc 	bne.w	89d2c <_svfiprintf_r+0x980>
   89794:	2b00      	cmp	r3, #0
   89796:	f040 8260 	bne.w	89c5a <_svfiprintf_r+0x8ae>
   8979a:	f018 0301 	ands.w	r3, r8, #1
   8979e:	9303      	str	r3, [sp, #12]
   897a0:	f000 8287 	beq.w	89cb2 <_svfiprintf_r+0x906>
   897a4:	2330      	movs	r3, #48	; 0x30
   897a6:	ad2a      	add	r5, sp, #168	; 0xa8
   897a8:	f805 3d41 	strb.w	r3, [r5, #-65]!
   897ac:	e1b6      	b.n	89b1c <_svfiprintf_r+0x770>
   897ae:	2601      	movs	r6, #1
   897b0:	f04f 0100 	mov.w	r1, #0
   897b4:	9a06      	ldr	r2, [sp, #24]
   897b6:	f88d 102f 	strb.w	r1, [sp, #47]	; 0x2f
   897ba:	6813      	ldr	r3, [r2, #0]
   897bc:	9603      	str	r6, [sp, #12]
   897be:	f88d 3040 	strb.w	r3, [sp, #64]	; 0x40
   897c2:	1d13      	adds	r3, r2, #4
   897c4:	9306      	str	r3, [sp, #24]
   897c6:	ad10      	add	r5, sp, #64	; 0x40
   897c8:	f04f 0900 	mov.w	r9, #0
   897cc:	f8cd 8000 	str.w	r8, [sp]
   897d0:	9b00      	ldr	r3, [sp, #0]
   897d2:	9800      	ldr	r0, [sp, #0]
   897d4:	f013 0302 	ands.w	r3, r3, #2
   897d8:	bf18      	it	ne
   897da:	3602      	addne	r6, #2
   897dc:	f010 0084 	ands.w	r0, r0, #132	; 0x84
   897e0:	e9dd 120e 	ldrd	r1, r2, [sp, #56]	; 0x38
   897e4:	9007      	str	r0, [sp, #28]
   897e6:	d13c      	bne.n	89862 <_svfiprintf_r+0x4b6>
   897e8:	9804      	ldr	r0, [sp, #16]
   897ea:	1b84      	subs	r4, r0, r6
   897ec:	2c00      	cmp	r4, #0
   897ee:	dd38      	ble.n	89862 <_svfiprintf_r+0x4b6>
   897f0:	2c10      	cmp	r4, #16
   897f2:	f340 82d0 	ble.w	89d96 <_svfiprintf_r+0x9ea>
   897f6:	4f61      	ldr	r7, [pc, #388]	; (8997c <_svfiprintf_r+0x5d0>)
   897f8:	4650      	mov	r0, sl
   897fa:	46b2      	mov	sl, r6
   897fc:	461e      	mov	r6, r3
   897fe:	463b      	mov	r3, r7
   89800:	f04f 0810 	mov.w	r8, #16
   89804:	462f      	mov	r7, r5
   89806:	461d      	mov	r5, r3
   89808:	e004      	b.n	89814 <_svfiprintf_r+0x468>
   8980a:	3c10      	subs	r4, #16
   8980c:	2c10      	cmp	r4, #16
   8980e:	f100 0008 	add.w	r0, r0, #8
   89812:	dd15      	ble.n	89840 <_svfiprintf_r+0x494>
   89814:	3101      	adds	r1, #1
   89816:	3210      	adds	r2, #16
   89818:	2907      	cmp	r1, #7
   8981a:	e9cd 120e 	strd	r1, r2, [sp, #56]	; 0x38
   8981e:	e9c0 5800 	strd	r5, r8, [r0]
   89822:	ddf2      	ble.n	8980a <_svfiprintf_r+0x45e>
   89824:	aa0d      	add	r2, sp, #52	; 0x34
   89826:	9902      	ldr	r1, [sp, #8]
   89828:	9805      	ldr	r0, [sp, #20]
   8982a:	f7ff fd45 	bl	892b8 <__ssprint_r>
   8982e:	2800      	cmp	r0, #0
   89830:	f47f aed0 	bne.w	895d4 <_svfiprintf_r+0x228>
   89834:	e9dd 120e 	ldrd	r1, r2, [sp, #56]	; 0x38
   89838:	3c10      	subs	r4, #16
   8983a:	2c10      	cmp	r4, #16
   8983c:	a81a      	add	r0, sp, #104	; 0x68
   8983e:	dce9      	bgt.n	89814 <_svfiprintf_r+0x468>
   89840:	4633      	mov	r3, r6
   89842:	4656      	mov	r6, sl
   89844:	4682      	mov	sl, r0
   89846:	4628      	mov	r0, r5
   89848:	463d      	mov	r5, r7
   8984a:	4607      	mov	r7, r0
   8984c:	3101      	adds	r1, #1
   8984e:	4422      	add	r2, r4
   89850:	2907      	cmp	r1, #7
   89852:	e9cd 120e 	strd	r1, r2, [sp, #56]	; 0x38
   89856:	e9ca 7400 	strd	r7, r4, [sl]
   8985a:	f300 8211 	bgt.w	89c80 <_svfiprintf_r+0x8d4>
   8985e:	f10a 0a08 	add.w	sl, sl, #8
   89862:	f89d 402f 	ldrb.w	r4, [sp, #47]	; 0x2f
   89866:	f101 0c01 	add.w	ip, r1, #1
   8986a:	f10a 0008 	add.w	r0, sl, #8
   8986e:	b194      	cbz	r4, 89896 <_svfiprintf_r+0x4ea>
   89870:	2701      	movs	r7, #1
   89872:	f10d 042f 	add.w	r4, sp, #47	; 0x2f
   89876:	443a      	add	r2, r7
   89878:	f1bc 0f07 	cmp.w	ip, #7
   8987c:	e9cd c20e 	strd	ip, r2, [sp, #56]	; 0x38
   89880:	e9ca 4700 	strd	r4, r7, [sl]
   89884:	f300 81a9 	bgt.w	89bda <_svfiprintf_r+0x82e>
   89888:	1c8f      	adds	r7, r1, #2
   8988a:	f10a 0410 	add.w	r4, sl, #16
   8988e:	4661      	mov	r1, ip
   89890:	4682      	mov	sl, r0
   89892:	46bc      	mov	ip, r7
   89894:	4620      	mov	r0, r4
   89896:	b17b      	cbz	r3, 898b8 <_svfiprintf_r+0x50c>
   89898:	2102      	movs	r1, #2
   8989a:	ab0c      	add	r3, sp, #48	; 0x30
   8989c:	440a      	add	r2, r1
   8989e:	f1bc 0f07 	cmp.w	ip, #7
   898a2:	e9cd c20e 	strd	ip, r2, [sp, #56]	; 0x38
   898a6:	e9ca 3100 	strd	r3, r1, [sl]
   898aa:	f300 81a8 	bgt.w	89bfe <_svfiprintf_r+0x852>
   898ae:	4661      	mov	r1, ip
   898b0:	4682      	mov	sl, r0
   898b2:	f10c 0c01 	add.w	ip, ip, #1
   898b6:	3008      	adds	r0, #8
   898b8:	9b07      	ldr	r3, [sp, #28]
   898ba:	2b80      	cmp	r3, #128	; 0x80
   898bc:	f000 8138 	beq.w	89b30 <_svfiprintf_r+0x784>
   898c0:	9b03      	ldr	r3, [sp, #12]
   898c2:	eba9 0703 	sub.w	r7, r9, r3
   898c6:	2f00      	cmp	r7, #0
   898c8:	dd39      	ble.n	8993e <_svfiprintf_r+0x592>
   898ca:	2f10      	cmp	r7, #16
   898cc:	f340 8258 	ble.w	89d80 <_svfiprintf_r+0x9d4>
   898d0:	4653      	mov	r3, sl
   898d2:	f04f 0810 	mov.w	r8, #16
   898d6:	4c2a      	ldr	r4, [pc, #168]	; (89980 <_svfiprintf_r+0x5d4>)
   898d8:	f8dd 9014 	ldr.w	r9, [sp, #20]
   898dc:	f8dd a008 	ldr.w	sl, [sp, #8]
   898e0:	e004      	b.n	898ec <_svfiprintf_r+0x540>
   898e2:	3f10      	subs	r7, #16
   898e4:	2f10      	cmp	r7, #16
   898e6:	f103 0308 	add.w	r3, r3, #8
   898ea:	dd15      	ble.n	89918 <_svfiprintf_r+0x56c>
   898ec:	3101      	adds	r1, #1
   898ee:	3210      	adds	r2, #16
   898f0:	2907      	cmp	r1, #7
   898f2:	e9cd 120e 	strd	r1, r2, [sp, #56]	; 0x38
   898f6:	e9c3 4800 	strd	r4, r8, [r3]
   898fa:	ddf2      	ble.n	898e2 <_svfiprintf_r+0x536>
   898fc:	aa0d      	add	r2, sp, #52	; 0x34
   898fe:	4651      	mov	r1, sl
   89900:	4648      	mov	r0, r9
   89902:	f7ff fcd9 	bl	892b8 <__ssprint_r>
   89906:	2800      	cmp	r0, #0
   89908:	f47f ae64 	bne.w	895d4 <_svfiprintf_r+0x228>
   8990c:	e9dd 120e 	ldrd	r1, r2, [sp, #56]	; 0x38
   89910:	3f10      	subs	r7, #16
   89912:	2f10      	cmp	r7, #16
   89914:	ab1a      	add	r3, sp, #104	; 0x68
   89916:	dce9      	bgt.n	898ec <_svfiprintf_r+0x540>
   89918:	469a      	mov	sl, r3
   8991a:	f101 0c01 	add.w	ip, r1, #1
   8991e:	3308      	adds	r3, #8
   89920:	443a      	add	r2, r7
   89922:	f1bc 0f07 	cmp.w	ip, #7
   89926:	920f      	str	r2, [sp, #60]	; 0x3c
   89928:	e9ca 4700 	strd	r4, r7, [sl]
   8992c:	f8cd c038 	str.w	ip, [sp, #56]	; 0x38
   89930:	f300 8183 	bgt.w	89c3a <_svfiprintf_r+0x88e>
   89934:	469a      	mov	sl, r3
   89936:	f10c 0c01 	add.w	ip, ip, #1
   8993a:	f103 0008 	add.w	r0, r3, #8
   8993e:	9b03      	ldr	r3, [sp, #12]
   89940:	f1bc 0f07 	cmp.w	ip, #7
   89944:	441a      	add	r2, r3
   89946:	920f      	str	r2, [sp, #60]	; 0x3c
   89948:	e9ca 5300 	strd	r5, r3, [sl]
   8994c:	f8cd c038 	str.w	ip, [sp, #56]	; 0x38
   89950:	f300 812f 	bgt.w	89bb2 <_svfiprintf_r+0x806>
   89954:	9b00      	ldr	r3, [sp, #0]
   89956:	075b      	lsls	r3, r3, #29
   89958:	d538      	bpl.n	899cc <_svfiprintf_r+0x620>
   8995a:	9b04      	ldr	r3, [sp, #16]
   8995c:	1b9c      	subs	r4, r3, r6
   8995e:	2c00      	cmp	r4, #0
   89960:	dd34      	ble.n	899cc <_svfiprintf_r+0x620>
   89962:	2c10      	cmp	r4, #16
   89964:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   89966:	f340 8218 	ble.w	89d9a <_svfiprintf_r+0x9ee>
   8996a:	2510      	movs	r5, #16
   8996c:	4f03      	ldr	r7, [pc, #12]	; (8997c <_svfiprintf_r+0x5d0>)
   8996e:	f8dd 8014 	ldr.w	r8, [sp, #20]
   89972:	f8dd 9008 	ldr.w	r9, [sp, #8]
   89976:	e00a      	b.n	8998e <_svfiprintf_r+0x5e2>
   89978:	0008a1b0 	.word	0x0008a1b0
   8997c:	0008a318 	.word	0x0008a318
   89980:	0008a328 	.word	0x0008a328
   89984:	3c10      	subs	r4, #16
   89986:	2c10      	cmp	r4, #16
   89988:	f100 0008 	add.w	r0, r0, #8
   8998c:	dd15      	ble.n	899ba <_svfiprintf_r+0x60e>
   8998e:	3301      	adds	r3, #1
   89990:	3210      	adds	r2, #16
   89992:	2b07      	cmp	r3, #7
   89994:	e9cd 320e 	strd	r3, r2, [sp, #56]	; 0x38
   89998:	e9c0 7500 	strd	r7, r5, [r0]
   8999c:	ddf2      	ble.n	89984 <_svfiprintf_r+0x5d8>
   8999e:	aa0d      	add	r2, sp, #52	; 0x34
   899a0:	4649      	mov	r1, r9
   899a2:	4640      	mov	r0, r8
   899a4:	f7ff fc88 	bl	892b8 <__ssprint_r>
   899a8:	2800      	cmp	r0, #0
   899aa:	f47f ae13 	bne.w	895d4 <_svfiprintf_r+0x228>
   899ae:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
   899b2:	3c10      	subs	r4, #16
   899b4:	2c10      	cmp	r4, #16
   899b6:	a81a      	add	r0, sp, #104	; 0x68
   899b8:	dce9      	bgt.n	8998e <_svfiprintf_r+0x5e2>
   899ba:	3301      	adds	r3, #1
   899bc:	4422      	add	r2, r4
   899be:	2b07      	cmp	r3, #7
   899c0:	e9cd 320e 	strd	r3, r2, [sp, #56]	; 0x38
   899c4:	e9c0 7400 	strd	r7, r4, [r0]
   899c8:	f300 8169 	bgt.w	89c9e <_svfiprintf_r+0x8f2>
   899cc:	9b01      	ldr	r3, [sp, #4]
   899ce:	9904      	ldr	r1, [sp, #16]
   899d0:	42b1      	cmp	r1, r6
   899d2:	bfac      	ite	ge
   899d4:	185b      	addge	r3, r3, r1
   899d6:	199b      	addlt	r3, r3, r6
   899d8:	9301      	str	r3, [sp, #4]
   899da:	2a00      	cmp	r2, #0
   899dc:	f040 80f4 	bne.w	89bc8 <_svfiprintf_r+0x81c>
   899e0:	2300      	movs	r3, #0
   899e2:	f10d 0a68 	add.w	sl, sp, #104	; 0x68
   899e6:	930e      	str	r3, [sp, #56]	; 0x38
   899e8:	e4f8      	b.n	893dc <_svfiprintf_r+0x30>
   899ea:	2900      	cmp	r1, #0
   899ec:	f040 8208 	bne.w	89e00 <_svfiprintf_r+0xa54>
   899f0:	4abc      	ldr	r2, [pc, #752]	; (89ce4 <_svfiprintf_r+0x938>)
   899f2:	f018 0f20 	tst.w	r8, #32
   899f6:	9208      	str	r2, [sp, #32]
   899f8:	f47f ae54 	bne.w	896a4 <_svfiprintf_r+0x2f8>
   899fc:	9a06      	ldr	r2, [sp, #24]
   899fe:	f018 0f10 	tst.w	r8, #16
   89a02:	f852 6b04 	ldr.w	r6, [r2], #4
   89a06:	9206      	str	r2, [sp, #24]
   89a08:	f040 8138 	bne.w	89c7c <_svfiprintf_r+0x8d0>
   89a0c:	f018 0f40 	tst.w	r8, #64	; 0x40
   89a10:	f000 8134 	beq.w	89c7c <_svfiprintf_r+0x8d0>
   89a14:	b2b6      	uxth	r6, r6
   89a16:	2700      	movs	r7, #0
   89a18:	e64d      	b.n	896b6 <_svfiprintf_r+0x30a>
   89a1a:	2900      	cmp	r1, #0
   89a1c:	f040 81e4 	bne.w	89de8 <_svfiprintf_r+0xa3c>
   89a20:	f048 0810 	orr.w	r8, r8, #16
   89a24:	f018 0f20 	tst.w	r8, #32
   89a28:	f47f ae94 	bne.w	89754 <_svfiprintf_r+0x3a8>
   89a2c:	9b06      	ldr	r3, [sp, #24]
   89a2e:	f018 0f10 	tst.w	r8, #16
   89a32:	f853 6b04 	ldr.w	r6, [r3], #4
   89a36:	9306      	str	r3, [sp, #24]
   89a38:	f040 8113 	bne.w	89c62 <_svfiprintf_r+0x8b6>
   89a3c:	f018 0f40 	tst.w	r8, #64	; 0x40
   89a40:	f000 810f 	beq.w	89c62 <_svfiprintf_r+0x8b6>
   89a44:	b236      	sxth	r6, r6
   89a46:	17f7      	asrs	r7, r6, #31
   89a48:	e68d      	b.n	89766 <_svfiprintf_r+0x3ba>
   89a4a:	f647 0330 	movw	r3, #30768	; 0x7830
   89a4e:	9a06      	ldr	r2, [sp, #24]
   89a50:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
   89a54:	1d13      	adds	r3, r2, #4
   89a56:	9306      	str	r3, [sp, #24]
   89a58:	4ba3      	ldr	r3, [pc, #652]	; (89ce8 <_svfiprintf_r+0x93c>)
   89a5a:	2700      	movs	r7, #0
   89a5c:	9308      	str	r3, [sp, #32]
   89a5e:	2302      	movs	r3, #2
   89a60:	6816      	ldr	r6, [r2, #0]
   89a62:	f048 0802 	orr.w	r8, r8, #2
   89a66:	f04f 0200 	mov.w	r2, #0
   89a6a:	f1b9 3fff 	cmp.w	r9, #4294967295	; 0xffffffff
   89a6e:	f88d 202f 	strb.w	r2, [sp, #47]	; 0x2f
   89a72:	f43f ad62 	beq.w	8953a <_svfiprintf_r+0x18e>
   89a76:	2400      	movs	r4, #0
   89a78:	e681      	b.n	8977e <_svfiprintf_r+0x3d2>
   89a7a:	2900      	cmp	r1, #0
   89a7c:	f040 81b7 	bne.w	89dee <_svfiprintf_r+0xa42>
   89a80:	9a06      	ldr	r2, [sp, #24]
   89a82:	f018 0f20 	tst.w	r8, #32
   89a86:	f102 0304 	add.w	r3, r2, #4
   89a8a:	6812      	ldr	r2, [r2, #0]
   89a8c:	f040 8113 	bne.w	89cb6 <_svfiprintf_r+0x90a>
   89a90:	f018 0f10 	tst.w	r8, #16
   89a94:	f040 8145 	bne.w	89d22 <_svfiprintf_r+0x976>
   89a98:	f018 0f40 	tst.w	r8, #64	; 0x40
   89a9c:	f000 8141 	beq.w	89d22 <_svfiprintf_r+0x976>
   89aa0:	9901      	ldr	r1, [sp, #4]
   89aa2:	9306      	str	r3, [sp, #24]
   89aa4:	8011      	strh	r1, [r2, #0]
   89aa6:	e499      	b.n	893dc <_svfiprintf_r+0x30>
   89aa8:	9a06      	ldr	r2, [sp, #24]
   89aaa:	f852 6b04 	ldr.w	r6, [r2], #4
   89aae:	9206      	str	r2, [sp, #24]
   89ab0:	f018 0210 	ands.w	r2, r8, #16
   89ab4:	f000 810f 	beq.w	89cd6 <_svfiprintf_r+0x92a>
   89ab8:	2700      	movs	r7, #0
   89aba:	e7d4      	b.n	89a66 <_svfiprintf_r+0x6ba>
   89abc:	9b06      	ldr	r3, [sp, #24]
   89abe:	f018 0f10 	tst.w	r8, #16
   89ac2:	f853 6b04 	ldr.w	r6, [r3], #4
   89ac6:	9306      	str	r3, [sp, #24]
   89ac8:	f000 80fe 	beq.w	89cc8 <_svfiprintf_r+0x91c>
   89acc:	2700      	movs	r7, #0
   89ace:	2301      	movs	r3, #1
   89ad0:	e7c9      	b.n	89a66 <_svfiprintf_r+0x6ba>
   89ad2:	2302      	movs	r3, #2
   89ad4:	e7c7      	b.n	89a66 <_svfiprintf_r+0x6ba>
   89ad6:	2900      	cmp	r1, #0
   89ad8:	f040 818c 	bne.w	89df4 <_svfiprintf_r+0xa48>
   89adc:	2b00      	cmp	r3, #0
   89ade:	f43f ad72 	beq.w	895c6 <_svfiprintf_r+0x21a>
   89ae2:	2601      	movs	r6, #1
   89ae4:	f88d 3040 	strb.w	r3, [sp, #64]	; 0x40
   89ae8:	f04f 0300 	mov.w	r3, #0
   89aec:	9603      	str	r6, [sp, #12]
   89aee:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
   89af2:	ad10      	add	r5, sp, #64	; 0x40
   89af4:	e668      	b.n	897c8 <_svfiprintf_r+0x41c>
   89af6:	9808      	ldr	r0, [sp, #32]
   89af8:	ad1a      	add	r5, sp, #104	; 0x68
   89afa:	0933      	lsrs	r3, r6, #4
   89afc:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
   89b00:	0939      	lsrs	r1, r7, #4
   89b02:	f006 020f 	and.w	r2, r6, #15
   89b06:	460f      	mov	r7, r1
   89b08:	461e      	mov	r6, r3
   89b0a:	5c83      	ldrb	r3, [r0, r2]
   89b0c:	f805 3d01 	strb.w	r3, [r5, #-1]!
   89b10:	ea56 0307 	orrs.w	r3, r6, r7
   89b14:	d1f1      	bne.n	89afa <_svfiprintf_r+0x74e>
   89b16:	ab1a      	add	r3, sp, #104	; 0x68
   89b18:	1b5b      	subs	r3, r3, r5
   89b1a:	9303      	str	r3, [sp, #12]
   89b1c:	9b03      	ldr	r3, [sp, #12]
   89b1e:	454b      	cmp	r3, r9
   89b20:	bfb8      	it	lt
   89b22:	464b      	movlt	r3, r9
   89b24:	461e      	mov	r6, r3
   89b26:	2c00      	cmp	r4, #0
   89b28:	f43f ae52 	beq.w	897d0 <_svfiprintf_r+0x424>
   89b2c:	3601      	adds	r6, #1
   89b2e:	e64f      	b.n	897d0 <_svfiprintf_r+0x424>
   89b30:	9b04      	ldr	r3, [sp, #16]
   89b32:	1b9f      	subs	r7, r3, r6
   89b34:	2f00      	cmp	r7, #0
   89b36:	f77f aec3 	ble.w	898c0 <_svfiprintf_r+0x514>
   89b3a:	2f10      	cmp	r7, #16
   89b3c:	f340 813d 	ble.w	89dba <_svfiprintf_r+0xa0e>
   89b40:	4c6a      	ldr	r4, [pc, #424]	; (89cec <_svfiprintf_r+0x940>)
   89b42:	4650      	mov	r0, sl
   89b44:	f04f 0810 	mov.w	r8, #16
   89b48:	46b2      	mov	sl, r6
   89b4a:	462e      	mov	r6, r5
   89b4c:	4625      	mov	r5, r4
   89b4e:	9c05      	ldr	r4, [sp, #20]
   89b50:	e004      	b.n	89b5c <_svfiprintf_r+0x7b0>
   89b52:	3f10      	subs	r7, #16
   89b54:	2f10      	cmp	r7, #16
   89b56:	f100 0008 	add.w	r0, r0, #8
   89b5a:	dd15      	ble.n	89b88 <_svfiprintf_r+0x7dc>
   89b5c:	3101      	adds	r1, #1
   89b5e:	3210      	adds	r2, #16
   89b60:	2907      	cmp	r1, #7
   89b62:	e9cd 120e 	strd	r1, r2, [sp, #56]	; 0x38
   89b66:	e9c0 5800 	strd	r5, r8, [r0]
   89b6a:	ddf2      	ble.n	89b52 <_svfiprintf_r+0x7a6>
   89b6c:	aa0d      	add	r2, sp, #52	; 0x34
   89b6e:	9902      	ldr	r1, [sp, #8]
   89b70:	4620      	mov	r0, r4
   89b72:	f7ff fba1 	bl	892b8 <__ssprint_r>
   89b76:	2800      	cmp	r0, #0
   89b78:	f47f ad2c 	bne.w	895d4 <_svfiprintf_r+0x228>
   89b7c:	e9dd 120e 	ldrd	r1, r2, [sp, #56]	; 0x38
   89b80:	3f10      	subs	r7, #16
   89b82:	2f10      	cmp	r7, #16
   89b84:	a81a      	add	r0, sp, #104	; 0x68
   89b86:	dce9      	bgt.n	89b5c <_svfiprintf_r+0x7b0>
   89b88:	462c      	mov	r4, r5
   89b8a:	4635      	mov	r5, r6
   89b8c:	4656      	mov	r6, sl
   89b8e:	4682      	mov	sl, r0
   89b90:	3101      	adds	r1, #1
   89b92:	f100 0308 	add.w	r3, r0, #8
   89b96:	443a      	add	r2, r7
   89b98:	2907      	cmp	r1, #7
   89b9a:	920f      	str	r2, [sp, #60]	; 0x3c
   89b9c:	e9ca 4700 	strd	r4, r7, [sl]
   89ba0:	910e      	str	r1, [sp, #56]	; 0x38
   89ba2:	f300 80dd 	bgt.w	89d60 <_svfiprintf_r+0x9b4>
   89ba6:	f101 0c01 	add.w	ip, r1, #1
   89baa:	f103 0008 	add.w	r0, r3, #8
   89bae:	469a      	mov	sl, r3
   89bb0:	e686      	b.n	898c0 <_svfiprintf_r+0x514>
   89bb2:	aa0d      	add	r2, sp, #52	; 0x34
   89bb4:	9902      	ldr	r1, [sp, #8]
   89bb6:	9805      	ldr	r0, [sp, #20]
   89bb8:	f7ff fb7e 	bl	892b8 <__ssprint_r>
   89bbc:	2800      	cmp	r0, #0
   89bbe:	f47f ad09 	bne.w	895d4 <_svfiprintf_r+0x228>
   89bc2:	a81a      	add	r0, sp, #104	; 0x68
   89bc4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   89bc6:	e6c5      	b.n	89954 <_svfiprintf_r+0x5a8>
   89bc8:	aa0d      	add	r2, sp, #52	; 0x34
   89bca:	9902      	ldr	r1, [sp, #8]
   89bcc:	9805      	ldr	r0, [sp, #20]
   89bce:	f7ff fb73 	bl	892b8 <__ssprint_r>
   89bd2:	2800      	cmp	r0, #0
   89bd4:	f43f af04 	beq.w	899e0 <_svfiprintf_r+0x634>
   89bd8:	e4fc      	b.n	895d4 <_svfiprintf_r+0x228>
   89bda:	aa0d      	add	r2, sp, #52	; 0x34
   89bdc:	9902      	ldr	r1, [sp, #8]
   89bde:	9805      	ldr	r0, [sp, #20]
   89be0:	9309      	str	r3, [sp, #36]	; 0x24
   89be2:	f7ff fb69 	bl	892b8 <__ssprint_r>
   89be6:	2800      	cmp	r0, #0
   89be8:	f47f acf4 	bne.w	895d4 <_svfiprintf_r+0x228>
   89bec:	e9dd 120e 	ldrd	r1, r2, [sp, #56]	; 0x38
   89bf0:	f10d 0a68 	add.w	sl, sp, #104	; 0x68
   89bf4:	f101 0c01 	add.w	ip, r1, #1
   89bf8:	a81c      	add	r0, sp, #112	; 0x70
   89bfa:	9b09      	ldr	r3, [sp, #36]	; 0x24
   89bfc:	e64b      	b.n	89896 <_svfiprintf_r+0x4ea>
   89bfe:	aa0d      	add	r2, sp, #52	; 0x34
   89c00:	9902      	ldr	r1, [sp, #8]
   89c02:	9805      	ldr	r0, [sp, #20]
   89c04:	f7ff fb58 	bl	892b8 <__ssprint_r>
   89c08:	2800      	cmp	r0, #0
   89c0a:	f47f ace3 	bne.w	895d4 <_svfiprintf_r+0x228>
   89c0e:	e9dd 120e 	ldrd	r1, r2, [sp, #56]	; 0x38
   89c12:	f10d 0a68 	add.w	sl, sp, #104	; 0x68
   89c16:	f101 0c01 	add.w	ip, r1, #1
   89c1a:	a81c      	add	r0, sp, #112	; 0x70
   89c1c:	e64c      	b.n	898b8 <_svfiprintf_r+0x50c>
   89c1e:	f8cd 8000 	str.w	r8, [sp]
   89c22:	2f00      	cmp	r7, #0
   89c24:	bf08      	it	eq
   89c26:	2e0a      	cmpeq	r6, #10
   89c28:	f080 8084 	bcs.w	89d34 <_svfiprintf_r+0x988>
   89c2c:	2301      	movs	r3, #1
   89c2e:	ad2a      	add	r5, sp, #168	; 0xa8
   89c30:	3630      	adds	r6, #48	; 0x30
   89c32:	f805 6d41 	strb.w	r6, [r5, #-65]!
   89c36:	9303      	str	r3, [sp, #12]
   89c38:	e770      	b.n	89b1c <_svfiprintf_r+0x770>
   89c3a:	aa0d      	add	r2, sp, #52	; 0x34
   89c3c:	9902      	ldr	r1, [sp, #8]
   89c3e:	9805      	ldr	r0, [sp, #20]
   89c40:	f7ff fb3a 	bl	892b8 <__ssprint_r>
   89c44:	2800      	cmp	r0, #0
   89c46:	f47f acc5 	bne.w	895d4 <_svfiprintf_r+0x228>
   89c4a:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
   89c4e:	f10d 0a68 	add.w	sl, sp, #104	; 0x68
   89c52:	f103 0c01 	add.w	ip, r3, #1
   89c56:	a81c      	add	r0, sp, #112	; 0x70
   89c58:	e671      	b.n	8993e <_svfiprintf_r+0x592>
   89c5a:	f8cd 900c 	str.w	r9, [sp, #12]
   89c5e:	ad1a      	add	r5, sp, #104	; 0x68
   89c60:	e75c      	b.n	89b1c <_svfiprintf_r+0x770>
   89c62:	17f7      	asrs	r7, r6, #31
   89c64:	2e00      	cmp	r6, #0
   89c66:	f177 0300 	sbcs.w	r3, r7, #0
   89c6a:	f6bf ad81 	bge.w	89770 <_svfiprintf_r+0x3c4>
   89c6e:	242d      	movs	r4, #45	; 0x2d
   89c70:	4276      	negs	r6, r6
   89c72:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
   89c76:	f88d 402f 	strb.w	r4, [sp, #47]	; 0x2f
   89c7a:	e57b      	b.n	89774 <_svfiprintf_r+0x3c8>
   89c7c:	2700      	movs	r7, #0
   89c7e:	e51a      	b.n	896b6 <_svfiprintf_r+0x30a>
   89c80:	aa0d      	add	r2, sp, #52	; 0x34
   89c82:	9902      	ldr	r1, [sp, #8]
   89c84:	9805      	ldr	r0, [sp, #20]
   89c86:	9309      	str	r3, [sp, #36]	; 0x24
   89c88:	f7ff fb16 	bl	892b8 <__ssprint_r>
   89c8c:	2800      	cmp	r0, #0
   89c8e:	f47f aca1 	bne.w	895d4 <_svfiprintf_r+0x228>
   89c92:	e9dd 120e 	ldrd	r1, r2, [sp, #56]	; 0x38
   89c96:	f10d 0a68 	add.w	sl, sp, #104	; 0x68
   89c9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
   89c9c:	e5e1      	b.n	89862 <_svfiprintf_r+0x4b6>
   89c9e:	aa0d      	add	r2, sp, #52	; 0x34
   89ca0:	9902      	ldr	r1, [sp, #8]
   89ca2:	9805      	ldr	r0, [sp, #20]
   89ca4:	f7ff fb08 	bl	892b8 <__ssprint_r>
   89ca8:	2800      	cmp	r0, #0
   89caa:	f47f ac93 	bne.w	895d4 <_svfiprintf_r+0x228>
   89cae:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
   89cb0:	e68c      	b.n	899cc <_svfiprintf_r+0x620>
   89cb2:	ad1a      	add	r5, sp, #104	; 0x68
   89cb4:	e732      	b.n	89b1c <_svfiprintf_r+0x770>
   89cb6:	9901      	ldr	r1, [sp, #4]
   89cb8:	9306      	str	r3, [sp, #24]
   89cba:	17cd      	asrs	r5, r1, #31
   89cbc:	4608      	mov	r0, r1
   89cbe:	4629      	mov	r1, r5
   89cc0:	e9c2 0100 	strd	r0, r1, [r2]
   89cc4:	f7ff bb8a 	b.w	893dc <_svfiprintf_r+0x30>
   89cc8:	f018 0f40 	tst.w	r8, #64	; 0x40
   89ccc:	bf18      	it	ne
   89cce:	b2b6      	uxthne	r6, r6
   89cd0:	2700      	movs	r7, #0
   89cd2:	2301      	movs	r3, #1
   89cd4:	e6c7      	b.n	89a66 <_svfiprintf_r+0x6ba>
   89cd6:	f018 0340 	ands.w	r3, r8, #64	; 0x40
   89cda:	bf1c      	itt	ne
   89cdc:	4613      	movne	r3, r2
   89cde:	b2b6      	uxthne	r6, r6
   89ce0:	2700      	movs	r7, #0
   89ce2:	e6c0      	b.n	89a66 <_svfiprintf_r+0x6ba>
   89ce4:	0008a19c 	.word	0x0008a19c
   89ce8:	0008a1b0 	.word	0x0008a1b0
   89cec:	0008a328 	.word	0x0008a328
   89cf0:	2140      	movs	r1, #64	; 0x40
   89cf2:	f7fe f8bb 	bl	87e6c <_malloc_r>
   89cf6:	9b02      	ldr	r3, [sp, #8]
   89cf8:	6018      	str	r0, [r3, #0]
   89cfa:	6118      	str	r0, [r3, #16]
   89cfc:	2800      	cmp	r0, #0
   89cfe:	d06b      	beq.n	89dd8 <_svfiprintf_r+0xa2c>
   89d00:	2340      	movs	r3, #64	; 0x40
   89d02:	9a02      	ldr	r2, [sp, #8]
   89d04:	6153      	str	r3, [r2, #20]
   89d06:	f7ff bb60 	b.w	893ca <_svfiprintf_r+0x1e>
   89d0a:	4628      	mov	r0, r5
   89d0c:	9406      	str	r4, [sp, #24]
   89d0e:	f8cd 8000 	str.w	r8, [sp]
   89d12:	f7fb fcd7 	bl	856c4 <strlen>
   89d16:	f04f 0900 	mov.w	r9, #0
   89d1a:	9003      	str	r0, [sp, #12]
   89d1c:	f89d 402f 	ldrb.w	r4, [sp, #47]	; 0x2f
   89d20:	e6fc      	b.n	89b1c <_svfiprintf_r+0x770>
   89d22:	9901      	ldr	r1, [sp, #4]
   89d24:	6011      	str	r1, [r2, #0]
   89d26:	9306      	str	r3, [sp, #24]
   89d28:	f7ff bb58 	b.w	893dc <_svfiprintf_r+0x30>
   89d2c:	2b01      	cmp	r3, #1
   89d2e:	f47f ac0a 	bne.w	89546 <_svfiprintf_r+0x19a>
   89d32:	e77b      	b.n	89c2c <_svfiprintf_r+0x880>
   89d34:	ad1a      	add	r5, sp, #104	; 0x68
   89d36:	4630      	mov	r0, r6
   89d38:	4639      	mov	r1, r7
   89d3a:	220a      	movs	r2, #10
   89d3c:	2300      	movs	r3, #0
   89d3e:	f7fb fa71 	bl	85224 <__aeabi_uldivmod>
   89d42:	3230      	adds	r2, #48	; 0x30
   89d44:	f805 2d01 	strb.w	r2, [r5, #-1]!
   89d48:	4630      	mov	r0, r6
   89d4a:	4639      	mov	r1, r7
   89d4c:	2300      	movs	r3, #0
   89d4e:	220a      	movs	r2, #10
   89d50:	f7fb fa68 	bl	85224 <__aeabi_uldivmod>
   89d54:	4606      	mov	r6, r0
   89d56:	460f      	mov	r7, r1
   89d58:	ea56 0307 	orrs.w	r3, r6, r7
   89d5c:	d1eb      	bne.n	89d36 <_svfiprintf_r+0x98a>
   89d5e:	e6da      	b.n	89b16 <_svfiprintf_r+0x76a>
   89d60:	aa0d      	add	r2, sp, #52	; 0x34
   89d62:	9902      	ldr	r1, [sp, #8]
   89d64:	9805      	ldr	r0, [sp, #20]
   89d66:	f7ff faa7 	bl	892b8 <__ssprint_r>
   89d6a:	2800      	cmp	r0, #0
   89d6c:	f47f ac32 	bne.w	895d4 <_svfiprintf_r+0x228>
   89d70:	e9dd 120e 	ldrd	r1, r2, [sp, #56]	; 0x38
   89d74:	f10d 0a68 	add.w	sl, sp, #104	; 0x68
   89d78:	f101 0c01 	add.w	ip, r1, #1
   89d7c:	a81c      	add	r0, sp, #112	; 0x70
   89d7e:	e59f      	b.n	898c0 <_svfiprintf_r+0x514>
   89d80:	4603      	mov	r3, r0
   89d82:	4c22      	ldr	r4, [pc, #136]	; (89e0c <_svfiprintf_r+0xa60>)
   89d84:	e5cc      	b.n	89920 <_svfiprintf_r+0x574>
   89d86:	464e      	mov	r6, r9
   89d88:	2e06      	cmp	r6, #6
   89d8a:	bf28      	it	cs
   89d8c:	2606      	movcs	r6, #6
   89d8e:	9406      	str	r4, [sp, #24]
   89d90:	9603      	str	r6, [sp, #12]
   89d92:	4d1f      	ldr	r5, [pc, #124]	; (89e10 <_svfiprintf_r+0xa64>)
   89d94:	e518      	b.n	897c8 <_svfiprintf_r+0x41c>
   89d96:	4f1f      	ldr	r7, [pc, #124]	; (89e14 <_svfiprintf_r+0xa68>)
   89d98:	e558      	b.n	8984c <_svfiprintf_r+0x4a0>
   89d9a:	4f1e      	ldr	r7, [pc, #120]	; (89e14 <_svfiprintf_r+0xa68>)
   89d9c:	e60d      	b.n	899ba <_svfiprintf_r+0x60e>
   89d9e:	46a3      	mov	fp, r4
   89da0:	f04f 0900 	mov.w	r9, #0
   89da4:	f7ff bb4f 	b.w	89446 <_svfiprintf_r+0x9a>
   89da8:	f8cd 900c 	str.w	r9, [sp, #12]
   89dac:	9406      	str	r4, [sp, #24]
   89dae:	f8cd 8000 	str.w	r8, [sp]
   89db2:	4681      	mov	r9, r0
   89db4:	f89d 402f 	ldrb.w	r4, [sp, #47]	; 0x2f
   89db8:	e6b0      	b.n	89b1c <_svfiprintf_r+0x770>
   89dba:	4603      	mov	r3, r0
   89dbc:	4661      	mov	r1, ip
   89dbe:	4c13      	ldr	r4, [pc, #76]	; (89e0c <_svfiprintf_r+0xa60>)
   89dc0:	e6e9      	b.n	89b96 <_svfiprintf_r+0x7ea>
   89dc2:	9d06      	ldr	r5, [sp, #24]
   89dc4:	f89b 3001 	ldrb.w	r3, [fp, #1]
   89dc8:	682a      	ldr	r2, [r5, #0]
   89dca:	46a3      	mov	fp, r4
   89dcc:	ea42 79e2 	orr.w	r9, r2, r2, asr #31
   89dd0:	1d2a      	adds	r2, r5, #4
   89dd2:	9206      	str	r2, [sp, #24]
   89dd4:	f7ff bb35 	b.w	89442 <_svfiprintf_r+0x96>
   89dd8:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
   89ddc:	230c      	movs	r3, #12
   89dde:	9201      	str	r2, [sp, #4]
   89de0:	9a05      	ldr	r2, [sp, #20]
   89de2:	6013      	str	r3, [r2, #0]
   89de4:	f7ff bbff 	b.w	895e6 <_svfiprintf_r+0x23a>
   89de8:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
   89dec:	e618      	b.n	89a20 <_svfiprintf_r+0x674>
   89dee:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
   89df2:	e645      	b.n	89a80 <_svfiprintf_r+0x6d4>
   89df4:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
   89df8:	e670      	b.n	89adc <_svfiprintf_r+0x730>
   89dfa:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
   89dfe:	e4a5      	b.n	8974c <_svfiprintf_r+0x3a0>
   89e00:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
   89e04:	e5f4      	b.n	899f0 <_svfiprintf_r+0x644>
   89e06:	f88d 002f 	strb.w	r0, [sp, #47]	; 0x2f
   89e0a:	e445      	b.n	89698 <_svfiprintf_r+0x2ec>
   89e0c:	0008a328 	.word	0x0008a328
   89e10:	0008a1c4 	.word	0x0008a1c4
   89e14:	0008a318 	.word	0x0008a318

00089e18 <_wctomb_r>:
   89e18:	b410      	push	{r4}
   89e1a:	4c03      	ldr	r4, [pc, #12]	; (89e28 <_wctomb_r+0x10>)
   89e1c:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
   89e20:	46a4      	mov	ip, r4
   89e22:	bc10      	pop	{r4}
   89e24:	4760      	bx	ip
   89e26:	bf00      	nop
   89e28:	20070828 	.word	0x20070828

00089e2c <__ascii_wctomb>:
   89e2c:	b119      	cbz	r1, 89e36 <__ascii_wctomb+0xa>
   89e2e:	2aff      	cmp	r2, #255	; 0xff
   89e30:	d803      	bhi.n	89e3a <__ascii_wctomb+0xe>
   89e32:	700a      	strb	r2, [r1, #0]
   89e34:	2101      	movs	r1, #1
   89e36:	4608      	mov	r0, r1
   89e38:	4770      	bx	lr
   89e3a:	238a      	movs	r3, #138	; 0x8a
   89e3c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
   89e40:	6003      	str	r3, [r0, #0]
   89e42:	e7f8      	b.n	89e36 <__ascii_wctomb+0xa>

00089e44 <_calloc_r>:
   89e44:	b510      	push	{r4, lr}
   89e46:	fb02 f101 	mul.w	r1, r2, r1
   89e4a:	f7fe f80f 	bl	87e6c <_malloc_r>
   89e4e:	4604      	mov	r4, r0
   89e50:	b1e8      	cbz	r0, 89e8e <_calloc_r+0x4a>
   89e52:	f850 2c04 	ldr.w	r2, [r0, #-4]
   89e56:	f022 0203 	bic.w	r2, r2, #3
   89e5a:	3a04      	subs	r2, #4
   89e5c:	2a24      	cmp	r2, #36	; 0x24
   89e5e:	d81f      	bhi.n	89ea0 <_calloc_r+0x5c>
   89e60:	2a13      	cmp	r2, #19
   89e62:	d916      	bls.n	89e92 <_calloc_r+0x4e>
   89e64:	2300      	movs	r3, #0
   89e66:	2a1b      	cmp	r2, #27
   89e68:	e9c0 3300 	strd	r3, r3, [r0]
   89e6c:	d91d      	bls.n	89eaa <_calloc_r+0x66>
   89e6e:	2a24      	cmp	r2, #36	; 0x24
   89e70:	e9c0 3302 	strd	r3, r3, [r0, #8]
   89e74:	bf08      	it	eq
   89e76:	e9c0 3304 	strdeq	r3, r3, [r0, #16]
   89e7a:	f04f 0300 	mov.w	r3, #0
   89e7e:	bf14      	ite	ne
   89e80:	f100 0210 	addne.w	r2, r0, #16
   89e84:	f100 0218 	addeq.w	r2, r0, #24
   89e88:	e9c2 3300 	strd	r3, r3, [r2]
   89e8c:	6093      	str	r3, [r2, #8]
   89e8e:	4620      	mov	r0, r4
   89e90:	bd10      	pop	{r4, pc}
   89e92:	4602      	mov	r2, r0
   89e94:	2300      	movs	r3, #0
   89e96:	4620      	mov	r0, r4
   89e98:	e9c2 3300 	strd	r3, r3, [r2]
   89e9c:	6093      	str	r3, [r2, #8]
   89e9e:	bd10      	pop	{r4, pc}
   89ea0:	2100      	movs	r1, #0
   89ea2:	f7fb fb85 	bl	855b0 <memset>
   89ea6:	4620      	mov	r0, r4
   89ea8:	bd10      	pop	{r4, pc}
   89eaa:	f100 0208 	add.w	r2, r0, #8
   89eae:	e7f1      	b.n	89e94 <_calloc_r+0x50>

00089eb0 <__aeabi_dcmpun>:
   89eb0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   89eb4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   89eb8:	d102      	bne.n	89ec0 <__aeabi_dcmpun+0x10>
   89eba:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   89ebe:	d10a      	bne.n	89ed6 <__aeabi_dcmpun+0x26>
   89ec0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   89ec4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   89ec8:	d102      	bne.n	89ed0 <__aeabi_dcmpun+0x20>
   89eca:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   89ece:	d102      	bne.n	89ed6 <__aeabi_dcmpun+0x26>
   89ed0:	f04f 0000 	mov.w	r0, #0
   89ed4:	4770      	bx	lr
   89ed6:	f04f 0001 	mov.w	r0, #1
   89eda:	4770      	bx	lr
   89edc:	00006325 	.word	0x00006325
   89ee0:	00003154 	.word	0x00003154
   89ee4:	00003254 	.word	0x00003254
   89ee8:	00003354 	.word	0x00003354
   89eec:	00003454 	.word	0x00003454
   89ef0:	203d2066 	.word	0x203d2066
   89ef4:	66322e25 	.word	0x66322e25
   89ef8:	00000020 	.word	0x00000020
   89efc:	756e6973 	.word	0x756e6973
   89f00:	00000073 	.word	0x00000073
   89f04:	61697274 	.word	0x61697274
   89f08:	0000676e 	.word	0x0000676e
   89f0c:	00006425 	.word	0x00006425
   89f10:	3a617275 	.word	0x3a617275
   89f14:	64322520 	.word	0x64322520
   89f18:	6432253a 	.word	0x6432253a
   89f1c:	6432253a 	.word	0x6432253a
   89f20:	00000000 	.word	0x00000000
   89f24:	6f727245 	.word	0x6f727245
   89f28:	50203a72 	.word	0x50203a72
   89f2c:	20455241 	.word	0x20455241
   89f30:	20206425 	.word	0x20206425
   89f34:	41524620 	.word	0x41524620
   89f38:	2520454d 	.word	0x2520454d
   89f3c:	564f2064 	.word	0x564f2064
   89f40:	25205245 	.word	0x25205245
   89f44:	00000064 	.word	0x00000064
   89f48:	20202020 	.word	0x20202020
   89f4c:	20202020 	.word	0x20202020
   89f50:	20202020 	.word	0x20202020
   89f54:	20202020 	.word	0x20202020
   89f58:	20202020 	.word	0x20202020
   89f5c:	20202020 	.word	0x20202020
   89f60:	20202020 	.word	0x20202020
   89f64:	00202020 	.word	0x00202020
   89f68:	20202020 	.word	0x20202020
   89f6c:	20202020 	.word	0x20202020
   89f70:	20202020 	.word	0x20202020
   89f74:	20202020 	.word	0x20202020
   89f78:	20202020 	.word	0x20202020
   89f7c:	20202020 	.word	0x20202020
   89f80:	20202020 	.word	0x20202020
   89f84:	20202020 	.word	0x20202020
   89f88:	00000000 	.word	0x00000000

00089f8c <npio2_hw>:
   89f8c:	3ff921fb 400921fb 4012d97c 401921fb     .!.?.!.@|..@.!.@
   89f9c:	401f6a7a 4022d97c 4025fdbb 402921fb     zj.@|."@..%@.!)@
   89fac:	402c463a 402f6a7a 4031475c 4032d97c     :F,@zj/@\G1@|.2@
   89fbc:	40346b9c 4035fdbb 40378fdb 403921fb     .k4@..5@..7@.!9@
   89fcc:	403ab41b 403c463a 403dd85a 403f6a7a     ..:@:F<@Z.=@zj?@
   89fdc:	40407e4c 4041475c 4042106c 4042d97c     L~@@\GA@l.B@|.B@
   89fec:	4043a28c 40446b9c 404534ac 4045fdbb     ..C@.kD@.4E@..E@
   89ffc:	4046c6cb 40478fdb 404858eb 404921fb     ..F@..G@.XH@.!I@

0008a00c <two_over_pi>:
   8a00c:	00a2f983 006e4e44 001529fc 002757d1     ....DNn..)...W'.
   8a01c:	00f534dd 00c0db62 0095993c 00439041     .4..b...<...A.C.
   8a02c:	00fe5163 00abdebb 00c561b7 00246e3a     cQ.......a..:n$.
   8a03c:	00424dd2 00e00649 002eea09 00d1921c     .MB.I...........
   8a04c:	00fe1deb 001cb129 00a73ee8 008235f5     ....)....>...5..
   8a05c:	002ebb44 0084e99c 007026b4 005f7e41     D........&p.A~_.
   8a06c:	003991d6 00398353 0039f49c 00845f8b     ..9.S.9...9.._..
   8a07c:	00bdf928 003b1ff8 0097ffde 0005980f     (.....;.........
   8a08c:	00ef2f11 008b5a0a 006d1f6d 00367ecf     ./...Z..m.m..~6.
   8a09c:	0027cb09 00b74f46 003f669e 005fea2d     ..'.FO...f?.-._.
   8a0ac:	007527ba 00c7ebe5 00f17b3d 000739f7     .'u.....={...9..
   8a0bc:	008a5292 00ea6bfb 005fb11f 008d5d08     .R...k...._..]..
   8a0cc:	00560330 0046fc7b 006babf0 00cfbc20     0.V.{.F...k. ...
   8a0dc:	009af436 001da9e3 0091615e 00e61b08     6.......^a......
   8a0ec:	00659985 005f14a0 0068408d 00ffd880     ..e..._..@h.....
   8a0fc:	004d7327 00310606 001556ca 0073a8c9     'sM...1..V....s.
   8a10c:	0060e27b 00c08c6b 00000000              {.`.k.......

0008a118 <init_jk>:
   8a118:	00000002 00000003 00000004 00000006     ................

0008a128 <PIo2>:
   8a128:	40000000 3ff921fb 00000000 3e74442d     ...@.!.?....-Dt>
   8a138:	80000000 3cf84698 60000000 3b78cc51     .....F.<...`Q.x;
   8a148:	80000000 39f01b83 40000000 387a2520     .......9...@ %z8
   8a158:	80000000 36e38222 00000000 3569f31d     ...."..6......i5

0008a168 <_global_impure_ptr>:
   8a168:	20070400                                ... 

0008a16c <blanks.7291>:
   8a16c:	20202020 20202020 20202020 20202020                     

0008a17c <zeroes.7292>:
   8a17c:	30303030 30303030 30303030 30303030     0000000000000000
   8a18c:	00464e49 00666e69 004e414e 006e616e     INF.inf.NAN.nan.
   8a19c:	33323130 37363534 42413938 46454443     0123456789ABCDEF
   8a1ac:	00000000 33323130 37363534 62613938     ....0123456789ab
   8a1bc:	66656463 00000000 6c756e28 0000296c     cdef....(null)..
   8a1cc:	00000030 69666e49 7974696e 00000000     0...Infinity....
   8a1dc:	004e614e 00000043 49534f50 00000058     NaN.C...POSIX...
   8a1ec:	0000002e                                ....

0008a1f0 <p05.6073>:
   8a1f0:	00000005 00000019 0000007d 00000000     ........}.......

0008a200 <__mprec_tens>:
   8a200:	00000000 3ff00000 00000000 40240000     .......?......$@
   8a210:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   8a220:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   8a230:	00000000 412e8480 00000000 416312d0     .......A......cA
   8a240:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   8a250:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   8a260:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   8a270:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   8a280:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   8a290:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   8a2a0:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   8a2b0:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   8a2c0:	79d99db4 44ea7843                       ...yCx.D

0008a2c8 <__mprec_tinytens>:
   8a2c8:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
   8a2d8:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
   8a2e8:	64ac6f43 0ac80628                       Co.d(...

0008a2f0 <__mprec_bigtens>:
   8a2f0:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   8a300:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   8a310:	7f73bf3c 75154fdd                       <.s..O.u

0008a318 <blanks.7271>:
   8a318:	20202020 20202020 20202020 20202020                     

0008a328 <zeroes.7272>:
   8a328:	30303030 30303030 30303030 30303030     0000000000000000

0008a338 <_ctype_>:
   8a338:	20202000 20202020 28282020 20282828     .         ((((( 
   8a348:	20202020 20202020 20202020 20202020                     
   8a358:	10108820 10101010 10101010 10101010      ...............
   8a368:	04040410 04040404 10040404 10101010     ................
   8a378:	41411010 41414141 01010101 01010101     ..AAAAAA........
   8a388:	01010101 01010101 01010101 10101010     ................
   8a398:	42421010 42424242 02020202 02020202     ..BBBBBB........
   8a3a8:	02020202 02020202 02020202 10101010     ................
   8a3b8:	00000020 00000000 00000000 00000000      ...............
	...

0008a43c <_init>:
   8a43c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8a43e:	bf00      	nop
   8a440:	bcf8      	pop	{r3, r4, r5, r6, r7}
   8a442:	bc08      	pop	{r3}
   8a444:	469e      	mov	lr, r3
   8a446:	4770      	bx	lr

0008a448 <__init_array_start>:
   8a448:	00086c6d 	.word	0x00086c6d

0008a44c <__frame_dummy_init_array_entry>:
   8a44c:	0008015d                                ]...

0008a450 <_fini>:
   8a450:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   8a452:	bf00      	nop
   8a454:	bcf8      	pop	{r3, r4, r5, r6, r7}
   8a456:	bc08      	pop	{r3}
   8a458:	469e      	mov	lr, r3
   8a45a:	4770      	bx	lr
   8a45c:	0000      	movs	r0, r0
	...

0008a460 <__portable_delay_cycles_veneer>:
   8a460:	f85f f000 	ldr.w	pc, [pc]	; 8a464 <__portable_delay_cycles_veneer+0x4>
   8a464:	2007018d 	.word	0x2007018d

0008a468 <__system_init_flash_veneer>:
   8a468:	f85f f000 	ldr.w	pc, [pc]	; 8a46c <__system_init_flash_veneer+0x4>
   8a46c:	200700d1 	.word	0x200700d1

0008a470 <__fini_array_start>:
   8a470:	00080135 	.word	0x00080135

Disassembly of section .relocate:

20070000 <SystemInit>:
{
20070000:	b480      	push	{r7}
20070002:	af00      	add	r7, sp, #0
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
20070004:	4b2a      	ldr	r3, [pc, #168]	; (200700b0 <SystemInit+0xb0>)
20070006:	f44f 6280 	mov.w	r2, #1024	; 0x400
2007000a:	601a      	str	r2, [r3, #0]
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
2007000c:	4b29      	ldr	r3, [pc, #164]	; (200700b4 <SystemInit+0xb4>)
2007000e:	f44f 6280 	mov.w	r2, #1024	; 0x400
20070012:	601a      	str	r2, [r3, #0]
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
20070014:	4b28      	ldr	r3, [pc, #160]	; (200700b8 <SystemInit+0xb8>)
20070016:	6a1b      	ldr	r3, [r3, #32]
20070018:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
2007001c:	2b00      	cmp	r3, #0
2007001e:	d109      	bne.n	20070034 <SystemInit+0x34>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070020:	4b25      	ldr	r3, [pc, #148]	; (200700b8 <SystemInit+0xb8>)
20070022:	4a26      	ldr	r2, [pc, #152]	; (200700bc <SystemInit+0xbc>)
20070024:	621a      	str	r2, [r3, #32]
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
20070026:	bf00      	nop
20070028:	4b23      	ldr	r3, [pc, #140]	; (200700b8 <SystemInit+0xb8>)
2007002a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
2007002c:	f003 0301 	and.w	r3, r3, #1
20070030:	2b00      	cmp	r3, #0
20070032:	d0f9      	beq.n	20070028 <SystemInit+0x28>
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070034:	4b20      	ldr	r3, [pc, #128]	; (200700b8 <SystemInit+0xb8>)
20070036:	4a22      	ldr	r2, [pc, #136]	; (200700c0 <SystemInit+0xc0>)
20070038:	621a      	str	r2, [r3, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
2007003a:	bf00      	nop
2007003c:	4b1e      	ldr	r3, [pc, #120]	; (200700b8 <SystemInit+0xb8>)
2007003e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
20070040:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
20070044:	2b00      	cmp	r3, #0
20070046:	d0f9      	beq.n	2007003c <SystemInit+0x3c>
 	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20070048:	4b1b      	ldr	r3, [pc, #108]	; (200700b8 <SystemInit+0xb8>)
2007004a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
2007004c:	f023 0303 	bic.w	r3, r3, #3
20070050:	4a19      	ldr	r2, [pc, #100]	; (200700b8 <SystemInit+0xb8>)
20070052:	f043 0301 	orr.w	r3, r3, #1
20070056:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070058:	bf00      	nop
2007005a:	4b17      	ldr	r3, [pc, #92]	; (200700b8 <SystemInit+0xb8>)
2007005c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
2007005e:	f003 0308 	and.w	r3, r3, #8
20070062:	2b00      	cmp	r3, #0
20070064:	d0f9      	beq.n	2007005a <SystemInit+0x5a>
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
20070066:	4b14      	ldr	r3, [pc, #80]	; (200700b8 <SystemInit+0xb8>)
20070068:	4a16      	ldr	r2, [pc, #88]	; (200700c4 <SystemInit+0xc4>)
2007006a:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
2007006c:	bf00      	nop
2007006e:	4b12      	ldr	r3, [pc, #72]	; (200700b8 <SystemInit+0xb8>)
20070070:	6e9b      	ldr	r3, [r3, #104]	; 0x68
20070072:	f003 0302 	and.w	r3, r3, #2
20070076:	2b00      	cmp	r3, #0
20070078:	d0f9      	beq.n	2007006e <SystemInit+0x6e>
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
2007007a:	4b0f      	ldr	r3, [pc, #60]	; (200700b8 <SystemInit+0xb8>)
2007007c:	2211      	movs	r2, #17
2007007e:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070080:	bf00      	nop
20070082:	4b0d      	ldr	r3, [pc, #52]	; (200700b8 <SystemInit+0xb8>)
20070084:	6e9b      	ldr	r3, [r3, #104]	; 0x68
20070086:	f003 0308 	and.w	r3, r3, #8
2007008a:	2b00      	cmp	r3, #0
2007008c:	d0f9      	beq.n	20070082 <SystemInit+0x82>
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
2007008e:	4b0a      	ldr	r3, [pc, #40]	; (200700b8 <SystemInit+0xb8>)
20070090:	2212      	movs	r2, #18
20070092:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070094:	bf00      	nop
20070096:	4b08      	ldr	r3, [pc, #32]	; (200700b8 <SystemInit+0xb8>)
20070098:	6e9b      	ldr	r3, [r3, #104]	; 0x68
2007009a:	f003 0308 	and.w	r3, r3, #8
2007009e:	2b00      	cmp	r3, #0
200700a0:	d0f9      	beq.n	20070096 <SystemInit+0x96>
	SystemCoreClock = CHIP_FREQ_CPU_MAX;
200700a2:	4b09      	ldr	r3, [pc, #36]	; (200700c8 <SystemInit+0xc8>)
200700a4:	4a09      	ldr	r2, [pc, #36]	; (200700cc <SystemInit+0xcc>)
200700a6:	601a      	str	r2, [r3, #0]
}
200700a8:	bf00      	nop
200700aa:	46bd      	mov	sp, r7
200700ac:	bc80      	pop	{r7}
200700ae:	4770      	bx	lr
200700b0:	400e0a00 	.word	0x400e0a00
200700b4:	400e0c00 	.word	0x400e0c00
200700b8:	400e0600 	.word	0x400e0600
200700bc:	00370809 	.word	0x00370809
200700c0:	01370809 	.word	0x01370809
200700c4:	200d3f01 	.word	0x200d3f01
200700c8:	200703f0 	.word	0x200703f0
200700cc:	0501bd00 	.word	0x0501bd00

200700d0 <system_init_flash>:
 * Initialize flash.
 */
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
200700d0:	b480      	push	{r7}
200700d2:	b083      	sub	sp, #12
200700d4:	af00      	add	r7, sp, #0
200700d6:	6078      	str	r0, [r7, #4]
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200700d8:	687b      	ldr	r3, [r7, #4]
200700da:	4a25      	ldr	r2, [pc, #148]	; (20070170 <system_init_flash+0xa0>)
200700dc:	4293      	cmp	r3, r2
200700de:	d806      	bhi.n	200700ee <system_init_flash+0x1e>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
200700e0:	4b24      	ldr	r3, [pc, #144]	; (20070174 <system_init_flash+0xa4>)
200700e2:	2200      	movs	r2, #0
200700e4:	601a      	str	r2, [r3, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
200700e6:	4b24      	ldr	r3, [pc, #144]	; (20070178 <system_init_flash+0xa8>)
200700e8:	2200      	movs	r2, #0
200700ea:	601a      	str	r2, [r3, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
	}
}
200700ec:	e03b      	b.n	20070166 <system_init_flash+0x96>
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200700ee:	687b      	ldr	r3, [r7, #4]
200700f0:	4a22      	ldr	r2, [pc, #136]	; (2007017c <system_init_flash+0xac>)
200700f2:	4293      	cmp	r3, r2
200700f4:	d808      	bhi.n	20070108 <system_init_flash+0x38>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
200700f6:	4b1f      	ldr	r3, [pc, #124]	; (20070174 <system_init_flash+0xa4>)
200700f8:	f44f 7280 	mov.w	r2, #256	; 0x100
200700fc:	601a      	str	r2, [r3, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
200700fe:	4b1e      	ldr	r3, [pc, #120]	; (20070178 <system_init_flash+0xa8>)
20070100:	f44f 7280 	mov.w	r2, #256	; 0x100
20070104:	601a      	str	r2, [r3, #0]
}
20070106:	e02e      	b.n	20070166 <system_init_flash+0x96>
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
20070108:	687b      	ldr	r3, [r7, #4]
2007010a:	4a1d      	ldr	r2, [pc, #116]	; (20070180 <system_init_flash+0xb0>)
2007010c:	4293      	cmp	r3, r2
2007010e:	d808      	bhi.n	20070122 <system_init_flash+0x52>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
20070110:	4b18      	ldr	r3, [pc, #96]	; (20070174 <system_init_flash+0xa4>)
20070112:	f44f 7200 	mov.w	r2, #512	; 0x200
20070116:	601a      	str	r2, [r3, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
20070118:	4b17      	ldr	r3, [pc, #92]	; (20070178 <system_init_flash+0xa8>)
2007011a:	f44f 7200 	mov.w	r2, #512	; 0x200
2007011e:	601a      	str	r2, [r3, #0]
}
20070120:	e021      	b.n	20070166 <system_init_flash+0x96>
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
20070122:	687b      	ldr	r3, [r7, #4]
20070124:	4a17      	ldr	r2, [pc, #92]	; (20070184 <system_init_flash+0xb4>)
20070126:	4293      	cmp	r3, r2
20070128:	d808      	bhi.n	2007013c <system_init_flash+0x6c>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
2007012a:	4b12      	ldr	r3, [pc, #72]	; (20070174 <system_init_flash+0xa4>)
2007012c:	f44f 7240 	mov.w	r2, #768	; 0x300
20070130:	601a      	str	r2, [r3, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
20070132:	4b11      	ldr	r3, [pc, #68]	; (20070178 <system_init_flash+0xa8>)
20070134:	f44f 7240 	mov.w	r2, #768	; 0x300
20070138:	601a      	str	r2, [r3, #0]
}
2007013a:	e014      	b.n	20070166 <system_init_flash+0x96>
	} else if (ul_clk < CHIP_FREQ_FWS_4) {
2007013c:	687b      	ldr	r3, [r7, #4]
2007013e:	4a12      	ldr	r2, [pc, #72]	; (20070188 <system_init_flash+0xb8>)
20070140:	4293      	cmp	r3, r2
20070142:	d808      	bhi.n	20070156 <system_init_flash+0x86>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
20070144:	4b0b      	ldr	r3, [pc, #44]	; (20070174 <system_init_flash+0xa4>)
20070146:	f44f 6280 	mov.w	r2, #1024	; 0x400
2007014a:	601a      	str	r2, [r3, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
2007014c:	4b0a      	ldr	r3, [pc, #40]	; (20070178 <system_init_flash+0xa8>)
2007014e:	f44f 6280 	mov.w	r2, #1024	; 0x400
20070152:	601a      	str	r2, [r3, #0]
}
20070154:	e007      	b.n	20070166 <system_init_flash+0x96>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
20070156:	4b07      	ldr	r3, [pc, #28]	; (20070174 <system_init_flash+0xa4>)
20070158:	f44f 62a0 	mov.w	r2, #1280	; 0x500
2007015c:	601a      	str	r2, [r3, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
2007015e:	4b06      	ldr	r3, [pc, #24]	; (20070178 <system_init_flash+0xa8>)
20070160:	f44f 62a0 	mov.w	r2, #1280	; 0x500
20070164:	601a      	str	r2, [r3, #0]
}
20070166:	bf00      	nop
20070168:	370c      	adds	r7, #12
2007016a:	46bd      	mov	sp, r7
2007016c:	bc80      	pop	{r7}
2007016e:	4770      	bx	lr
20070170:	0121eabf 	.word	0x0121eabf
20070174:	400e0a00 	.word	0x400e0a00
20070178:	400e0c00 	.word	0x400e0c00
2007017c:	02faf07f 	.word	0x02faf07f
20070180:	03d08fff 	.word	0x03d08fff
20070184:	04c4b3ff 	.word	0x04c4b3ff
20070188:	055d4a7f 	.word	0x055d4a7f

2007018c <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
2007018c:	f3bf 8f5f 	dmb	sy
20070190:	3801      	subs	r0, #1
20070192:	d1fb      	bne.n	2007018c <portable_delay_cycles>
		"loop: DMB	\n"
		"SUBS R0, R0, #1  \n"
		"BNE.N loop         "
	);
}
20070194:	4770      	bx	lr
	...

20070198 <lcd_buff>:
20070198:	2020 2020 2020 2020 2020 2020 2020 2020                     
200701a8:	2020 2020 2020 2020 2020 2020 2020 2020                     
200701b8:	0000 0000                                   ....

200701bc <lcd_string>:
200701bc:	0198 2007                                   ... 

200701c0 <signal>:
200701c0:	0000 3f80 0e40 2007                         ...?@.. 

200701c8 <direction.8139>:
200701c8:	0001 0000                                   ....

200701cc <task_lcd>:
200701cc:	0000 0000 434c 0044 0000 0000 0000 0000     ....LCD.........
200701dc:	0000 0100 0000 0000 0b9d 0008               ............

200701e8 <task_ura>:
200701e8:	0000 0000 5255 0041 0000 0000 0000 0000     ....URA.........
200701f8:	0000 0100 0000 0000 0e15 0008               ............

20070204 <task_text>:
20070204:	0000 0000 4143 434c 0000 0000 0000 0000     ....CALC........
20070214:	0000 0100 0000 0000 0e51 0008               ........Q...

20070220 <task_tipke>:
20070220:	0000 0000 4954 4b50 0045 0000 0000 0000     ....TIPKE.......
20070230:	0000 0100 0000 0000 0f91 0008               ............

2007023c <task_led>:
2007023c:	0000 0000 454c 0044 0000 0000 0000 0000     ....LED.........
	...
20070254:	100d 0008                                   ....

20070258 <task_sent>:
20070258:	0000 0000 4553 544e 0000 0000 0000 0000     ....SENT........
	...
20070270:	10e9 0008                                   ....

20070274 <task_text1>:
20070274:	0000 0000 4f4c 4b4f 0000 0000 0000 0000     ....LOOK........
20070284:	0000 0100 0001 0000 1141 0008               ........A...

20070290 <task_tipke1>:
20070290:	0000 0000 4954 4b50 0045 0000 0000 0000     ....TIPKE.......
200702a0:	0000 0100 0001 0000 11f1 0008               ............

200702ac <task_adc>:
200702ac:	0000 0000 4441 0043 0000 0000 0000 0000     ....ADC.........
200702bc:	0000 0100 0001 0000 1c01 0008               ............

200702c8 <task_ura2>:
200702c8:	0000 0000 5255 0041 0000 0000 0000 0000     ....URA.........
200702d8:	0000 0100 0002 0000 1235 0008               ........5...

200702e4 <task_text2>:
200702e4:	0000 0000 4143 434c 0000 0000 0000 0000     ....CALC........
200702f4:	0000 0100 0002 0000 1271 0008               ........q...

20070300 <task_tipke2>:
20070300:	0000 0000 4954 4b50 0045 0000 0000 0000     ....TIPKE.......
20070310:	0000 0100 0002 0000 12e9 0008               ............

2007031c <task_led2>:
2007031c:	0000 0000 454c 0044 0000 0000 0000 0000     ....LED.........
2007032c:	0000 0100 0002 0000 136d 0008               ........m...

20070338 <task_ura3>:
20070338:	0000 0000 5255 0041 0000 0000 0000 0000     ....URA.........
20070348:	0000 0100 0003 0000 1449 0008               ........I...

20070354 <task_calc>:
20070354:	0000 0000 4143 434c 0000 0000 0000 0000     ....CALC........
20070364:	0000 0100 0003 0000 1481 0008               ............

20070370 <task_tipke3>:
20070370:	0000 0000 4954 4b50 0045 0000 0000 0000     ....TIPKE.......
20070380:	0000 0100 0003 0000 152d 0008               ........-...

2007038c <task_priv>:
2007038c:	01e8 2007                                   ... 

20070390 <task_list0>:
20070390:	0220 2007 0204 2007 01cc 2007 0258 2007      .. ... ... X.. 
200703a0:	023c 2007 0000 0000                         <.. ....

200703a8 <task_list1>:
200703a8:	0290 2007 0274 2007 01cc 2007 02ac 2007     ... t.. ... ... 
200703b8:	0000 0000                                   ....

200703bc <task_list2>:
200703bc:	0300 2007 02e4 2007 01cc 2007 02c8 2007     ... ... ... ... 
200703cc:	0000 0000                                   ....

200703d0 <task_list3>:
200703d0:	0338 2007 0370 2007 0354 2007 01cc 2007     8.. p.. T.. ... 
200703e0:	0000 0000                                   ....

200703e4 <keys_fifo>:
200703e4:	0000 0000 000a 0000 0e90 2007               ........... 

200703f0 <SystemCoreClock>:
200703f0:	0900 003d 0000 0000                         ..=.....

200703f8 <_impure_ptr>:
200703f8:	0400 2007 0000 0000                         ... ....

20070400 <impure_data>:
20070400:	0000 0000 06ec 2007 0754 2007 07bc 2007     ....... T.. ... 
	...
200704a8:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
200704b8:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20070828 <__global_locale>:
20070828:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20070848:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20070868:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20070888:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200708a8:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200708c8:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200708e8:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20070908:	9e2d 0008 83c9 0008 0000 0000 a338 0008     -...........8...
20070918:	a1ec 0008 a1ac 0008 a1ac 0008 a1ac 0008     ................
20070928:	a1ac 0008 a1ac 0008 a1ac 0008 a1ac 0008     ................
20070938:	a1ac 0008 a1ac 0008 ffff ffff ffff ffff     ................
20070948:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
20070970:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...

20070994 <__malloc_av_>:
	...
2007099c:	0994 2007 0994 2007 099c 2007 099c 2007     ... ... ... ... 
200709ac:	09a4 2007 09a4 2007 09ac 2007 09ac 2007     ... ... ... ... 
200709bc:	09b4 2007 09b4 2007 09bc 2007 09bc 2007     ... ... ... ... 
200709cc:	09c4 2007 09c4 2007 09cc 2007 09cc 2007     ... ... ... ... 
200709dc:	09d4 2007 09d4 2007 09dc 2007 09dc 2007     ... ... ... ... 
200709ec:	09e4 2007 09e4 2007 09ec 2007 09ec 2007     ... ... ... ... 
200709fc:	09f4 2007 09f4 2007 09fc 2007 09fc 2007     ... ... ... ... 
20070a0c:	0a04 2007 0a04 2007 0a0c 2007 0a0c 2007     ... ... ... ... 
20070a1c:	0a14 2007 0a14 2007 0a1c 2007 0a1c 2007     ... ... ... ... 
20070a2c:	0a24 2007 0a24 2007 0a2c 2007 0a2c 2007     $.. $.. ,.. ,.. 
20070a3c:	0a34 2007 0a34 2007 0a3c 2007 0a3c 2007     4.. 4.. <.. <.. 
20070a4c:	0a44 2007 0a44 2007 0a4c 2007 0a4c 2007     D.. D.. L.. L.. 
20070a5c:	0a54 2007 0a54 2007 0a5c 2007 0a5c 2007     T.. T.. \.. \.. 
20070a6c:	0a64 2007 0a64 2007 0a6c 2007 0a6c 2007     d.. d.. l.. l.. 
20070a7c:	0a74 2007 0a74 2007 0a7c 2007 0a7c 2007     t.. t.. |.. |.. 
20070a8c:	0a84 2007 0a84 2007 0a8c 2007 0a8c 2007     ... ... ... ... 
20070a9c:	0a94 2007 0a94 2007 0a9c 2007 0a9c 2007     ... ... ... ... 
20070aac:	0aa4 2007 0aa4 2007 0aac 2007 0aac 2007     ... ... ... ... 
20070abc:	0ab4 2007 0ab4 2007 0abc 2007 0abc 2007     ... ... ... ... 
20070acc:	0ac4 2007 0ac4 2007 0acc 2007 0acc 2007     ... ... ... ... 
20070adc:	0ad4 2007 0ad4 2007 0adc 2007 0adc 2007     ... ... ... ... 
20070aec:	0ae4 2007 0ae4 2007 0aec 2007 0aec 2007     ... ... ... ... 
20070afc:	0af4 2007 0af4 2007 0afc 2007 0afc 2007     ... ... ... ... 
20070b0c:	0b04 2007 0b04 2007 0b0c 2007 0b0c 2007     ... ... ... ... 
20070b1c:	0b14 2007 0b14 2007 0b1c 2007 0b1c 2007     ... ... ... ... 
20070b2c:	0b24 2007 0b24 2007 0b2c 2007 0b2c 2007     $.. $.. ,.. ,.. 
20070b3c:	0b34 2007 0b34 2007 0b3c 2007 0b3c 2007     4.. 4.. <.. <.. 
20070b4c:	0b44 2007 0b44 2007 0b4c 2007 0b4c 2007     D.. D.. L.. L.. 
20070b5c:	0b54 2007 0b54 2007 0b5c 2007 0b5c 2007     T.. T.. \.. \.. 
20070b6c:	0b64 2007 0b64 2007 0b6c 2007 0b6c 2007     d.. d.. l.. l.. 
20070b7c:	0b74 2007 0b74 2007 0b7c 2007 0b7c 2007     t.. t.. |.. |.. 
20070b8c:	0b84 2007 0b84 2007 0b8c 2007 0b8c 2007     ... ... ... ... 
20070b9c:	0b94 2007 0b94 2007 0b9c 2007 0b9c 2007     ... ... ... ... 
20070bac:	0ba4 2007 0ba4 2007 0bac 2007 0bac 2007     ... ... ... ... 
20070bbc:	0bb4 2007 0bb4 2007 0bbc 2007 0bbc 2007     ... ... ... ... 
20070bcc:	0bc4 2007 0bc4 2007 0bcc 2007 0bcc 2007     ... ... ... ... 
20070bdc:	0bd4 2007 0bd4 2007 0bdc 2007 0bdc 2007     ... ... ... ... 
20070bec:	0be4 2007 0be4 2007 0bec 2007 0bec 2007     ... ... ... ... 
20070bfc:	0bf4 2007 0bf4 2007 0bfc 2007 0bfc 2007     ... ... ... ... 
20070c0c:	0c04 2007 0c04 2007 0c0c 2007 0c0c 2007     ... ... ... ... 
20070c1c:	0c14 2007 0c14 2007 0c1c 2007 0c1c 2007     ... ... ... ... 
20070c2c:	0c24 2007 0c24 2007 0c2c 2007 0c2c 2007     $.. $.. ,.. ,.. 
20070c3c:	0c34 2007 0c34 2007 0c3c 2007 0c3c 2007     4.. 4.. <.. <.. 
20070c4c:	0c44 2007 0c44 2007 0c4c 2007 0c4c 2007     D.. D.. L.. L.. 
20070c5c:	0c54 2007 0c54 2007 0c5c 2007 0c5c 2007     T.. T.. \.. \.. 
20070c6c:	0c64 2007 0c64 2007 0c6c 2007 0c6c 2007     d.. d.. l.. l.. 
20070c7c:	0c74 2007 0c74 2007 0c7c 2007 0c7c 2007     t.. t.. |.. |.. 
20070c8c:	0c84 2007 0c84 2007 0c8c 2007 0c8c 2007     ... ... ... ... 
20070c9c:	0c94 2007 0c94 2007 0c9c 2007 0c9c 2007     ... ... ... ... 
20070cac:	0ca4 2007 0ca4 2007 0cac 2007 0cac 2007     ... ... ... ... 
20070cbc:	0cb4 2007 0cb4 2007 0cbc 2007 0cbc 2007     ... ... ... ... 
20070ccc:	0cc4 2007 0cc4 2007 0ccc 2007 0ccc 2007     ... ... ... ... 
20070cdc:	0cd4 2007 0cd4 2007 0cdc 2007 0cdc 2007     ... ... ... ... 
20070cec:	0ce4 2007 0ce4 2007 0cec 2007 0cec 2007     ... ... ... ... 
20070cfc:	0cf4 2007 0cf4 2007 0cfc 2007 0cfc 2007     ... ... ... ... 
20070d0c:	0d04 2007 0d04 2007 0d0c 2007 0d0c 2007     ... ... ... ... 
20070d1c:	0d14 2007 0d14 2007 0d1c 2007 0d1c 2007     ... ... ... ... 
20070d2c:	0d24 2007 0d24 2007 0d2c 2007 0d2c 2007     $.. $.. ,.. ,.. 
20070d3c:	0d34 2007 0d34 2007 0d3c 2007 0d3c 2007     4.. 4.. <.. <.. 
20070d4c:	0d44 2007 0d44 2007 0d4c 2007 0d4c 2007     D.. D.. L.. L.. 
20070d5c:	0d54 2007 0d54 2007 0d5c 2007 0d5c 2007     T.. T.. \.. \.. 
20070d6c:	0d64 2007 0d64 2007 0d6c 2007 0d6c 2007     d.. d.. l.. l.. 
20070d7c:	0d74 2007 0d74 2007 0d7c 2007 0d7c 2007     t.. t.. |.. |.. 
20070d8c:	0d84 2007 0d84 2007 0d8c 2007 0d8c 2007     ... ... ... ... 

20070d9c <__malloc_sbrk_base>:
20070d9c:	ffff ffff                                   ....

20070da0 <__malloc_trim_threshold>:
20070da0:	0000 0002                                   ....
